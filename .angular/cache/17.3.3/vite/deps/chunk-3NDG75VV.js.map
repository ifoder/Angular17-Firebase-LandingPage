{
  "version": 3,
  "sources": ["../../../../../node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-core-tree.mjs", "../../../../../node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-tree.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { Injectable, InjectionToken } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTreeNode {\n  get treeService() {\n    return this.service || this.parentNode && this.parentNode.treeService;\n  }\n  /**\n   * Init nzTreeNode\n   *\n   * @param option: user's input\n   * @param parent\n   * @param service: base nzTreeService\n   */\n  constructor(option, parent = null, service = null) {\n    this._title = '';\n    this.level = 0;\n    // Parent Node\n    this.parentNode = null;\n    this._icon = '';\n    this._children = [];\n    this._isLeaf = false;\n    this._isChecked = false;\n    this._isSelectable = false;\n    this._isDisabled = false;\n    this._isDisableCheckbox = false;\n    this._isExpanded = false;\n    this._isHalfChecked = false;\n    this._isSelected = false;\n    this._isLoading = false;\n    this.canHide = false;\n    this.isMatched = false;\n    this.service = null;\n    if (option instanceof NzTreeNode) {\n      return option;\n    }\n    this.service = service || null;\n    this.origin = option;\n    this.key = option.key;\n    this.parentNode = parent;\n    this._title = option.title || '---';\n    this._icon = option.icon || '';\n    this._isLeaf = option.isLeaf || false;\n    this._children = [];\n    // option params\n    this._isChecked = option.checked || false;\n    this._isSelectable = option.disabled || option.selectable !== false;\n    this._isDisabled = option.disabled || false;\n    this._isDisableCheckbox = option.disableCheckbox || false;\n    this._isExpanded = option.isLeaf ? false : option.expanded || false;\n    this._isHalfChecked = false;\n    this._isSelected = !option.disabled && option.selected || false;\n    this._isLoading = false;\n    this.isMatched = false;\n    /**\n     * parent's checked status will affect children while initializing\n     */\n    if (parent) {\n      this.level = parent.level + 1;\n    } else {\n      this.level = 0;\n    }\n    if (typeof option.children !== 'undefined' && option.children !== null) {\n      option.children.forEach(nodeOptions => {\n        const s = this.treeService;\n        if (s && !s.isCheckStrictly && option.checked && !option.disabled && !nodeOptions.disabled && !nodeOptions.disableCheckbox) {\n          nodeOptions.checked = option.checked;\n        }\n        this._children.push(new NzTreeNode(nodeOptions, this));\n      });\n    }\n  }\n  /**\n   * auto generate\n   * get\n   * set\n   */\n  get title() {\n    return this._title;\n  }\n  set title(value) {\n    this._title = value;\n    this.update();\n  }\n  get icon() {\n    return this._icon;\n  }\n  set icon(value) {\n    this._icon = value;\n    this.update();\n  }\n  get children() {\n    return this._children;\n  }\n  set children(value) {\n    this._children = value;\n    this.update();\n  }\n  get isLeaf() {\n    return this._isLeaf;\n  }\n  set isLeaf(value) {\n    this._isLeaf = value;\n    this.update();\n  }\n  get isChecked() {\n    return this._isChecked;\n  }\n  set isChecked(value) {\n    this._isChecked = value;\n    this.origin.checked = value;\n    this.afterValueChange('isChecked');\n  }\n  get isHalfChecked() {\n    return this._isHalfChecked;\n  }\n  set isHalfChecked(value) {\n    this._isHalfChecked = value;\n    this.afterValueChange('isHalfChecked');\n  }\n  get isSelectable() {\n    return this._isSelectable;\n  }\n  set isSelectable(value) {\n    this._isSelectable = value;\n    this.update();\n  }\n  get isDisabled() {\n    return this._isDisabled;\n  }\n  set isDisabled(value) {\n    this._isDisabled = value;\n    this.update();\n  }\n  get isDisableCheckbox() {\n    return this._isDisableCheckbox;\n  }\n  set isDisableCheckbox(value) {\n    this._isDisableCheckbox = value;\n    this.update();\n  }\n  get isExpanded() {\n    return this._isExpanded;\n  }\n  set isExpanded(value) {\n    this._isExpanded = value;\n    this.origin.expanded = value;\n    this.afterValueChange('isExpanded');\n    this.afterValueChange('reRender');\n  }\n  get isSelected() {\n    return this._isSelected;\n  }\n  set isSelected(value) {\n    this._isSelected = value;\n    this.origin.selected = value;\n    this.afterValueChange('isSelected');\n  }\n  get isLoading() {\n    return this._isLoading;\n  }\n  set isLoading(value) {\n    this._isLoading = value;\n    this.update();\n  }\n  setSyncChecked(checked = false, halfChecked = false) {\n    this.setChecked(checked, halfChecked);\n    if (this.treeService && !this.treeService.isCheckStrictly) {\n      this.treeService.conduct(this);\n    }\n  }\n  setChecked(checked = false, halfChecked = false) {\n    this.origin.checked = checked;\n    this.isChecked = checked;\n    this.isHalfChecked = halfChecked;\n  }\n  setExpanded(value) {\n    this._isExpanded = value;\n    this.origin.expanded = value;\n    this.afterValueChange('isExpanded');\n  }\n  getParentNode() {\n    return this.parentNode;\n  }\n  getChildren() {\n    return this.children;\n  }\n  /**\n   * Support appending child nodes by position. Leaf node cannot be appended.\n   */\n  addChildren(children, childPos = -1) {\n    if (!this.isLeaf) {\n      children.forEach(node => {\n        const refreshLevel = n => {\n          n.getChildren().forEach(c => {\n            c.level = c.getParentNode().level + 1;\n            // flush origin\n            c.origin.level = c.level;\n            refreshLevel(c);\n          });\n        };\n        let child = node;\n        if (child instanceof NzTreeNode) {\n          child.parentNode = this;\n        } else {\n          child = new NzTreeNode(node, this);\n        }\n        child.level = this.level + 1;\n        child.origin.level = child.level;\n        refreshLevel(child);\n        try {\n          childPos === -1 ? this.children.push(child) : this.children.splice(childPos, 0, child);\n          // flush origin\n        } catch (e) {}\n      });\n      this.origin.children = this.getChildren().map(v => v.origin);\n      // remove loading state\n      this.isLoading = false;\n    }\n    this.afterValueChange('addChildren');\n    this.afterValueChange('reRender');\n  }\n  clearChildren() {\n    // refresh checked state\n    this.afterValueChange('clearChildren');\n    this.children = [];\n    this.origin.children = [];\n    this.afterValueChange('reRender');\n  }\n  remove() {\n    const parentNode = this.getParentNode();\n    if (parentNode) {\n      parentNode.children = parentNode.getChildren().filter(v => v.key !== this.key);\n      parentNode.origin.children = parentNode.origin.children.filter(v => v.key !== this.key);\n      this.afterValueChange('remove');\n      this.afterValueChange('reRender');\n    }\n  }\n  afterValueChange(key) {\n    if (this.treeService) {\n      switch (key) {\n        case 'isChecked':\n          this.treeService.setCheckedNodeList(this);\n          break;\n        case 'isHalfChecked':\n          this.treeService.setHalfCheckedNodeList(this);\n          break;\n        case 'isExpanded':\n          this.treeService.setExpandedNodeList(this);\n          break;\n        case 'isSelected':\n          this.treeService.setNodeActive(this);\n          break;\n        case 'clearChildren':\n          this.treeService.afterRemove(this.getChildren());\n          break;\n        case 'remove':\n          this.treeService.afterRemove([this]);\n          break;\n        case 'reRender':\n          this.treeService.flattenTreeData(this.treeService.rootNodes, this.treeService.getExpandedNodeList().map(v => v.key));\n          break;\n      }\n    }\n    this.update();\n  }\n  update() {\n    if (this.component) {\n      this.component.markForCheck();\n    }\n  }\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nfunction isCheckDisabled(node) {\n  const {\n    isDisabled,\n    isDisableCheckbox\n  } = node;\n  return !!(isDisabled || isDisableCheckbox);\n}\nfunction isInArray(needle, haystack) {\n  return haystack.length > 0 && haystack.indexOf(needle) > -1;\n}\nfunction getPosition(level, index) {\n  return `${level}-${index}`;\n}\nfunction getKey(key, pos) {\n  if (key !== null && key !== undefined) {\n    return key;\n  }\n  return pos;\n}\n/**\n * Flat nest tree data into flatten list. This is used for virtual list render.\n *\n * @param treeNodeList Origin data node list\n * @param expandedKeys\n * need expanded keys, provides `true` means all expanded (used in `rc-tree-select`).\n */\nfunction flattenTreeData(treeNodeList = [], expandedKeys = []) {\n  const expandedKeySet = new Set(expandedKeys === true ? [] : expandedKeys);\n  const flattenList = [];\n  function dig(list, parent = null) {\n    return list.map((treeNode, index) => {\n      const pos = getPosition(parent ? parent.pos : '0', index);\n      const mergedKey = getKey(treeNode.key, pos);\n      treeNode.isStart = [...(parent ? parent.isStart : []), index === 0];\n      treeNode.isEnd = [...(parent ? parent.isEnd : []), index === list.length - 1];\n      // Add FlattenDataNode into list\n      // TODO: only need data here.\n      const flattenNode = {\n        parent,\n        pos,\n        children: [],\n        data: treeNode,\n        isStart: [...(parent ? parent.isStart : []), index === 0],\n        isEnd: [...(parent ? parent.isEnd : []), index === list.length - 1]\n      };\n      flattenList.push(flattenNode);\n      // Loop treeNode children\n      if (expandedKeys === true || expandedKeySet.has(mergedKey) || treeNode.isExpanded) {\n        flattenNode.children = dig(treeNode.children || [], flattenNode);\n      } else {\n        flattenNode.children = [];\n      }\n      return flattenNode;\n    });\n  }\n  dig(treeNodeList);\n  return flattenList;\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTreeBaseService {\n  constructor() {\n    this.DRAG_SIDE_RANGE = 0.25;\n    this.DRAG_MIN_GAP = 2;\n    this.isCheckStrictly = false;\n    this.isMultiple = false;\n    this.rootNodes = [];\n    this.flattenNodes$ = new BehaviorSubject([]);\n    this.selectedNodeList = [];\n    this.expandedNodeList = [];\n    this.checkedNodeList = [];\n    this.halfCheckedNodeList = [];\n    this.matchedNodeList = [];\n  }\n  /**\n   * reset tree nodes will clear default node list\n   */\n  initTree(nzNodes) {\n    this.rootNodes = nzNodes;\n    this.expandedNodeList = [];\n    this.selectedNodeList = [];\n    this.halfCheckedNodeList = [];\n    this.checkedNodeList = [];\n    this.matchedNodeList = [];\n  }\n  flattenTreeData(nzNodes, expandedKeys = []) {\n    this.flattenNodes$.next(flattenTreeData(nzNodes, expandedKeys).map(item => item.data));\n  }\n  getSelectedNode() {\n    return this.selectedNode;\n  }\n  /**\n   * get some list\n   */\n  getSelectedNodeList() {\n    return this.conductNodeState('select');\n  }\n  /**\n   * get checked node keys\n   */\n  getCheckedNodeKeys() {\n    const keys = [];\n    const checkedNodes = this.getCheckedNodeList();\n    const calc = nodes => {\n      nodes.forEach(node => {\n        keys.push(node.key);\n        if (node.children.length < 1) return;\n        calc(node.children);\n      });\n    };\n    calc(checkedNodes);\n    return keys;\n  }\n  /**\n   * return checked nodes\n   */\n  getCheckedNodeList() {\n    return this.conductNodeState('check');\n  }\n  getHalfCheckedNodeList() {\n    return this.conductNodeState('halfCheck');\n  }\n  /**\n   * return expanded nodes\n   */\n  getExpandedNodeList() {\n    return this.conductNodeState('expand');\n  }\n  /**\n   * return search matched nodes\n   */\n  getMatchedNodeList() {\n    return this.conductNodeState('match');\n  }\n  isArrayOfNzTreeNode(value) {\n    return value.every(item => item instanceof NzTreeNode);\n  }\n  /**\n   * set drag node\n   */\n  setSelectedNode(node) {\n    this.selectedNode = node;\n  }\n  /**\n   * set node selected status\n   */\n  setNodeActive(node) {\n    if (!this.isMultiple && node.isSelected) {\n      this.selectedNodeList.forEach(n => {\n        if (node.key !== n.key) {\n          // reset other nodes\n          n.isSelected = false;\n        }\n      });\n      // single mode: remove pre node\n      this.selectedNodeList = [];\n    }\n    this.setSelectedNodeList(node, this.isMultiple);\n  }\n  /**\n   * add or remove node to selectedNodeList\n   */\n  setSelectedNodeList(node, isMultiple = false) {\n    const index = this.getIndexOfArray(this.selectedNodeList, node.key);\n    if (isMultiple) {\n      if (node.isSelected && index === -1) {\n        this.selectedNodeList.push(node);\n      }\n    } else {\n      if (node.isSelected && index === -1) {\n        this.selectedNodeList = [node];\n      }\n    }\n    if (!node.isSelected) {\n      this.selectedNodeList = this.selectedNodeList.filter(n => n.key !== node.key);\n    }\n  }\n  /**\n   * merge checked nodes\n   */\n  setHalfCheckedNodeList(node) {\n    const index = this.getIndexOfArray(this.halfCheckedNodeList, node.key);\n    if (node.isHalfChecked && index === -1) {\n      this.halfCheckedNodeList.push(node);\n    } else if (!node.isHalfChecked && index > -1) {\n      this.halfCheckedNodeList = this.halfCheckedNodeList.filter(n => node.key !== n.key);\n    }\n  }\n  setCheckedNodeList(node) {\n    const index = this.getIndexOfArray(this.checkedNodeList, node.key);\n    if (node.isChecked && index === -1) {\n      this.checkedNodeList.push(node);\n    } else if (!node.isChecked && index > -1) {\n      this.checkedNodeList = this.checkedNodeList.filter(n => node.key !== n.key);\n    }\n  }\n  /**\n   * conduct checked/selected/expanded keys\n   */\n  conductNodeState(type = 'check') {\n    let resultNodesList = [];\n    switch (type) {\n      case 'select':\n        resultNodesList = this.selectedNodeList;\n        break;\n      case 'expand':\n        resultNodesList = this.expandedNodeList;\n        break;\n      case 'match':\n        resultNodesList = this.matchedNodeList;\n        break;\n      case 'check':\n        resultNodesList = this.checkedNodeList;\n        const isIgnore = node => {\n          const parentNode = node.getParentNode();\n          if (parentNode) {\n            if (this.checkedNodeList.findIndex(n => n.key === parentNode.key) > -1) {\n              return true;\n            } else {\n              return isIgnore(parentNode);\n            }\n          }\n          return false;\n        };\n        // merge checked\n        if (!this.isCheckStrictly) {\n          resultNodesList = this.checkedNodeList.filter(n => !isIgnore(n));\n        }\n        break;\n      case 'halfCheck':\n        if (!this.isCheckStrictly) {\n          resultNodesList = this.halfCheckedNodeList;\n        }\n        break;\n    }\n    return resultNodesList;\n  }\n  /**\n   * set expanded nodes\n   */\n  setExpandedNodeList(node) {\n    if (node.isLeaf) {\n      return;\n    }\n    const index = this.getIndexOfArray(this.expandedNodeList, node.key);\n    if (node.isExpanded && index === -1) {\n      this.expandedNodeList.push(node);\n    } else if (!node.isExpanded && index > -1) {\n      this.expandedNodeList.splice(index, 1);\n    }\n  }\n  setMatchedNodeList(node) {\n    const index = this.getIndexOfArray(this.matchedNodeList, node.key);\n    if (node.isMatched && index === -1) {\n      this.matchedNodeList.push(node);\n    } else if (!node.isMatched && index > -1) {\n      this.matchedNodeList.splice(index, 1);\n    }\n  }\n  /**\n   * check state\n   *\n   * @param isCheckStrictly\n   */\n  refreshCheckState(isCheckStrictly = false) {\n    if (isCheckStrictly) {\n      return;\n    }\n    this.checkedNodeList.forEach(node => {\n      this.conduct(node, isCheckStrictly);\n    });\n  }\n  // reset other node checked state based current node\n  conduct(node, isCheckStrictly = false) {\n    const isChecked = node.isChecked;\n    if (node && !isCheckStrictly) {\n      this.conductUp(node);\n      this.conductDown(node, isChecked);\n    }\n  }\n  /**\n   * 1、children half checked\n   * 2、children all checked, parent checked\n   * 3、no children checked\n   */\n  conductUp(node) {\n    const parentNode = node.getParentNode();\n    if (parentNode) {\n      if (!isCheckDisabled(parentNode)) {\n        if (parentNode.children.every(child => isCheckDisabled(child) || !child.isHalfChecked && child.isChecked)) {\n          parentNode.isChecked = true;\n          parentNode.isHalfChecked = false;\n        } else if (parentNode.children.some(child => child.isHalfChecked || child.isChecked)) {\n          parentNode.isChecked = false;\n          parentNode.isHalfChecked = true;\n        } else {\n          parentNode.isChecked = false;\n          parentNode.isHalfChecked = false;\n        }\n      }\n      this.setCheckedNodeList(parentNode);\n      this.setHalfCheckedNodeList(parentNode);\n      this.conductUp(parentNode);\n    }\n  }\n  /**\n   * reset child check state\n   */\n  conductDown(node, value) {\n    if (!isCheckDisabled(node)) {\n      node.isChecked = value;\n      node.isHalfChecked = false;\n      this.setCheckedNodeList(node);\n      this.setHalfCheckedNodeList(node);\n      node.children.forEach(n => {\n        this.conductDown(n, value);\n      });\n    }\n  }\n  /**\n   * flush after delete node\n   */\n  afterRemove(nodes) {\n    // to reset selectedNodeList & expandedNodeList\n    const loopNode = node => {\n      // remove selected node\n      this.selectedNodeList = this.selectedNodeList.filter(n => n.key !== node.key);\n      // remove expanded node\n      this.expandedNodeList = this.expandedNodeList.filter(n => n.key !== node.key);\n      // remove checked node\n      this.checkedNodeList = this.checkedNodeList.filter(n => n.key !== node.key);\n      if (node.children) {\n        node.children.forEach(child => {\n          loopNode(child);\n        });\n      }\n    };\n    nodes.forEach(n => {\n      loopNode(n);\n    });\n    this.refreshCheckState(this.isCheckStrictly);\n  }\n  /**\n   * drag event\n   */\n  refreshDragNode(node) {\n    if (node.children.length === 0) {\n      // until root\n      this.conductUp(node);\n    } else {\n      node.children.forEach(child => {\n        this.refreshDragNode(child);\n      });\n    }\n  }\n  // reset node level\n  resetNodeLevel(node) {\n    const parentNode = node.getParentNode();\n    if (parentNode) {\n      node.level = parentNode.level + 1;\n    } else {\n      node.level = 0;\n    }\n    for (const child of node.children) {\n      this.resetNodeLevel(child);\n    }\n  }\n  calcDropPosition(event) {\n    const {\n      clientY\n    } = event;\n    // to fix firefox undefined\n    const {\n      top,\n      bottom,\n      height\n    } = event.target.getBoundingClientRect();\n    const des = Math.max(height * this.DRAG_SIDE_RANGE, this.DRAG_MIN_GAP);\n    if (clientY <= top + des) {\n      return -1;\n    } else if (clientY >= bottom - des) {\n      return 1;\n    }\n    return 0;\n  }\n  /**\n   * drop\n   * 0: inner -1: pre 1: next\n   */\n  dropAndApply(targetNode, dragPos = -1) {\n    if (!targetNode || dragPos > 1) {\n      return;\n    }\n    const treeService = targetNode.treeService;\n    const targetParent = targetNode.getParentNode();\n    const isSelectedRootNode = this.selectedNode.getParentNode();\n    // remove the dragNode\n    if (isSelectedRootNode) {\n      isSelectedRootNode.children = isSelectedRootNode.children.filter(n => n.key !== this.selectedNode.key);\n    } else {\n      this.rootNodes = this.rootNodes.filter(n => n.key !== this.selectedNode.key);\n    }\n    switch (dragPos) {\n      case 0:\n        targetNode.addChildren([this.selectedNode]);\n        this.resetNodeLevel(targetNode);\n        break;\n      case -1:\n      case 1:\n        const tIndex = dragPos === 1 ? 1 : 0;\n        if (targetParent) {\n          targetParent.addChildren([this.selectedNode], targetParent.children.indexOf(targetNode) + tIndex);\n          const parentNode = this.selectedNode.getParentNode();\n          if (parentNode) {\n            this.resetNodeLevel(parentNode);\n          }\n        } else {\n          const targetIndex = this.rootNodes.indexOf(targetNode) + tIndex;\n          // Insert root node.\n          this.rootNodes.splice(targetIndex, 0, this.selectedNode);\n          this.rootNodes[targetIndex].parentNode = null;\n          this.resetNodeLevel(this.rootNodes[targetIndex]);\n        }\n        break;\n    }\n    // flush all nodes\n    this.rootNodes.forEach(child => {\n      if (!child.treeService) {\n        child.service = treeService;\n      }\n      this.refreshDragNode(child);\n    });\n  }\n  /**\n   * emit Structure\n   * eventName\n   * node\n   * event: MouseEvent / DragEvent\n   * dragNode\n   */\n  formatEvent(eventName, node, event) {\n    const emitStructure = {\n      eventName,\n      node,\n      event\n    };\n    switch (eventName) {\n      case 'dragstart':\n      case 'dragenter':\n      case 'dragover':\n      case 'dragleave':\n      case 'drop':\n      case 'dragend':\n        Object.assign(emitStructure, {\n          dragNode: this.getSelectedNode()\n        });\n        break;\n      case 'click':\n      case 'dblclick':\n        Object.assign(emitStructure, {\n          selectedKeys: this.selectedNodeList\n        });\n        Object.assign(emitStructure, {\n          nodes: this.selectedNodeList\n        });\n        Object.assign(emitStructure, {\n          keys: this.selectedNodeList.map(n => n.key)\n        });\n        break;\n      case 'check':\n        const checkedNodeList = this.getCheckedNodeList();\n        Object.assign(emitStructure, {\n          checkedKeys: checkedNodeList\n        });\n        Object.assign(emitStructure, {\n          nodes: checkedNodeList\n        });\n        Object.assign(emitStructure, {\n          keys: checkedNodeList.map(n => n.key)\n        });\n        break;\n      case 'search':\n        Object.assign(emitStructure, {\n          matchedKeys: this.getMatchedNodeList()\n        });\n        Object.assign(emitStructure, {\n          nodes: this.getMatchedNodeList()\n        });\n        Object.assign(emitStructure, {\n          keys: this.getMatchedNodeList().map(n => n.key)\n        });\n        break;\n      case 'expand':\n        Object.assign(emitStructure, {\n          nodes: this.expandedNodeList\n        });\n        Object.assign(emitStructure, {\n          keys: this.expandedNodeList.map(n => n.key)\n        });\n        break;\n    }\n    return emitStructure;\n  }\n  /**\n   * New functions for flatten nodes\n   */\n  getIndexOfArray(list, key) {\n    return list.findIndex(v => v.key === key);\n  }\n  /**\n   * Render by nzCheckedKeys\n   * When keys equals null, just render with checkStrictly\n   *\n   * @param keys\n   * @param checkStrictly\n   */\n  conductCheck(keys, checkStrictly) {\n    this.checkedNodeList = [];\n    this.halfCheckedNodeList = [];\n    const calc = nodes => {\n      nodes.forEach(node => {\n        if (keys === null) {\n          // render tree if no default checked keys found\n          node.isChecked = !!node.origin.checked;\n        } else {\n          if (isInArray(node.key, keys || [])) {\n            node.isChecked = true;\n            node.isHalfChecked = false;\n          } else {\n            node.isChecked = false;\n            node.isHalfChecked = false;\n          }\n        }\n        if (node.children.length > 0) {\n          calc(node.children);\n        }\n      });\n    };\n    calc(this.rootNodes);\n    this.refreshCheckState(checkStrictly);\n  }\n  conductExpandedKeys(keys = []) {\n    const expandedKeySet = new Set(keys === true ? [] : keys);\n    this.expandedNodeList = [];\n    const calc = nodes => {\n      nodes.forEach(node => {\n        node.setExpanded(keys === true || expandedKeySet.has(node.key) || node.isExpanded === true);\n        if (node.isExpanded) {\n          this.setExpandedNodeList(node);\n        }\n        if (node.children.length > 0) {\n          calc(node.children);\n        }\n      });\n    };\n    calc(this.rootNodes);\n  }\n  conductSelectedKeys(keys, isMulti) {\n    this.selectedNodeList.forEach(node => node.isSelected = false);\n    this.selectedNodeList = [];\n    const calc = nodes => nodes.every(node => {\n      if (isInArray(node.key, keys)) {\n        node.isSelected = true;\n        this.setSelectedNodeList(node);\n        if (!isMulti) {\n          // if not support multi select\n          return false;\n        }\n      } else {\n        node.isSelected = false;\n      }\n      if (node.children.length > 0) {\n        // Recursion\n        return calc(node.children);\n      }\n      return true;\n    });\n    calc(this.rootNodes);\n  }\n  /**\n   * Expand parent nodes by child node\n   *\n   * @param node\n   */\n  expandNodeAllParentBySearch(node) {\n    const calc = n => {\n      if (n) {\n        n.canHide = false;\n        n.setExpanded(true);\n        this.setExpandedNodeList(n);\n        if (n.getParentNode()) {\n          return calc(n.getParentNode());\n        }\n      }\n    };\n    calc(node.getParentNode());\n  }\n  static {\n    this.ɵfac = function NzTreeBaseService_Factory(t) {\n      return new (t || NzTreeBaseService)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NzTreeBaseService,\n      factory: NzTreeBaseService.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTreeBaseService, [{\n    type: Injectable\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst NzTreeHigherOrderServiceToken = new InjectionToken('NzTreeHigherOrder');\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTreeBase {\n  constructor(nzTreeService) {\n    this.nzTreeService = nzTreeService;\n  }\n  /**\n   * Coerces a value({@link any[]}) to a TreeNodes({@link NzTreeNode[]})\n   */\n  coerceTreeNodes(value) {\n    let nodes = [];\n    if (!this.nzTreeService.isArrayOfNzTreeNode(value)) {\n      // has not been new NzTreeNode\n      nodes = value.map(item => new NzTreeNode(item, null, this.nzTreeService));\n    } else {\n      nodes = value.map(item => {\n        item.service = this.nzTreeService;\n        return item;\n      });\n    }\n    return nodes;\n  }\n  /**\n   * Get all nodes({@link NzTreeNode})\n   */\n  getTreeNodes() {\n    return this.nzTreeService.rootNodes;\n  }\n  /**\n   * Get {@link NzTreeNode} with key\n   */\n  getTreeNodeByKey(key) {\n    // flat tree nodes\n    const nodes = [];\n    const getNode = node => {\n      nodes.push(node);\n      node.getChildren().forEach(n => {\n        getNode(n);\n      });\n    };\n    this.getTreeNodes().forEach(n => {\n      getNode(n);\n    });\n    return nodes.find(n => n.key === key) || null;\n  }\n  /**\n   * Get checked nodes(merged)\n   */\n  getCheckedNodeList() {\n    return this.nzTreeService.getCheckedNodeList();\n  }\n  /**\n   * Get selected nodes\n   */\n  getSelectedNodeList() {\n    return this.nzTreeService.getSelectedNodeList();\n  }\n  /**\n   * Get half checked nodes\n   */\n  getHalfCheckedNodeList() {\n    return this.nzTreeService.getHalfCheckedNodeList();\n  }\n  /**\n   * Get expanded nodes\n   */\n  getExpandedNodeList() {\n    return this.nzTreeService.getExpandedNodeList();\n  }\n  /**\n   * Get matched nodes(if nzSearchValue is not null)\n   */\n  getMatchedNodeList() {\n    return this.nzTreeService.getMatchedNodeList();\n  }\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzTreeBase, NzTreeBaseService, NzTreeHigherOrderServiceToken, NzTreeNode, flattenTreeData, getKey, getPosition, isCheckDisabled, isInArray };\n", "import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, Input, EventEmitter, Host, Optional, Output, Injectable, inject, forwardRef, ContentChild, ViewChild, NgModule } from '@angular/core';\nimport { NgForOf, NgIf, NgTemplateOutlet, NgStyle } from '@angular/common';\nimport * as i2 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport * as i1 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i2$1 from 'ng-zorro-antd/core/highlight';\nimport { NzHighlightModule } from 'ng-zorro-antd/core/highlight';\nimport { __decorate } from 'tslib';\nimport { Subject, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i1$1 from 'ng-zorro-antd/core/tree';\nimport { NzTreeBaseService, NzTreeHigherOrderServiceToken, NzTreeBase, flattenTreeData } from 'ng-zorro-antd/core/tree';\nexport { NzTreeNode } from 'ng-zorro-antd/core/tree';\nimport * as i2$2 from 'ng-zorro-antd/core/no-animation';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\nimport { CdkVirtualScrollViewport, CdkFixedSizeVirtualScroll, CdkVirtualForOf } from '@angular/cdk/scrolling';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { treeCollapseMotion } from 'ng-zorro-antd/core/animation';\nimport * as i2$3 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport * as i3 from '@angular/cdk/bidi';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nfunction NzTreeIndentComponent_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\");\n  }\n  if (rf & 2) {\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"ant-tree-indent-unit\", !ctx_r0.nzSelectMode)(\"ant-select-tree-indent-unit\", ctx_r0.nzSelectMode)(\"ant-select-tree-indent-unit-start\", ctx_r0.nzSelectMode && ctx_r0.nzIsStart[i_r2])(\"ant-tree-indent-unit-start\", !ctx_r0.nzSelectMode && ctx_r0.nzIsStart[i_r2])(\"ant-select-tree-indent-unit-end\", ctx_r0.nzSelectMode && ctx_r0.nzIsEnd[i_r2])(\"ant-tree-indent-unit-end\", !ctx_r0.nzSelectMode && ctx_r0.nzIsEnd[i_r2]);\n  }\n}\nconst _c0 = [\"builtin\", \"\"];\nfunction NzTreeNodeSwitcherComponent_ng_container_0_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"span\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"ant-select-tree-switcher-icon\", ctx_r5.nzSelectMode)(\"ant-tree-switcher-icon\", !ctx_r5.nzSelectMode);\n  }\n}\nconst _c1 = (a0, a1) => ({\n  $implicit: a0,\n  origin: a1\n});\nfunction NzTreeNodeSwitcherComponent_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzTreeNodeSwitcherComponent_ng_container_0_ng_container_1_ng_container_1_Template, 2, 4, \"ng-container\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r4.nzExpandedIcon)(\"nzStringTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c1, ctx_r4.context, ctx_r4.context.origin));\n  }\n}\nfunction NzTreeNodeSwitcherComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzTreeNodeSwitcherComponent_ng_container_0_ng_container_1_Template, 2, 5, \"ng-container\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    const _r3 = i0.ɵɵreference(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isLoading)(\"ngIfElse\", _r3);\n  }\n}\nfunction NzTreeNodeSwitcherComponent_ng_container_1_ng_container_1_ng_container_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"nzType\", ctx_r8.isSwitcherOpen ? \"minus-square\" : \"plus-square\");\n  }\n}\nfunction NzTreeNodeSwitcherComponent_ng_container_1_ng_container_1_ng_container_1_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 8);\n  }\n}\nfunction NzTreeNodeSwitcherComponent_ng_container_1_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzTreeNodeSwitcherComponent_ng_container_1_ng_container_1_ng_container_1_span_1_Template, 1, 1, \"span\", 5)(2, NzTreeNodeSwitcherComponent_ng_container_1_ng_container_1_ng_container_1_span_2_Template, 1, 0, \"span\", 6);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.isShowLineIcon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r7.isShowLineIcon);\n  }\n}\nfunction NzTreeNodeSwitcherComponent_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzTreeNodeSwitcherComponent_ng_container_1_ng_container_1_ng_container_1_Template, 3, 2, \"ng-container\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r6.nzExpandedIcon)(\"nzStringTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c1, ctx_r6.context, ctx_r6.context.origin));\n  }\n}\nfunction NzTreeNodeSwitcherComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzTreeNodeSwitcherComponent_ng_container_1_ng_container_1_Template, 2, 5, \"ng-container\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    const _r3 = i0.ɵɵreference(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.isLoading)(\"ngIfElse\", _r3);\n  }\n}\nfunction NzTreeNodeSwitcherComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 9);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"nzSpin\", true);\n  }\n}\nfunction NzTreeNodeTitleComponent_ng_template_0_Template(rf, ctx) {}\nfunction NzTreeNodeTitleComponent_ng_container_1_span_1_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"nzType\", ctx_r4.icon);\n  }\n}\nfunction NzTreeNodeTitleComponent_ng_container_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\")(1, \"span\");\n    i0.ɵɵtemplate(2, NzTreeNodeTitleComponent_ng_container_1_span_1_span_2_Template, 1, 1, \"span\", 5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"ant-tree-icon__open\", ctx_r3.isSwitcherOpen)(\"ant-tree-icon__close\", ctx_r3.isSwitcherClose)(\"ant-tree-icon_loading\", ctx_r3.isLoading)(\"ant-select-tree-iconEle\", ctx_r3.selectMode)(\"ant-tree-iconEle\", !ctx_r3.selectMode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"ant-select-tree-iconEle\", ctx_r3.selectMode)(\"ant-select-tree-icon__customize\", ctx_r3.selectMode)(\"ant-tree-iconEle\", !ctx_r3.selectMode)(\"ant-tree-icon__customize\", !ctx_r3.selectMode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.icon);\n  }\n}\nfunction NzTreeNodeTitleComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzTreeNodeTitleComponent_ng_container_1_span_1_Template, 3, 19, \"span\", 3);\n    i0.ɵɵelement(2, \"span\", 4);\n    i0.ɵɵpipe(3, \"nzHighlight\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.icon && ctx_r1.showIcon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind4(3, 2, ctx_r1.title, ctx_r1.matchedValue, \"i\", \"font-highlight\"), i0.ɵɵsanitizeHtml);\n  }\n}\nfunction NzTreeNodeTitleComponent_nz_tree_drop_indicator_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-tree-drop-indicator\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"dropPosition\", ctx_r2.dragPosition)(\"level\", ctx_r2.context.level);\n  }\n}\nfunction NzTreeNodeBuiltinComponent_nz_tree_node_switcher_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"nz-tree-node-switcher\", 4);\n    i0.ɵɵlistener(\"click\", function NzTreeNodeBuiltinComponent_nz_tree_node_switcher_1_Template_nz_tree_node_switcher_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.clickExpand($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"nzShowExpand\", ctx_r0.nzShowExpand)(\"nzShowLine\", ctx_r0.nzShowLine)(\"nzExpandedIcon\", ctx_r0.nzExpandedIcon)(\"nzSelectMode\", ctx_r0.nzSelectMode)(\"context\", ctx_r0.nzTreeNode)(\"isLeaf\", ctx_r0.isLeaf)(\"isExpanded\", ctx_r0.isExpanded)(\"isLoading\", ctx_r0.isLoading);\n  }\n}\nfunction NzTreeNodeBuiltinComponent_nz_tree_node_checkbox_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"nz-tree-node-checkbox\", 5);\n    i0.ɵɵlistener(\"click\", function NzTreeNodeBuiltinComponent_nz_tree_node_checkbox_2_Template_nz_tree_node_checkbox_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.clickCheckBox($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"nzSelectMode\", ctx_r1.nzSelectMode)(\"isChecked\", ctx_r1.isChecked)(\"isHalfChecked\", ctx_r1.isHalfChecked)(\"isDisabled\", ctx_r1.isDisabled)(\"isDisableCheckbox\", ctx_r1.isDisableCheckbox);\n  }\n}\nconst _c2 = [\"nzTreeTemplate\"];\nfunction NzTreeComponent_cdk_virtual_scroll_viewport_6_ng_container_1_ng_template_1_Template(rf, ctx) {}\nconst _c3 = a0 => ({\n  $implicit: a0\n});\nfunction NzTreeComponent_cdk_virtual_scroll_viewport_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzTreeComponent_cdk_virtual_scroll_viewport_6_ng_container_1_ng_template_1_Template, 0, 0, \"ng-template\", 10);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const node_r5 = ctx.$implicit;\n    i0.ɵɵnextContext(2);\n    const _r3 = i0.ɵɵreference(9);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r3)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c3, node_r5));\n  }\n}\nfunction NzTreeComponent_cdk_virtual_scroll_viewport_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"cdk-virtual-scroll-viewport\", 8);\n    i0.ɵɵtemplate(1, NzTreeComponent_cdk_virtual_scroll_viewport_6_ng_container_1_Template, 2, 4, \"ng-container\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"height\", ctx_r0.nzVirtualHeight);\n    i0.ɵɵclassProp(\"ant-select-tree-list-holder-inner\", ctx_r0.nzSelectMode)(\"ant-tree-list-holder-inner\", !ctx_r0.nzSelectMode);\n    i0.ɵɵproperty(\"itemSize\", ctx_r0.nzVirtualItemSize)(\"minBufferPx\", ctx_r0.nzVirtualMinBufferPx)(\"maxBufferPx\", ctx_r0.nzVirtualMaxBufferPx);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"cdkVirtualForOf\", ctx_r0.nzFlattenNodes)(\"cdkVirtualForTrackBy\", ctx_r0.trackByFlattenNode);\n  }\n}\nfunction NzTreeComponent_div_7_ng_container_1_ng_template_1_Template(rf, ctx) {}\nfunction NzTreeComponent_div_7_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzTreeComponent_div_7_ng_container_1_ng_template_1_Template, 0, 0, \"ng-template\", 10);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const node_r8 = ctx.$implicit;\n    i0.ɵɵnextContext(2);\n    const _r3 = i0.ɵɵreference(9);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r3)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c3, node_r8));\n  }\n}\nfunction NzTreeComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, NzTreeComponent_div_7_ng_container_1_Template, 2, 4, \"ng-container\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"ant-select-tree-list-holder-inner\", ctx_r1.nzSelectMode)(\"ant-tree-list-holder-inner\", !ctx_r1.nzSelectMode);\n    i0.ɵɵproperty(\"@.disabled\", ctx_r1.beforeInit || !!(ctx_r1.noAnimation == null ? null : ctx_r1.noAnimation.nzNoAnimation))(\"nzNoAnimation\", ctx_r1.noAnimation == null ? null : ctx_r1.noAnimation.nzNoAnimation)(\"@treeCollapseMotion\", ctx_r1.nzFlattenNodes.length);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.nzFlattenNodes)(\"ngForTrackBy\", ctx_r1.trackByFlattenNode);\n  }\n}\nfunction NzTreeComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"nz-tree-node\", 13);\n    i0.ɵɵlistener(\"nzExpandChange\", function NzTreeComponent_ng_template_8_Template_nz_tree_node_nzExpandChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.eventTriggerChanged($event));\n    })(\"nzClick\", function NzTreeComponent_ng_template_8_Template_nz_tree_node_nzClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.eventTriggerChanged($event));\n    })(\"nzDblClick\", function NzTreeComponent_ng_template_8_Template_nz_tree_node_nzDblClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.eventTriggerChanged($event));\n    })(\"nzContextMenu\", function NzTreeComponent_ng_template_8_Template_nz_tree_node_nzContextMenu_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.eventTriggerChanged($event));\n    })(\"nzCheckBoxChange\", function NzTreeComponent_ng_template_8_Template_nz_tree_node_nzCheckBoxChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.eventTriggerChanged($event));\n    })(\"nzOnDragStart\", function NzTreeComponent_ng_template_8_Template_nz_tree_node_nzOnDragStart_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.eventTriggerChanged($event));\n    })(\"nzOnDragEnter\", function NzTreeComponent_ng_template_8_Template_nz_tree_node_nzOnDragEnter_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.eventTriggerChanged($event));\n    })(\"nzOnDragOver\", function NzTreeComponent_ng_template_8_Template_nz_tree_node_nzOnDragOver_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.eventTriggerChanged($event));\n    })(\"nzOnDragLeave\", function NzTreeComponent_ng_template_8_Template_nz_tree_node_nzOnDragLeave_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.eventTriggerChanged($event));\n    })(\"nzOnDragEnd\", function NzTreeComponent_ng_template_8_Template_nz_tree_node_nzOnDragEnd_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.eventTriggerChanged($event));\n    })(\"nzOnDrop\", function NzTreeComponent_ng_template_8_Template_nz_tree_node_nzOnDrop_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.eventTriggerChanged($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const treeNode_r10 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"icon\", treeNode_r10.icon)(\"title\", treeNode_r10.title)(\"isLoading\", treeNode_r10.isLoading)(\"isSelected\", treeNode_r10.isSelected)(\"isDisabled\", treeNode_r10.isDisabled)(\"isMatched\", treeNode_r10.isMatched)(\"isExpanded\", treeNode_r10.isExpanded)(\"isLeaf\", treeNode_r10.isLeaf)(\"isStart\", treeNode_r10.isStart)(\"isEnd\", treeNode_r10.isEnd)(\"isChecked\", treeNode_r10.isChecked)(\"isHalfChecked\", treeNode_r10.isHalfChecked)(\"isDisableCheckbox\", treeNode_r10.isDisableCheckbox)(\"isSelectable\", treeNode_r10.isSelectable)(\"canHide\", treeNode_r10.canHide)(\"nzTreeNode\", treeNode_r10)(\"nzSelectMode\", ctx_r2.nzSelectMode)(\"nzShowLine\", ctx_r2.nzShowLine)(\"nzExpandedIcon\", ctx_r2.nzExpandedIcon)(\"nzDraggable\", ctx_r2.nzDraggable)(\"nzCheckable\", ctx_r2.nzCheckable)(\"nzShowExpand\", ctx_r2.nzShowExpand)(\"nzAsyncData\", ctx_r2.nzAsyncData)(\"nzSearchValue\", ctx_r2.nzSearchValue)(\"nzHideUnMatched\", ctx_r2.nzHideUnMatched)(\"nzBeforeDrop\", ctx_r2.nzBeforeDrop)(\"nzShowIcon\", ctx_r2.nzShowIcon)(\"nzTreeTemplate\", ctx_r2.nzTreeTemplate || ctx_r2.nzTreeTemplateChild);\n  }\n}\nclass NzTreeDropIndicatorComponent {\n  constructor(cdr) {\n    this.cdr = cdr;\n    this.level = 1;\n    this.direction = 'ltr';\n    this.style = {};\n  }\n  ngOnChanges(_changes) {\n    this.renderIndicator(this.dropPosition, this.direction);\n  }\n  renderIndicator(dropPosition, direction = 'ltr') {\n    const offset = 4;\n    const startPosition = direction === 'ltr' ? 'left' : 'right';\n    const endPosition = direction === 'ltr' ? 'right' : 'left';\n    const style = {\n      [startPosition]: `${offset}px`,\n      [endPosition]: '0px'\n    };\n    switch (dropPosition) {\n      case -1:\n        style.top = `${-3}px`;\n        break;\n      case 1:\n        style.bottom = `${-3}px`;\n        break;\n      case 0:\n        // dropPosition === 0\n        style.bottom = `${-3}px`;\n        style[startPosition] = `${offset + 24}px`;\n        break;\n      default:\n        style.display = 'none';\n        break;\n    }\n    this.style = style;\n    this.cdr.markForCheck();\n  }\n  static {\n    this.ɵfac = function NzTreeDropIndicatorComponent_Factory(t) {\n      return new (t || NzTreeDropIndicatorComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzTreeDropIndicatorComponent,\n      selectors: [[\"nz-tree-drop-indicator\"]],\n      hostVars: 4,\n      hostBindings: function NzTreeDropIndicatorComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵstyleMap(ctx.style);\n          i0.ɵɵclassProp(\"ant-tree-drop-indicator\", true);\n        }\n      },\n      inputs: {\n        dropPosition: \"dropPosition\",\n        level: \"level\",\n        direction: \"direction\"\n      },\n      exportAs: [\"NzTreeDropIndicator\"],\n      standalone: true,\n      features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      decls: 0,\n      vars: 0,\n      template: function NzTreeDropIndicatorComponent_Template(rf, ctx) {},\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTreeDropIndicatorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-tree-drop-indicator',\n      exportAs: 'NzTreeDropIndicator',\n      template: ``,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      preserveWhitespaces: false,\n      host: {\n        '[class.ant-tree-drop-indicator]': 'true',\n        '[style]': 'style'\n      },\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ChangeDetectorRef\n  }], {\n    dropPosition: [{\n      type: Input\n    }],\n    level: [{\n      type: Input\n    }],\n    direction: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTreeIndentComponent {\n  constructor() {\n    this.nzTreeLevel = 0;\n    this.nzIsStart = [];\n    this.nzIsEnd = [];\n    this.nzSelectMode = false;\n    this.listOfUnit = [];\n  }\n  ngOnChanges(changes) {\n    const {\n      nzTreeLevel\n    } = changes;\n    if (nzTreeLevel) {\n      this.listOfUnit = [...new Array(nzTreeLevel.currentValue || 0)];\n    }\n  }\n  static {\n    this.ɵfac = function NzTreeIndentComponent_Factory(t) {\n      return new (t || NzTreeIndentComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzTreeIndentComponent,\n      selectors: [[\"nz-tree-indent\"]],\n      hostVars: 5,\n      hostBindings: function NzTreeIndentComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-hidden\", true);\n          i0.ɵɵclassProp(\"ant-tree-indent\", !ctx.nzSelectMode)(\"ant-select-tree-indent\", ctx.nzSelectMode);\n        }\n      },\n      inputs: {\n        nzTreeLevel: \"nzTreeLevel\",\n        nzIsStart: \"nzIsStart\",\n        nzIsEnd: \"nzIsEnd\",\n        nzSelectMode: \"nzSelectMode\"\n      },\n      exportAs: [\"nzTreeIndent\"],\n      standalone: true,\n      features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      decls: 1,\n      vars: 1,\n      consts: [[3, \"ant-tree-indent-unit\", \"ant-select-tree-indent-unit\", \"ant-select-tree-indent-unit-start\", \"ant-tree-indent-unit-start\", \"ant-select-tree-indent-unit-end\", \"ant-tree-indent-unit-end\", 4, \"ngFor\", \"ngForOf\"]],\n      template: function NzTreeIndentComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, NzTreeIndentComponent_span_0_Template, 1, 12, \"span\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngForOf\", ctx.listOfUnit);\n        }\n      },\n      dependencies: [NgForOf],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTreeIndentComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-tree-indent',\n      exportAs: 'nzTreeIndent',\n      template: `\n    <span\n      [class.ant-tree-indent-unit]=\"!nzSelectMode\"\n      [class.ant-select-tree-indent-unit]=\"nzSelectMode\"\n      [class.ant-select-tree-indent-unit-start]=\"nzSelectMode && nzIsStart[i]\"\n      [class.ant-tree-indent-unit-start]=\"!nzSelectMode && nzIsStart[i]\"\n      [class.ant-select-tree-indent-unit-end]=\"nzSelectMode && nzIsEnd[i]\"\n      [class.ant-tree-indent-unit-end]=\"!nzSelectMode && nzIsEnd[i]\"\n      *ngFor=\"let _ of listOfUnit; let i = index\"\n    ></span>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      preserveWhitespaces: false,\n      host: {\n        '[attr.aria-hidden]': 'true',\n        '[class.ant-tree-indent]': '!nzSelectMode',\n        '[class.ant-select-tree-indent]': 'nzSelectMode'\n      },\n      imports: [NgForOf],\n      standalone: true\n    }]\n  }], null, {\n    nzTreeLevel: [{\n      type: Input\n    }],\n    nzIsStart: [{\n      type: Input\n    }],\n    nzIsEnd: [{\n      type: Input\n    }],\n    nzSelectMode: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTreeNodeBuiltinCheckboxComponent {\n  constructor() {\n    this.nzSelectMode = false;\n  }\n  static {\n    this.ɵfac = function NzTreeNodeBuiltinCheckboxComponent_Factory(t) {\n      return new (t || NzTreeNodeBuiltinCheckboxComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzTreeNodeBuiltinCheckboxComponent,\n      selectors: [[\"nz-tree-node-checkbox\", \"builtin\", \"\"]],\n      hostVars: 16,\n      hostBindings: function NzTreeNodeBuiltinCheckboxComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ant-select-tree-checkbox\", ctx.nzSelectMode)(\"ant-select-tree-checkbox-checked\", ctx.nzSelectMode && ctx.isChecked)(\"ant-select-tree-checkbox-indeterminate\", ctx.nzSelectMode && ctx.isHalfChecked)(\"ant-select-tree-checkbox-disabled\", ctx.nzSelectMode && (ctx.isDisabled || ctx.isDisableCheckbox))(\"ant-tree-checkbox\", !ctx.nzSelectMode)(\"ant-tree-checkbox-checked\", !ctx.nzSelectMode && ctx.isChecked)(\"ant-tree-checkbox-indeterminate\", !ctx.nzSelectMode && ctx.isHalfChecked)(\"ant-tree-checkbox-disabled\", !ctx.nzSelectMode && (ctx.isDisabled || ctx.isDisableCheckbox));\n        }\n      },\n      inputs: {\n        nzSelectMode: \"nzSelectMode\",\n        isChecked: \"isChecked\",\n        isHalfChecked: \"isHalfChecked\",\n        isDisabled: \"isDisabled\",\n        isDisableCheckbox: \"isDisableCheckbox\"\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      attrs: _c0,\n      decls: 1,\n      vars: 4,\n      template: function NzTreeNodeBuiltinCheckboxComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"span\");\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ant-tree-checkbox-inner\", !ctx.nzSelectMode)(\"ant-select-tree-checkbox-inner\", ctx.nzSelectMode);\n        }\n      },\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTreeNodeBuiltinCheckboxComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-tree-node-checkbox[builtin]',\n      template: `\n    <span [class.ant-tree-checkbox-inner]=\"!nzSelectMode\" [class.ant-select-tree-checkbox-inner]=\"nzSelectMode\"></span>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      preserveWhitespaces: false,\n      host: {\n        '[class.ant-select-tree-checkbox]': `nzSelectMode`,\n        '[class.ant-select-tree-checkbox-checked]': `nzSelectMode && isChecked`,\n        '[class.ant-select-tree-checkbox-indeterminate]': `nzSelectMode && isHalfChecked`,\n        '[class.ant-select-tree-checkbox-disabled]': `nzSelectMode && (isDisabled || isDisableCheckbox)`,\n        '[class.ant-tree-checkbox]': `!nzSelectMode`,\n        '[class.ant-tree-checkbox-checked]': `!nzSelectMode && isChecked`,\n        '[class.ant-tree-checkbox-indeterminate]': `!nzSelectMode && isHalfChecked`,\n        '[class.ant-tree-checkbox-disabled]': `!nzSelectMode && (isDisabled || isDisableCheckbox)`\n      },\n      standalone: true\n    }]\n  }], null, {\n    nzSelectMode: [{\n      type: Input\n    }],\n    isChecked: [{\n      type: Input\n    }],\n    isHalfChecked: [{\n      type: Input\n    }],\n    isDisabled: [{\n      type: Input\n    }],\n    isDisableCheckbox: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTreeNodeSwitcherComponent {\n  constructor() {\n    this.nzSelectMode = false;\n  }\n  get isShowLineIcon() {\n    return !this.isLeaf && !!this.nzShowLine;\n  }\n  get isShowSwitchIcon() {\n    return !this.isLeaf && !this.nzShowLine;\n  }\n  get isSwitcherOpen() {\n    return !!this.isExpanded && !this.isLeaf;\n  }\n  get isSwitcherClose() {\n    return !this.isExpanded && !this.isLeaf;\n  }\n  static {\n    this.ɵfac = function NzTreeNodeSwitcherComponent_Factory(t) {\n      return new (t || NzTreeNodeSwitcherComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzTreeNodeSwitcherComponent,\n      selectors: [[\"nz-tree-node-switcher\"]],\n      hostVars: 16,\n      hostBindings: function NzTreeNodeSwitcherComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ant-select-tree-switcher\", ctx.nzSelectMode)(\"ant-select-tree-switcher-noop\", ctx.nzSelectMode && ctx.isLeaf)(\"ant-select-tree-switcher_open\", ctx.nzSelectMode && ctx.isSwitcherOpen)(\"ant-select-tree-switcher_close\", ctx.nzSelectMode && ctx.isSwitcherClose)(\"ant-tree-switcher\", !ctx.nzSelectMode)(\"ant-tree-switcher-noop\", !ctx.nzSelectMode && ctx.isLeaf)(\"ant-tree-switcher_open\", !ctx.nzSelectMode && ctx.isSwitcherOpen)(\"ant-tree-switcher_close\", !ctx.nzSelectMode && ctx.isSwitcherClose);\n        }\n      },\n      inputs: {\n        nzShowExpand: \"nzShowExpand\",\n        nzShowLine: \"nzShowLine\",\n        nzExpandedIcon: \"nzExpandedIcon\",\n        nzSelectMode: \"nzSelectMode\",\n        context: \"context\",\n        isLeaf: \"isLeaf\",\n        isLoading: \"isLoading\",\n        isExpanded: \"isExpanded\"\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 4,\n      vars: 2,\n      consts: [[4, \"ngIf\"], [\"loadingTemplate\", \"\"], [4, \"ngIf\", \"ngIfElse\"], [4, \"nzStringTemplateOutlet\", \"nzStringTemplateOutletContext\"], [\"nz-icon\", \"\", \"nzType\", \"caret-down\"], [\"nz-icon\", \"\", \"class\", \"ant-tree-switcher-line-icon\", 3, \"nzType\", 4, \"ngIf\"], [\"nz-icon\", \"\", \"nzType\", \"file\", \"class\", \"ant-tree-switcher-line-icon\", 4, \"ngIf\"], [\"nz-icon\", \"\", 1, \"ant-tree-switcher-line-icon\", 3, \"nzType\"], [\"nz-icon\", \"\", \"nzType\", \"file\", 1, \"ant-tree-switcher-line-icon\"], [\"nz-icon\", \"\", \"nzType\", \"loading\", 1, \"ant-tree-switcher-loading-icon\", 3, \"nzSpin\"]],\n      template: function NzTreeNodeSwitcherComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, NzTreeNodeSwitcherComponent_ng_container_0_Template, 2, 2, \"ng-container\", 0)(1, NzTreeNodeSwitcherComponent_ng_container_1_Template, 2, 2, \"ng-container\", 0)(2, NzTreeNodeSwitcherComponent_ng_template_2_Template, 1, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.isShowSwitchIcon);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.nzShowLine);\n        }\n      },\n      dependencies: [NzIconModule, i1.NzIconDirective, NgIf, NzOutletModule, i2.NzStringTemplateOutletDirective],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTreeNodeSwitcherComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-tree-node-switcher',\n      template: `\n    <ng-container *ngIf=\"isShowSwitchIcon\">\n      <ng-container *ngIf=\"!isLoading; else loadingTemplate\">\n        <ng-container *nzStringTemplateOutlet=\"nzExpandedIcon; context: { $implicit: context, origin: context.origin }\">\n          <span\n            nz-icon\n            nzType=\"caret-down\"\n            [class.ant-select-tree-switcher-icon]=\"nzSelectMode\"\n            [class.ant-tree-switcher-icon]=\"!nzSelectMode\"\n          ></span>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n    <ng-container *ngIf=\"nzShowLine\">\n      <ng-container *ngIf=\"!isLoading; else loadingTemplate\">\n        <ng-container *nzStringTemplateOutlet=\"nzExpandedIcon; context: { $implicit: context, origin: context.origin }\">\n          <span\n            *ngIf=\"isShowLineIcon\"\n            nz-icon\n            [nzType]=\"isSwitcherOpen ? 'minus-square' : 'plus-square'\"\n            class=\"ant-tree-switcher-line-icon\"\n          ></span>\n          <span *ngIf=\"!isShowLineIcon\" nz-icon nzType=\"file\" class=\"ant-tree-switcher-line-icon\"></span>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n    <ng-template #loadingTemplate>\n      <span nz-icon nzType=\"loading\" [nzSpin]=\"true\" class=\"ant-tree-switcher-loading-icon\"></span>\n    </ng-template>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      preserveWhitespaces: false,\n      host: {\n        '[class.ant-select-tree-switcher]': 'nzSelectMode',\n        '[class.ant-select-tree-switcher-noop]': 'nzSelectMode && isLeaf',\n        '[class.ant-select-tree-switcher_open]': 'nzSelectMode && isSwitcherOpen',\n        '[class.ant-select-tree-switcher_close]': 'nzSelectMode && isSwitcherClose',\n        '[class.ant-tree-switcher]': '!nzSelectMode',\n        '[class.ant-tree-switcher-noop]': '!nzSelectMode && isLeaf',\n        '[class.ant-tree-switcher_open]': '!nzSelectMode && isSwitcherOpen',\n        '[class.ant-tree-switcher_close]': '!nzSelectMode && isSwitcherClose'\n      },\n      imports: [NzIconModule, NgIf, NzOutletModule],\n      standalone: true\n    }]\n  }], null, {\n    nzShowExpand: [{\n      type: Input\n    }],\n    nzShowLine: [{\n      type: Input\n    }],\n    nzExpandedIcon: [{\n      type: Input\n    }],\n    nzSelectMode: [{\n      type: Input\n    }],\n    context: [{\n      type: Input\n    }],\n    isLeaf: [{\n      type: Input\n    }],\n    isLoading: [{\n      type: Input\n    }],\n    isExpanded: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTreeNodeTitleComponent {\n  get canDraggable() {\n    return this.draggable && !this.isDisabled ? true : null;\n  }\n  get matchedValue() {\n    return this.isMatched ? this.searchValue : '';\n  }\n  get isSwitcherOpen() {\n    return this.isExpanded && !this.isLeaf;\n  }\n  get isSwitcherClose() {\n    return !this.isExpanded && !this.isLeaf;\n  }\n  constructor(cdr) {\n    this.cdr = cdr;\n    this.treeTemplate = null;\n    this.selectMode = false;\n    // Drag indicator\n    this.showIndicator = true;\n  }\n  ngOnChanges(changes) {\n    const {\n      showIndicator,\n      dragPosition\n    } = changes;\n    if (showIndicator || dragPosition) {\n      this.cdr.markForCheck();\n    }\n  }\n  static {\n    this.ɵfac = function NzTreeNodeTitleComponent_Factory(t) {\n      return new (t || NzTreeNodeTitleComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzTreeNodeTitleComponent,\n      selectors: [[\"nz-tree-node-title\"]],\n      hostVars: 21,\n      hostBindings: function NzTreeNodeTitleComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"title\", ctx.title)(\"draggable\", ctx.canDraggable)(\"aria-grabbed\", ctx.canDraggable);\n          i0.ɵɵclassProp(\"draggable\", ctx.canDraggable)(\"ant-select-tree-node-content-wrapper\", ctx.selectMode)(\"ant-select-tree-node-content-wrapper-open\", ctx.selectMode && ctx.isSwitcherOpen)(\"ant-select-tree-node-content-wrapper-close\", ctx.selectMode && ctx.isSwitcherClose)(\"ant-select-tree-node-selected\", ctx.selectMode && ctx.isSelected)(\"ant-tree-node-content-wrapper\", !ctx.selectMode)(\"ant-tree-node-content-wrapper-open\", !ctx.selectMode && ctx.isSwitcherOpen)(\"ant-tree-node-content-wrapper-close\", !ctx.selectMode && ctx.isSwitcherClose)(\"ant-tree-node-selected\", !ctx.selectMode && ctx.isSelected);\n        }\n      },\n      inputs: {\n        searchValue: \"searchValue\",\n        treeTemplate: \"treeTemplate\",\n        draggable: \"draggable\",\n        showIcon: \"showIcon\",\n        selectMode: \"selectMode\",\n        context: \"context\",\n        icon: \"icon\",\n        title: \"title\",\n        isLoading: \"isLoading\",\n        isSelected: \"isSelected\",\n        isDisabled: \"isDisabled\",\n        isMatched: \"isMatched\",\n        isExpanded: \"isExpanded\",\n        isLeaf: \"isLeaf\",\n        showIndicator: \"showIndicator\",\n        dragPosition: \"dragPosition\"\n      },\n      standalone: true,\n      features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      decls: 3,\n      vars: 7,\n      consts: [[3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [4, \"ngIf\"], [3, \"dropPosition\", \"level\", 4, \"ngIf\"], [3, \"ant-tree-icon__open\", \"ant-tree-icon__close\", \"ant-tree-icon_loading\", \"ant-select-tree-iconEle\", \"ant-tree-iconEle\", 4, \"ngIf\"], [1, \"ant-tree-title\", 3, \"innerHTML\"], [\"nz-icon\", \"\", 3, \"nzType\", 4, \"ngIf\"], [\"nz-icon\", \"\", 3, \"nzType\"], [3, \"dropPosition\", \"level\"]],\n      template: function NzTreeNodeTitleComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, NzTreeNodeTitleComponent_ng_template_0_Template, 0, 0, \"ng-template\", 0)(1, NzTreeNodeTitleComponent_ng_container_1_Template, 4, 7, \"ng-container\", 1)(2, NzTreeNodeTitleComponent_nz_tree_drop_indicator_2_Template, 1, 2, \"nz-tree-drop-indicator\", 2);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.treeTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(4, _c1, ctx.context, ctx.context.origin));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.treeTemplate);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.showIndicator);\n        }\n      },\n      dependencies: [NgTemplateOutlet, NgIf, NzIconModule, i1.NzIconDirective, NzHighlightModule, i2$1.NzHighlightPipe, NzTreeDropIndicatorComponent],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTreeNodeTitleComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-tree-node-title',\n      template: `\n    <ng-template\n      [ngTemplateOutlet]=\"treeTemplate\"\n      [ngTemplateOutletContext]=\"{ $implicit: context, origin: context.origin }\"\n    ></ng-template>\n    <ng-container *ngIf=\"!treeTemplate\">\n      <span\n        *ngIf=\"icon && showIcon\"\n        [class.ant-tree-icon__open]=\"isSwitcherOpen\"\n        [class.ant-tree-icon__close]=\"isSwitcherClose\"\n        [class.ant-tree-icon_loading]=\"isLoading\"\n        [class.ant-select-tree-iconEle]=\"selectMode\"\n        [class.ant-tree-iconEle]=\"!selectMode\"\n      >\n        <span\n          [class.ant-select-tree-iconEle]=\"selectMode\"\n          [class.ant-select-tree-icon__customize]=\"selectMode\"\n          [class.ant-tree-iconEle]=\"!selectMode\"\n          [class.ant-tree-icon__customize]=\"!selectMode\"\n        >\n          <span nz-icon *ngIf=\"icon\" [nzType]=\"icon\"></span>\n        </span>\n      </span>\n      <span class=\"ant-tree-title\" [innerHTML]=\"title | nzHighlight: matchedValue : 'i' : 'font-highlight'\"></span>\n    </ng-container>\n    <nz-tree-drop-indicator\n      *ngIf=\"showIndicator\"\n      [dropPosition]=\"dragPosition\"\n      [level]=\"context.level\"\n    ></nz-tree-drop-indicator>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      preserveWhitespaces: false,\n      host: {\n        '[attr.title]': 'title',\n        '[attr.draggable]': 'canDraggable',\n        '[attr.aria-grabbed]': 'canDraggable',\n        '[class.draggable]': 'canDraggable',\n        '[class.ant-select-tree-node-content-wrapper]': `selectMode`,\n        '[class.ant-select-tree-node-content-wrapper-open]': `selectMode && isSwitcherOpen`,\n        '[class.ant-select-tree-node-content-wrapper-close]': `selectMode && isSwitcherClose`,\n        '[class.ant-select-tree-node-selected]': `selectMode && isSelected`,\n        '[class.ant-tree-node-content-wrapper]': `!selectMode`,\n        '[class.ant-tree-node-content-wrapper-open]': `!selectMode && isSwitcherOpen`,\n        '[class.ant-tree-node-content-wrapper-close]': `!selectMode && isSwitcherClose`,\n        '[class.ant-tree-node-selected]': `!selectMode && isSelected`\n      },\n      imports: [NgTemplateOutlet, NgIf, NzIconModule, NzHighlightModule, NzTreeDropIndicatorComponent],\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ChangeDetectorRef\n  }], {\n    searchValue: [{\n      type: Input\n    }],\n    treeTemplate: [{\n      type: Input\n    }],\n    draggable: [{\n      type: Input\n    }],\n    showIcon: [{\n      type: Input\n    }],\n    selectMode: [{\n      type: Input\n    }],\n    context: [{\n      type: Input\n    }],\n    icon: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    isLoading: [{\n      type: Input\n    }],\n    isSelected: [{\n      type: Input\n    }],\n    isDisabled: [{\n      type: Input\n    }],\n    isMatched: [{\n      type: Input\n    }],\n    isExpanded: [{\n      type: Input\n    }],\n    isLeaf: [{\n      type: Input\n    }],\n    showIndicator: [{\n      type: Input\n    }],\n    dragPosition: [{\n      type: Input\n    }]\n  });\n})();\nclass NzTreeNodeBuiltinComponent {\n  /**\n   * default set\n   */\n  get displayStyle() {\n    // to hide unmatched nodes\n    return this.nzSearchValue && this.nzHideUnMatched && !this.isMatched && !this.isExpanded && this.canHide ? 'none' : '';\n  }\n  get isSwitcherOpen() {\n    return this.isExpanded && !this.isLeaf;\n  }\n  get isSwitcherClose() {\n    return !this.isExpanded && !this.isLeaf;\n  }\n  /**\n   * collapse node\n   *\n   * @param event\n   */\n  clickExpand(event) {\n    event.preventDefault();\n    if (!this.isLoading && !this.isLeaf) {\n      // set async state\n      if (this.nzAsyncData && this.nzTreeNode.children.length === 0 && !this.isExpanded) {\n        this.nzTreeNode.isLoading = true;\n      }\n      this.nzTreeNode.setExpanded(!this.isExpanded);\n    }\n    this.nzTreeService.setExpandedNodeList(this.nzTreeNode);\n    const eventNext = this.nzTreeService.formatEvent('expand', this.nzTreeNode, event);\n    this.nzExpandChange.emit(eventNext);\n  }\n  clickSelect(event) {\n    event.preventDefault();\n    if (this.isSelectable && !this.isDisabled) {\n      this.nzTreeNode.isSelected = !this.nzTreeNode.isSelected;\n    }\n    this.nzTreeService.setSelectedNodeList(this.nzTreeNode);\n    const eventNext = this.nzTreeService.formatEvent('click', this.nzTreeNode, event);\n    this.nzClick.emit(eventNext);\n  }\n  dblClick(event) {\n    event.preventDefault();\n    const eventNext = this.nzTreeService.formatEvent('dblclick', this.nzTreeNode, event);\n    this.nzDblClick.emit(eventNext);\n  }\n  contextMenu(event) {\n    event.preventDefault();\n    const eventNext = this.nzTreeService.formatEvent('contextmenu', this.nzTreeNode, event);\n    this.nzContextMenu.emit(eventNext);\n  }\n  /**\n   * check node\n   *\n   * @param event\n   */\n  clickCheckBox(event) {\n    event.preventDefault();\n    // return if node is disabled\n    if (this.isDisabled || this.isDisableCheckbox) {\n      return;\n    }\n    this.nzTreeNode.isChecked = !this.nzTreeNode.isChecked;\n    this.nzTreeNode.isHalfChecked = false;\n    this.nzTreeService.setCheckedNodeList(this.nzTreeNode);\n    const eventNext = this.nzTreeService.formatEvent('check', this.nzTreeNode, event);\n    this.nzCheckBoxChange.emit(eventNext);\n  }\n  clearDragClass() {\n    const dragClass = ['drag-over-gap-top', 'drag-over-gap-bottom', 'drag-over', 'drop-target'];\n    dragClass.forEach(e => {\n      this.renderer.removeClass(this.elementRef.nativeElement, e);\n    });\n  }\n  /**\n   * drag event\n   *\n   * @param e\n   */\n  handleDragStart(e) {\n    try {\n      // ie throw error\n      // firefox-need-it\n      e.dataTransfer.setData('text/plain', this.nzTreeNode.key);\n    } catch (error) {\n      // empty\n    }\n    this.nzTreeService.setSelectedNode(this.nzTreeNode);\n    this.draggingKey = this.nzTreeNode.key;\n    const eventNext = this.nzTreeService.formatEvent('dragstart', this.nzTreeNode, e);\n    this.nzOnDragStart.emit(eventNext);\n  }\n  handleDragEnter(e) {\n    e.preventDefault();\n    // reset position\n    this.showIndicator = this.nzTreeNode.key !== this.nzTreeService.getSelectedNode()?.key;\n    this.renderIndicator(2);\n    this.ngZone.run(() => {\n      const eventNext = this.nzTreeService.formatEvent('dragenter', this.nzTreeNode, e);\n      this.nzOnDragEnter.emit(eventNext);\n    });\n  }\n  handleDragOver(e) {\n    e.preventDefault();\n    const dropPosition = this.nzTreeService.calcDropPosition(e);\n    if (this.dragPos !== dropPosition) {\n      this.clearDragClass();\n      this.renderIndicator(dropPosition);\n      // leaf node will pass\n      if (!(this.dragPos === 0 && this.isLeaf)) {\n        this.renderer.addClass(this.elementRef.nativeElement, this.dragPosClass[this.dragPos]);\n        this.renderer.addClass(this.elementRef.nativeElement, 'drop-target');\n      }\n    }\n    const eventNext = this.nzTreeService.formatEvent('dragover', this.nzTreeNode, e);\n    this.nzOnDragOver.emit(eventNext);\n  }\n  handleDragLeave(e) {\n    e.preventDefault();\n    this.renderIndicator(2);\n    this.clearDragClass();\n    const eventNext = this.nzTreeService.formatEvent('dragleave', this.nzTreeNode, e);\n    this.nzOnDragLeave.emit(eventNext);\n  }\n  handleDragDrop(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.ngZone.run(() => {\n      this.showIndicator = false;\n      this.clearDragClass();\n      const node = this.nzTreeService.getSelectedNode();\n      if (!node || node && node.key === this.nzTreeNode.key || this.dragPos === 0 && this.isLeaf) {\n        return;\n      }\n      // pass if node is leafNo\n      const dropEvent = this.nzTreeService.formatEvent('drop', this.nzTreeNode, e);\n      const dragEndEvent = this.nzTreeService.formatEvent('dragend', this.nzTreeNode, e);\n      if (this.nzBeforeDrop) {\n        this.nzBeforeDrop({\n          dragNode: this.nzTreeService.getSelectedNode(),\n          node: this.nzTreeNode,\n          pos: this.dragPos\n        }).subscribe(canDrop => {\n          if (canDrop) {\n            this.nzTreeService.dropAndApply(this.nzTreeNode, this.dragPos);\n          }\n          this.nzOnDrop.emit(dropEvent);\n          this.nzOnDragEnd.emit(dragEndEvent);\n        });\n      } else if (this.nzTreeNode) {\n        this.nzTreeService.dropAndApply(this.nzTreeNode, this.dragPos);\n        this.nzOnDrop.emit(dropEvent);\n      }\n    });\n  }\n  handleDragEnd(e) {\n    e.preventDefault();\n    this.ngZone.run(() => {\n      // if user do not custom beforeDrop\n      if (!this.nzBeforeDrop) {\n        // clear dragging state\n        this.draggingKey = null;\n        const eventNext = this.nzTreeService.formatEvent('dragend', this.nzTreeNode, e);\n        this.nzOnDragEnd.emit(eventNext);\n      } else {\n        // clear dragging state\n        this.draggingKey = null;\n        this.markForCheck();\n      }\n    });\n  }\n  /**\n   * Listening to dragging events.\n   */\n  handDragEvent() {\n    this.ngZone.runOutsideAngular(() => {\n      if (this.nzDraggable) {\n        const nativeElement = this.elementRef.nativeElement;\n        this.destroy$ = new Subject();\n        fromEvent(nativeElement, 'dragstart').pipe(takeUntil(this.destroy$)).subscribe(e => this.handleDragStart(e));\n        fromEvent(nativeElement, 'dragenter').pipe(takeUntil(this.destroy$)).subscribe(e => this.handleDragEnter(e));\n        fromEvent(nativeElement, 'dragover').pipe(takeUntil(this.destroy$)).subscribe(e => this.handleDragOver(e));\n        fromEvent(nativeElement, 'dragleave').pipe(takeUntil(this.destroy$)).subscribe(e => this.handleDragLeave(e));\n        fromEvent(nativeElement, 'drop').pipe(takeUntil(this.destroy$)).subscribe(e => this.handleDragDrop(e));\n        fromEvent(nativeElement, 'dragend').pipe(takeUntil(this.destroy$)).subscribe(e => this.handleDragEnd(e));\n      } else {\n        this.destroy$.next(true);\n        this.destroy$.complete();\n      }\n    });\n  }\n  markForCheck() {\n    this.cdr.markForCheck();\n  }\n  constructor(nzTreeService, ngZone, renderer, elementRef, cdr, noAnimation) {\n    this.nzTreeService = nzTreeService;\n    this.ngZone = ngZone;\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.cdr = cdr;\n    this.noAnimation = noAnimation;\n    /**\n     * for global property\n     */\n    this.icon = '';\n    this.title = '';\n    this.isLoading = false;\n    this.isSelected = false;\n    this.isDisabled = false;\n    this.isMatched = false;\n    this.isStart = [];\n    this.isEnd = [];\n    this.nzHideUnMatched = false;\n    this.nzNoAnimation = false;\n    this.nzSelectMode = false;\n    this.nzShowIcon = false;\n    this.nzTreeTemplate = null;\n    this.nzSearchValue = '';\n    this.nzDraggable = false;\n    this.nzClick = new EventEmitter();\n    this.nzDblClick = new EventEmitter();\n    this.nzContextMenu = new EventEmitter();\n    this.nzCheckBoxChange = new EventEmitter();\n    this.nzExpandChange = new EventEmitter();\n    this.nzOnDragStart = new EventEmitter();\n    this.nzOnDragEnter = new EventEmitter();\n    this.nzOnDragOver = new EventEmitter();\n    this.nzOnDragLeave = new EventEmitter();\n    this.nzOnDrop = new EventEmitter();\n    this.nzOnDragEnd = new EventEmitter();\n    /**\n     * drag var\n     */\n    this.destroy$ = new Subject();\n    this.dragPos = 2;\n    this.dragPosClass = {\n      0: 'drag-over',\n      1: 'drag-over-gap-bottom',\n      '-1': 'drag-over-gap-top'\n    };\n    this.draggingKey = null;\n    this.showIndicator = false;\n  }\n  ngOnInit() {\n    this.nzTreeNode.component = this;\n    this.ngZone.runOutsideAngular(() => {\n      fromEvent(this.elementRef.nativeElement, 'mousedown').pipe(takeUntil(this.destroy$)).subscribe(event => {\n        if (this.nzSelectMode) {\n          event.preventDefault();\n        }\n      });\n    });\n  }\n  ngOnChanges(changes) {\n    const {\n      nzDraggable\n    } = changes;\n    if (nzDraggable) {\n      this.handDragEvent();\n    }\n  }\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  renderIndicator(dropPosition) {\n    this.ngZone.run(() => {\n      this.showIndicator = dropPosition !== 2;\n      if (this.nzTreeNode.key === this.nzTreeService.getSelectedNode()?.key || dropPosition === 0 && this.isLeaf) {\n        return;\n      }\n      this.dragPos = dropPosition;\n      this.cdr.markForCheck();\n    });\n  }\n  static {\n    this.ɵfac = function NzTreeNodeBuiltinComponent_Factory(t) {\n      return new (t || NzTreeNodeBuiltinComponent)(i0.ɵɵdirectiveInject(i1$1.NzTreeBaseService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2$2.NzNoAnimationDirective, 9));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzTreeNodeBuiltinComponent,\n      selectors: [[\"nz-tree-node\", \"builtin\", \"\"]],\n      hostVars: 36,\n      hostBindings: function NzTreeNodeBuiltinComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"display\", ctx.displayStyle);\n          i0.ɵɵclassProp(\"ant-select-tree-treenode\", ctx.nzSelectMode)(\"ant-select-tree-treenode-disabled\", ctx.nzSelectMode && ctx.isDisabled)(\"ant-select-tree-treenode-switcher-open\", ctx.nzSelectMode && ctx.isSwitcherOpen)(\"ant-select-tree-treenode-switcher-close\", ctx.nzSelectMode && ctx.isSwitcherClose)(\"ant-select-tree-treenode-checkbox-checked\", ctx.nzSelectMode && ctx.isChecked)(\"ant-select-tree-treenode-checkbox-indeterminate\", ctx.nzSelectMode && ctx.isHalfChecked)(\"ant-select-tree-treenode-selected\", ctx.nzSelectMode && ctx.isSelected)(\"ant-select-tree-treenode-loading\", ctx.nzSelectMode && ctx.isLoading)(\"ant-tree-treenode\", !ctx.nzSelectMode)(\"ant-tree-treenode-disabled\", !ctx.nzSelectMode && ctx.isDisabled)(\"ant-tree-treenode-switcher-open\", !ctx.nzSelectMode && ctx.isSwitcherOpen)(\"ant-tree-treenode-switcher-close\", !ctx.nzSelectMode && ctx.isSwitcherClose)(\"ant-tree-treenode-checkbox-checked\", !ctx.nzSelectMode && ctx.isChecked)(\"ant-tree-treenode-checkbox-indeterminate\", !ctx.nzSelectMode && ctx.isHalfChecked)(\"ant-tree-treenode-selected\", !ctx.nzSelectMode && ctx.isSelected)(\"ant-tree-treenode-loading\", !ctx.nzSelectMode && ctx.isLoading)(\"dragging\", ctx.draggingKey === ctx.nzTreeNode.key);\n        }\n      },\n      inputs: {\n        icon: \"icon\",\n        title: \"title\",\n        isLoading: \"isLoading\",\n        isSelected: \"isSelected\",\n        isDisabled: \"isDisabled\",\n        isMatched: \"isMatched\",\n        isExpanded: \"isExpanded\",\n        isLeaf: \"isLeaf\",\n        isChecked: \"isChecked\",\n        isHalfChecked: \"isHalfChecked\",\n        isDisableCheckbox: \"isDisableCheckbox\",\n        isSelectable: \"isSelectable\",\n        canHide: \"canHide\",\n        isStart: \"isStart\",\n        isEnd: \"isEnd\",\n        nzTreeNode: \"nzTreeNode\",\n        nzShowLine: \"nzShowLine\",\n        nzShowExpand: \"nzShowExpand\",\n        nzCheckable: \"nzCheckable\",\n        nzAsyncData: \"nzAsyncData\",\n        nzHideUnMatched: \"nzHideUnMatched\",\n        nzNoAnimation: \"nzNoAnimation\",\n        nzSelectMode: \"nzSelectMode\",\n        nzShowIcon: \"nzShowIcon\",\n        nzExpandedIcon: \"nzExpandedIcon\",\n        nzTreeTemplate: \"nzTreeTemplate\",\n        nzBeforeDrop: \"nzBeforeDrop\",\n        nzSearchValue: \"nzSearchValue\",\n        nzDraggable: \"nzDraggable\"\n      },\n      outputs: {\n        nzClick: \"nzClick\",\n        nzDblClick: \"nzDblClick\",\n        nzContextMenu: \"nzContextMenu\",\n        nzCheckBoxChange: \"nzCheckBoxChange\",\n        nzExpandChange: \"nzExpandChange\",\n        nzOnDragStart: \"nzOnDragStart\",\n        nzOnDragEnter: \"nzOnDragEnter\",\n        nzOnDragOver: \"nzOnDragOver\",\n        nzOnDragLeave: \"nzOnDragLeave\",\n        nzOnDrop: \"nzOnDrop\",\n        nzOnDragEnd: \"nzOnDragEnd\"\n      },\n      exportAs: [\"nzTreeBuiltinNode\"],\n      standalone: true,\n      features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      attrs: _c0,\n      decls: 4,\n      vars: 22,\n      consts: [[3, \"nzTreeLevel\", \"nzSelectMode\", \"nzIsStart\", \"nzIsEnd\"], [3, \"nzShowExpand\", \"nzShowLine\", \"nzExpandedIcon\", \"nzSelectMode\", \"context\", \"isLeaf\", \"isExpanded\", \"isLoading\", \"click\", 4, \"ngIf\"], [\"builtin\", \"\", 3, \"nzSelectMode\", \"isChecked\", \"isHalfChecked\", \"isDisabled\", \"isDisableCheckbox\", \"click\", 4, \"ngIf\"], [3, \"icon\", \"title\", \"isLoading\", \"isSelected\", \"isDisabled\", \"isMatched\", \"isExpanded\", \"isLeaf\", \"searchValue\", \"treeTemplate\", \"draggable\", \"showIcon\", \"selectMode\", \"context\", \"showIndicator\", \"dragPosition\", \"dblclick\", \"click\", \"contextmenu\"], [3, \"nzShowExpand\", \"nzShowLine\", \"nzExpandedIcon\", \"nzSelectMode\", \"context\", \"isLeaf\", \"isExpanded\", \"isLoading\", \"click\"], [\"builtin\", \"\", 3, \"nzSelectMode\", \"isChecked\", \"isHalfChecked\", \"isDisabled\", \"isDisableCheckbox\", \"click\"]],\n      template: function NzTreeNodeBuiltinComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"nz-tree-indent\", 0);\n          i0.ɵɵtemplate(1, NzTreeNodeBuiltinComponent_nz_tree_node_switcher_1_Template, 1, 8, \"nz-tree-node-switcher\", 1)(2, NzTreeNodeBuiltinComponent_nz_tree_node_checkbox_2_Template, 1, 5, \"nz-tree-node-checkbox\", 2);\n          i0.ɵɵelementStart(3, \"nz-tree-node-title\", 3);\n          i0.ɵɵlistener(\"dblclick\", function NzTreeNodeBuiltinComponent_Template_nz_tree_node_title_dblclick_3_listener($event) {\n            return ctx.dblClick($event);\n          })(\"click\", function NzTreeNodeBuiltinComponent_Template_nz_tree_node_title_click_3_listener($event) {\n            return ctx.clickSelect($event);\n          })(\"contextmenu\", function NzTreeNodeBuiltinComponent_Template_nz_tree_node_title_contextmenu_3_listener($event) {\n            return ctx.contextMenu($event);\n          });\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"nzTreeLevel\", ctx.nzTreeNode.level)(\"nzSelectMode\", ctx.nzSelectMode)(\"nzIsStart\", ctx.isStart)(\"nzIsEnd\", ctx.isEnd);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.nzShowExpand);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.nzCheckable);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"icon\", ctx.icon)(\"title\", ctx.title)(\"isLoading\", ctx.isLoading)(\"isSelected\", ctx.isSelected)(\"isDisabled\", ctx.isDisabled)(\"isMatched\", ctx.isMatched)(\"isExpanded\", ctx.isExpanded)(\"isLeaf\", ctx.isLeaf)(\"searchValue\", ctx.nzSearchValue)(\"treeTemplate\", ctx.nzTreeTemplate)(\"draggable\", ctx.nzDraggable)(\"showIcon\", ctx.nzShowIcon)(\"selectMode\", ctx.nzSelectMode)(\"context\", ctx.nzTreeNode)(\"showIndicator\", ctx.showIndicator)(\"dragPosition\", ctx.dragPos);\n        }\n      },\n      dependencies: [NzTreeIndentComponent, NzTreeNodeSwitcherComponent, NgIf, NzTreeNodeBuiltinCheckboxComponent, NzTreeNodeTitleComponent],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n__decorate([InputBoolean()], NzTreeNodeBuiltinComponent.prototype, \"nzShowLine\", void 0);\n__decorate([InputBoolean()], NzTreeNodeBuiltinComponent.prototype, \"nzShowExpand\", void 0);\n__decorate([InputBoolean()], NzTreeNodeBuiltinComponent.prototype, \"nzCheckable\", void 0);\n__decorate([InputBoolean()], NzTreeNodeBuiltinComponent.prototype, \"nzAsyncData\", void 0);\n__decorate([InputBoolean()], NzTreeNodeBuiltinComponent.prototype, \"nzHideUnMatched\", void 0);\n__decorate([InputBoolean()], NzTreeNodeBuiltinComponent.prototype, \"nzNoAnimation\", void 0);\n__decorate([InputBoolean()], NzTreeNodeBuiltinComponent.prototype, \"nzSelectMode\", void 0);\n__decorate([InputBoolean()], NzTreeNodeBuiltinComponent.prototype, \"nzShowIcon\", void 0);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTreeNodeBuiltinComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-tree-node[builtin]',\n      exportAs: 'nzTreeBuiltinNode',\n      template: `\n    <nz-tree-indent\n      [nzTreeLevel]=\"nzTreeNode.level\"\n      [nzSelectMode]=\"nzSelectMode\"\n      [nzIsStart]=\"isStart\"\n      [nzIsEnd]=\"isEnd\"\n    ></nz-tree-indent>\n    <nz-tree-node-switcher\n      *ngIf=\"nzShowExpand\"\n      [nzShowExpand]=\"nzShowExpand\"\n      [nzShowLine]=\"nzShowLine\"\n      [nzExpandedIcon]=\"nzExpandedIcon\"\n      [nzSelectMode]=\"nzSelectMode\"\n      [context]=\"nzTreeNode\"\n      [isLeaf]=\"isLeaf\"\n      [isExpanded]=\"isExpanded\"\n      [isLoading]=\"isLoading\"\n      (click)=\"clickExpand($event)\"\n    ></nz-tree-node-switcher>\n    <nz-tree-node-checkbox\n      builtin\n      *ngIf=\"nzCheckable\"\n      (click)=\"clickCheckBox($event)\"\n      [nzSelectMode]=\"nzSelectMode\"\n      [isChecked]=\"isChecked\"\n      [isHalfChecked]=\"isHalfChecked\"\n      [isDisabled]=\"isDisabled\"\n      [isDisableCheckbox]=\"isDisableCheckbox\"\n    ></nz-tree-node-checkbox>\n    <nz-tree-node-title\n      [icon]=\"icon\"\n      [title]=\"title\"\n      [isLoading]=\"isLoading\"\n      [isSelected]=\"isSelected\"\n      [isDisabled]=\"isDisabled\"\n      [isMatched]=\"isMatched\"\n      [isExpanded]=\"isExpanded\"\n      [isLeaf]=\"isLeaf\"\n      [searchValue]=\"nzSearchValue\"\n      [treeTemplate]=\"nzTreeTemplate\"\n      [draggable]=\"nzDraggable\"\n      [showIcon]=\"nzShowIcon\"\n      [selectMode]=\"nzSelectMode\"\n      [context]=\"nzTreeNode\"\n      [showIndicator]=\"showIndicator\"\n      [dragPosition]=\"dragPos\"\n      (dblclick)=\"dblClick($event)\"\n      (click)=\"clickSelect($event)\"\n      (contextmenu)=\"contextMenu($event)\"\n    ></nz-tree-node-title>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      preserveWhitespaces: false,\n      host: {\n        '[class.ant-select-tree-treenode]': `nzSelectMode`,\n        '[class.ant-select-tree-treenode-disabled]': `nzSelectMode && isDisabled`,\n        '[class.ant-select-tree-treenode-switcher-open]': `nzSelectMode && isSwitcherOpen`,\n        '[class.ant-select-tree-treenode-switcher-close]': `nzSelectMode && isSwitcherClose`,\n        '[class.ant-select-tree-treenode-checkbox-checked]': `nzSelectMode && isChecked`,\n        '[class.ant-select-tree-treenode-checkbox-indeterminate]': `nzSelectMode && isHalfChecked`,\n        '[class.ant-select-tree-treenode-selected]': `nzSelectMode && isSelected`,\n        '[class.ant-select-tree-treenode-loading]': `nzSelectMode && isLoading`,\n        '[class.ant-tree-treenode]': `!nzSelectMode`,\n        '[class.ant-tree-treenode-disabled]': `!nzSelectMode && isDisabled`,\n        '[class.ant-tree-treenode-switcher-open]': `!nzSelectMode && isSwitcherOpen`,\n        '[class.ant-tree-treenode-switcher-close]': `!nzSelectMode && isSwitcherClose`,\n        '[class.ant-tree-treenode-checkbox-checked]': `!nzSelectMode && isChecked`,\n        '[class.ant-tree-treenode-checkbox-indeterminate]': `!nzSelectMode && isHalfChecked`,\n        '[class.ant-tree-treenode-selected]': `!nzSelectMode && isSelected`,\n        '[class.ant-tree-treenode-loading]': `!nzSelectMode && isLoading`,\n        '[class.dragging]': `draggingKey === nzTreeNode.key`,\n        '[style.display]': 'displayStyle'\n      },\n      imports: [NzTreeIndentComponent, NzTreeNodeSwitcherComponent, NgIf, NzTreeNodeBuiltinCheckboxComponent, NzTreeNodeTitleComponent],\n      standalone: true\n    }]\n  }], () => [{\n    type: i1$1.NzTreeBaseService\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i0.Renderer2\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i2$2.NzNoAnimationDirective,\n    decorators: [{\n      type: Host\n    }, {\n      type: Optional\n    }]\n  }], {\n    icon: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    isLoading: [{\n      type: Input\n    }],\n    isSelected: [{\n      type: Input\n    }],\n    isDisabled: [{\n      type: Input\n    }],\n    isMatched: [{\n      type: Input\n    }],\n    isExpanded: [{\n      type: Input\n    }],\n    isLeaf: [{\n      type: Input\n    }],\n    isChecked: [{\n      type: Input\n    }],\n    isHalfChecked: [{\n      type: Input\n    }],\n    isDisableCheckbox: [{\n      type: Input\n    }],\n    isSelectable: [{\n      type: Input\n    }],\n    canHide: [{\n      type: Input\n    }],\n    isStart: [{\n      type: Input\n    }],\n    isEnd: [{\n      type: Input\n    }],\n    nzTreeNode: [{\n      type: Input\n    }],\n    nzShowLine: [{\n      type: Input\n    }],\n    nzShowExpand: [{\n      type: Input\n    }],\n    nzCheckable: [{\n      type: Input\n    }],\n    nzAsyncData: [{\n      type: Input\n    }],\n    nzHideUnMatched: [{\n      type: Input\n    }],\n    nzNoAnimation: [{\n      type: Input\n    }],\n    nzSelectMode: [{\n      type: Input\n    }],\n    nzShowIcon: [{\n      type: Input\n    }],\n    nzExpandedIcon: [{\n      type: Input\n    }],\n    nzTreeTemplate: [{\n      type: Input\n    }],\n    nzBeforeDrop: [{\n      type: Input\n    }],\n    nzSearchValue: [{\n      type: Input\n    }],\n    nzDraggable: [{\n      type: Input\n    }],\n    nzClick: [{\n      type: Output\n    }],\n    nzDblClick: [{\n      type: Output\n    }],\n    nzContextMenu: [{\n      type: Output\n    }],\n    nzCheckBoxChange: [{\n      type: Output\n    }],\n    nzExpandChange: [{\n      type: Output\n    }],\n    nzOnDragStart: [{\n      type: Output\n    }],\n    nzOnDragEnter: [{\n      type: Output\n    }],\n    nzOnDragOver: [{\n      type: Output\n    }],\n    nzOnDragLeave: [{\n      type: Output\n    }],\n    nzOnDrop: [{\n      type: Output\n    }],\n    nzOnDragEnd: [{\n      type: Output\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTreeService extends NzTreeBaseService {\n  constructor() {\n    super();\n  }\n  static {\n    this.ɵfac = function NzTreeService_Factory(t) {\n      return new (t || NzTreeService)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NzTreeService,\n      factory: NzTreeService.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTreeService, [{\n    type: Injectable\n  }], () => [], null);\n})();\nfunction NzTreeServiceFactory() {\n  const higherOrderService = inject(NzTreeHigherOrderServiceToken, {\n    skipSelf: true,\n    optional: true\n  });\n  const treeService = inject(NzTreeService);\n  return higherOrderService ?? treeService;\n}\nconst NZ_CONFIG_MODULE_NAME = 'tree';\nclass NzTreeComponent extends NzTreeBase {\n  writeValue(value) {\n    this.handleNzData(value);\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  /**\n   * Render all properties of nzTree\n   *\n   * @param changes: all changes from @Input\n   */\n  renderTreeProperties(changes) {\n    let useDefaultExpandedKeys = false;\n    let expandAll = false;\n    const {\n      nzData,\n      nzExpandedKeys,\n      nzSelectedKeys,\n      nzCheckedKeys,\n      nzCheckStrictly,\n      nzExpandAll,\n      nzMultiple,\n      nzSearchValue\n    } = changes;\n    if (nzExpandAll) {\n      useDefaultExpandedKeys = true;\n      expandAll = this.nzExpandAll;\n    }\n    if (nzMultiple) {\n      this.nzTreeService.isMultiple = this.nzMultiple;\n    }\n    if (nzCheckStrictly) {\n      this.nzTreeService.isCheckStrictly = this.nzCheckStrictly;\n    }\n    if (nzData) {\n      this.handleNzData(this.nzData);\n    }\n    if (nzCheckedKeys) {\n      this.handleCheckedKeys(this.nzCheckedKeys);\n    }\n    if (nzCheckStrictly) {\n      this.handleCheckedKeys(null);\n    }\n    if (nzExpandedKeys || nzExpandAll) {\n      useDefaultExpandedKeys = true;\n      this.handleExpandedKeys(expandAll || this.nzExpandedKeys);\n    }\n    if (nzSelectedKeys) {\n      this.handleSelectedKeys(this.nzSelectedKeys, this.nzMultiple);\n    }\n    if (nzSearchValue) {\n      if (!(nzSearchValue.firstChange && !this.nzSearchValue)) {\n        useDefaultExpandedKeys = false;\n        this.handleSearchValue(nzSearchValue.currentValue, this.nzSearchFunc);\n        this.nzSearchValueChange.emit(this.nzTreeService.formatEvent('search', null, null));\n      }\n    }\n    // flatten data\n    const currentExpandedKeys = this.getExpandedNodeList().map(v => v.key);\n    const newExpandedKeys = useDefaultExpandedKeys ? expandAll || this.nzExpandedKeys : currentExpandedKeys;\n    this.handleFlattenNodes(this.nzTreeService.rootNodes, newExpandedKeys);\n  }\n  trackByFlattenNode(_, node) {\n    return node.key;\n  }\n  // Deal with properties\n  /**\n   * nzData\n   *\n   * @param value\n   */\n  handleNzData(value) {\n    if (Array.isArray(value)) {\n      const data = this.coerceTreeNodes(value);\n      this.nzTreeService.initTree(data);\n    }\n  }\n  handleFlattenNodes(data, expandKeys = []) {\n    this.nzTreeService.flattenTreeData(data, expandKeys);\n  }\n  handleCheckedKeys(keys) {\n    this.nzTreeService.conductCheck(keys, this.nzCheckStrictly);\n  }\n  handleExpandedKeys(keys = []) {\n    this.nzTreeService.conductExpandedKeys(keys);\n  }\n  handleSelectedKeys(keys, isMulti) {\n    this.nzTreeService.conductSelectedKeys(keys, isMulti);\n  }\n  handleSearchValue(value, searchFunc) {\n    const dataList = flattenTreeData(this.nzTreeService.rootNodes, true).map(v => v.data);\n    const checkIfMatched = node => {\n      if (searchFunc) {\n        return searchFunc(node.origin);\n      }\n      return !value || !node.title.toLowerCase().includes(value.toLowerCase()) ? false : true;\n    };\n    dataList.forEach(v => {\n      v.isMatched = checkIfMatched(v);\n      v.canHide = !v.isMatched;\n      if (!v.isMatched) {\n        v.setExpanded(false);\n        this.nzTreeService.setExpandedNodeList(v);\n      } else {\n        // expand\n        this.nzTreeService.expandNodeAllParentBySearch(v);\n      }\n      this.nzTreeService.setMatchedNodeList(v);\n    });\n  }\n  /**\n   * Handle emit event\n   *\n   * @param event\n   * handle each event\n   */\n  eventTriggerChanged(event) {\n    const node = event.node;\n    switch (event.eventName) {\n      case 'expand':\n        this.renderTree();\n        this.nzExpandChange.emit(event);\n        break;\n      case 'click':\n        this.nzClick.emit(event);\n        break;\n      case 'dblclick':\n        this.nzDblClick.emit(event);\n        break;\n      case 'contextmenu':\n        this.nzContextMenu.emit(event);\n        break;\n      case 'check':\n        // Render checked state with nodes' property `isChecked`\n        this.nzTreeService.setCheckedNodeList(node);\n        if (!this.nzCheckStrictly) {\n          this.nzTreeService.conduct(node);\n        }\n        // Cause check method will rerender list, so we need recover it and next the new event to user\n        const eventNext = this.nzTreeService.formatEvent('check', node, event.event);\n        this.nzCheckBoxChange.emit(eventNext);\n        const checkedKeys = this.nzTreeService.getCheckedNodeKeys();\n        this.nzCheckedKeysChange.emit(checkedKeys);\n        break;\n      case 'dragstart':\n        // if node is expanded\n        if (node.isExpanded) {\n          node.setExpanded(!node.isExpanded);\n          this.renderTree();\n        }\n        this.nzOnDragStart.emit(event);\n        break;\n      case 'dragenter':\n        const selectedNode = this.nzTreeService.getSelectedNode();\n        if (selectedNode && selectedNode.key !== node.key && !node.isExpanded && !node.isLeaf) {\n          node.setExpanded(true);\n          this.renderTree();\n        }\n        this.nzOnDragEnter.emit(event);\n        break;\n      case 'dragover':\n        this.nzOnDragOver.emit(event);\n        break;\n      case 'dragleave':\n        this.nzOnDragLeave.emit(event);\n        break;\n      case 'dragend':\n        this.nzOnDragEnd.emit(event);\n        break;\n      case 'drop':\n        this.renderTree();\n        this.nzOnDrop.emit(event);\n        break;\n    }\n  }\n  /**\n   * Click expand icon\n   */\n  renderTree() {\n    this.handleFlattenNodes(this.nzTreeService.rootNodes, this.getExpandedNodeList().map(v => v.key));\n    this.cdr.markForCheck();\n  }\n  // Handle emit event end\n  constructor(nzTreeService, nzConfigService, cdr, directionality, noAnimation) {\n    super(nzTreeService);\n    this.nzConfigService = nzConfigService;\n    this.cdr = cdr;\n    this.directionality = directionality;\n    this.noAnimation = noAnimation;\n    this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n    this.nzShowIcon = false;\n    this.nzHideUnMatched = false;\n    this.nzBlockNode = false;\n    this.nzExpandAll = false;\n    this.nzSelectMode = false;\n    this.nzCheckStrictly = false;\n    this.nzShowExpand = true;\n    this.nzShowLine = false;\n    this.nzCheckable = false;\n    this.nzAsyncData = false;\n    this.nzDraggable = false;\n    this.nzMultiple = false;\n    this.nzVirtualItemSize = 28;\n    this.nzVirtualMaxBufferPx = 500;\n    this.nzVirtualMinBufferPx = 28;\n    this.nzVirtualHeight = null;\n    this.nzData = [];\n    this.nzExpandedKeys = [];\n    this.nzSelectedKeys = [];\n    this.nzCheckedKeys = [];\n    this.nzSearchValue = '';\n    this.nzFlattenNodes = [];\n    this.beforeInit = true;\n    this.dir = 'ltr';\n    this.nzExpandedKeysChange = new EventEmitter();\n    this.nzSelectedKeysChange = new EventEmitter();\n    this.nzCheckedKeysChange = new EventEmitter();\n    this.nzSearchValueChange = new EventEmitter();\n    this.nzClick = new EventEmitter();\n    this.nzDblClick = new EventEmitter();\n    this.nzContextMenu = new EventEmitter();\n    this.nzCheckBoxChange = new EventEmitter();\n    this.nzExpandChange = new EventEmitter();\n    this.nzOnDragStart = new EventEmitter();\n    this.nzOnDragEnter = new EventEmitter();\n    this.nzOnDragOver = new EventEmitter();\n    this.nzOnDragLeave = new EventEmitter();\n    this.nzOnDrop = new EventEmitter();\n    this.nzOnDragEnd = new EventEmitter();\n    this.HIDDEN_STYLE = {\n      width: 0,\n      height: 0,\n      display: 'flex',\n      overflow: 'hidden',\n      opacity: 0,\n      border: 0,\n      padding: 0,\n      margin: 0\n    };\n    this.HIDDEN_NODE_STYLE = {\n      position: 'absolute',\n      pointerEvents: 'none',\n      visibility: 'hidden',\n      height: 0,\n      overflow: 'hidden'\n    };\n    this.destroy$ = new Subject();\n    this.onChange = () => null;\n    this.onTouched = () => null;\n  }\n  ngOnInit() {\n    this.nzTreeService.flattenNodes$.pipe(takeUntil(this.destroy$)).subscribe(data => {\n      this.nzFlattenNodes = !!this.nzVirtualHeight && this.nzHideUnMatched && this.nzSearchValue?.length > 0 ? data.filter(d => !d.canHide) : data;\n      this.cdr.markForCheck();\n    });\n    this.dir = this.directionality.value;\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n  }\n  ngOnChanges(changes) {\n    this.renderTreeProperties(changes);\n  }\n  ngAfterViewInit() {\n    this.beforeInit = false;\n  }\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  static {\n    this.ɵfac = function NzTreeComponent_Factory(t) {\n      return new (t || NzTreeComponent)(i0.ɵɵdirectiveInject(i1$1.NzTreeBaseService), i0.ɵɵdirectiveInject(i2$3.NzConfigService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i3.Directionality, 8), i0.ɵɵdirectiveInject(i2$2.NzNoAnimationDirective, 9));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzTreeComponent,\n      selectors: [[\"nz-tree\"]],\n      contentQueries: function NzTreeComponent_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, _c2, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nzTreeTemplateChild = _t.first);\n        }\n      },\n      viewQuery: function NzTreeComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(CdkVirtualScrollViewport, 5, CdkVirtualScrollViewport);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cdkVirtualScrollViewport = _t.first);\n        }\n      },\n      hostVars: 20,\n      hostBindings: function NzTreeComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ant-select-tree\", ctx.nzSelectMode)(\"ant-select-tree-show-line\", ctx.nzSelectMode && ctx.nzShowLine)(\"ant-select-tree-icon-hide\", ctx.nzSelectMode && !ctx.nzShowIcon)(\"ant-select-tree-block-node\", ctx.nzSelectMode && ctx.nzBlockNode)(\"ant-tree\", !ctx.nzSelectMode)(\"ant-tree-rtl\", ctx.dir === \"rtl\")(\"ant-tree-show-line\", !ctx.nzSelectMode && ctx.nzShowLine)(\"ant-tree-icon-hide\", !ctx.nzSelectMode && !ctx.nzShowIcon)(\"ant-tree-block-node\", !ctx.nzSelectMode && ctx.nzBlockNode)(\"draggable-tree\", ctx.nzDraggable);\n        }\n      },\n      inputs: {\n        nzShowIcon: \"nzShowIcon\",\n        nzHideUnMatched: \"nzHideUnMatched\",\n        nzBlockNode: \"nzBlockNode\",\n        nzExpandAll: \"nzExpandAll\",\n        nzSelectMode: \"nzSelectMode\",\n        nzCheckStrictly: \"nzCheckStrictly\",\n        nzShowExpand: \"nzShowExpand\",\n        nzShowLine: \"nzShowLine\",\n        nzCheckable: \"nzCheckable\",\n        nzAsyncData: \"nzAsyncData\",\n        nzDraggable: \"nzDraggable\",\n        nzMultiple: \"nzMultiple\",\n        nzExpandedIcon: \"nzExpandedIcon\",\n        nzVirtualItemSize: \"nzVirtualItemSize\",\n        nzVirtualMaxBufferPx: \"nzVirtualMaxBufferPx\",\n        nzVirtualMinBufferPx: \"nzVirtualMinBufferPx\",\n        nzVirtualHeight: \"nzVirtualHeight\",\n        nzTreeTemplate: \"nzTreeTemplate\",\n        nzBeforeDrop: \"nzBeforeDrop\",\n        nzData: \"nzData\",\n        nzExpandedKeys: \"nzExpandedKeys\",\n        nzSelectedKeys: \"nzSelectedKeys\",\n        nzCheckedKeys: \"nzCheckedKeys\",\n        nzSearchValue: \"nzSearchValue\",\n        nzSearchFunc: \"nzSearchFunc\"\n      },\n      outputs: {\n        nzExpandedKeysChange: \"nzExpandedKeysChange\",\n        nzSelectedKeysChange: \"nzSelectedKeysChange\",\n        nzCheckedKeysChange: \"nzCheckedKeysChange\",\n        nzSearchValueChange: \"nzSearchValueChange\",\n        nzClick: \"nzClick\",\n        nzDblClick: \"nzDblClick\",\n        nzContextMenu: \"nzContextMenu\",\n        nzCheckBoxChange: \"nzCheckBoxChange\",\n        nzExpandChange: \"nzExpandChange\",\n        nzOnDragStart: \"nzOnDragStart\",\n        nzOnDragEnter: \"nzOnDragEnter\",\n        nzOnDragOver: \"nzOnDragOver\",\n        nzOnDragLeave: \"nzOnDragLeave\",\n        nzOnDrop: \"nzOnDrop\",\n        nzOnDragEnd: \"nzOnDragEnd\"\n      },\n      exportAs: [\"nzTree\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([NzTreeService, {\n        provide: NzTreeBaseService,\n        useFactory: NzTreeServiceFactory\n      }, {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NzTreeComponent),\n        multi: true\n      }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      decls: 10,\n      vars: 6,\n      consts: [[3, \"ngStyle\"], [1, \"ant-tree-treenode\", 3, \"ngStyle\"], [1, \"ant-tree-indent\"], [1, \"ant-tree-indent-unit\"], [1, \"ant-tree-list\", 2, \"position\", \"relative\"], [3, \"ant-select-tree-list-holder-inner\", \"ant-tree-list-holder-inner\", \"itemSize\", \"minBufferPx\", \"maxBufferPx\", \"height\", 4, \"ngIf\"], [3, \"ant-select-tree-list-holder-inner\", \"ant-tree-list-holder-inner\", \"nzNoAnimation\", 4, \"ngIf\"], [\"nodeTemplate\", \"\"], [3, \"itemSize\", \"minBufferPx\", \"maxBufferPx\"], [4, \"cdkVirtualFor\", \"cdkVirtualForOf\", \"cdkVirtualForTrackBy\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"nzNoAnimation\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"builtin\", \"\", 3, \"icon\", \"title\", \"isLoading\", \"isSelected\", \"isDisabled\", \"isMatched\", \"isExpanded\", \"isLeaf\", \"isStart\", \"isEnd\", \"isChecked\", \"isHalfChecked\", \"isDisableCheckbox\", \"isSelectable\", \"canHide\", \"nzTreeNode\", \"nzSelectMode\", \"nzShowLine\", \"nzExpandedIcon\", \"nzDraggable\", \"nzCheckable\", \"nzShowExpand\", \"nzAsyncData\", \"nzSearchValue\", \"nzHideUnMatched\", \"nzBeforeDrop\", \"nzShowIcon\", \"nzTreeTemplate\", \"nzExpandChange\", \"nzClick\", \"nzDblClick\", \"nzContextMenu\", \"nzCheckBoxChange\", \"nzOnDragStart\", \"nzOnDragEnter\", \"nzOnDragOver\", \"nzOnDragLeave\", \"nzOnDragEnd\", \"nzOnDrop\"]],\n      template: function NzTreeComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\");\n          i0.ɵɵelement(1, \"input\", 0);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2);\n          i0.ɵɵelement(4, \"div\", 3);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(5, \"div\", 4);\n          i0.ɵɵtemplate(6, NzTreeComponent_cdk_virtual_scroll_viewport_6_Template, 2, 11, \"cdk-virtual-scroll-viewport\", 5)(7, NzTreeComponent_div_7_Template, 2, 9, \"div\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(8, NzTreeComponent_ng_template_8_Template, 1, 28, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngStyle\", ctx.HIDDEN_STYLE);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngStyle\", ctx.HIDDEN_NODE_STYLE);\n          i0.ɵɵadvance(3);\n          i0.ɵɵclassProp(\"ant-select-tree-list\", ctx.nzSelectMode);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.nzVirtualHeight);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.nzVirtualHeight);\n        }\n      },\n      dependencies: [NgStyle, CdkVirtualScrollViewport, CdkFixedSizeVirtualScroll, NgIf, CdkVirtualForOf, NgTemplateOutlet, NzNoAnimationDirective, NgForOf, NzTreeNodeBuiltinComponent],\n      encapsulation: 2,\n      data: {\n        animation: [treeCollapseMotion]\n      },\n      changeDetection: 0\n    });\n  }\n}\n__decorate([InputBoolean(), WithConfig()], NzTreeComponent.prototype, \"nzShowIcon\", void 0);\n__decorate([InputBoolean(), WithConfig()], NzTreeComponent.prototype, \"nzHideUnMatched\", void 0);\n__decorate([InputBoolean(), WithConfig()], NzTreeComponent.prototype, \"nzBlockNode\", void 0);\n__decorate([InputBoolean()], NzTreeComponent.prototype, \"nzExpandAll\", void 0);\n__decorate([InputBoolean()], NzTreeComponent.prototype, \"nzSelectMode\", void 0);\n__decorate([InputBoolean()], NzTreeComponent.prototype, \"nzCheckStrictly\", void 0);\n__decorate([InputBoolean()], NzTreeComponent.prototype, \"nzShowExpand\", void 0);\n__decorate([InputBoolean()], NzTreeComponent.prototype, \"nzShowLine\", void 0);\n__decorate([InputBoolean()], NzTreeComponent.prototype, \"nzCheckable\", void 0);\n__decorate([InputBoolean()], NzTreeComponent.prototype, \"nzAsyncData\", void 0);\n__decorate([InputBoolean()], NzTreeComponent.prototype, \"nzDraggable\", void 0);\n__decorate([InputBoolean()], NzTreeComponent.prototype, \"nzMultiple\", void 0);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTreeComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-tree',\n      exportAs: 'nzTree',\n      animations: [treeCollapseMotion],\n      template: `\n    <div>\n      <input [ngStyle]=\"HIDDEN_STYLE\" />\n    </div>\n    <div class=\"ant-tree-treenode\" [ngStyle]=\"HIDDEN_NODE_STYLE\">\n      <div class=\"ant-tree-indent\">\n        <div class=\"ant-tree-indent-unit\"></div>\n      </div>\n    </div>\n    <div class=\"ant-tree-list\" [class.ant-select-tree-list]=\"nzSelectMode\" style=\"position: relative\">\n      <cdk-virtual-scroll-viewport\n        *ngIf=\"nzVirtualHeight\"\n        [class.ant-select-tree-list-holder-inner]=\"nzSelectMode\"\n        [class.ant-tree-list-holder-inner]=\"!nzSelectMode\"\n        [itemSize]=\"nzVirtualItemSize\"\n        [minBufferPx]=\"nzVirtualMinBufferPx\"\n        [maxBufferPx]=\"nzVirtualMaxBufferPx\"\n        [style.height]=\"nzVirtualHeight\"\n      >\n        <ng-container *cdkVirtualFor=\"let node of nzFlattenNodes; trackBy: trackByFlattenNode\">\n          <ng-template [ngTemplateOutlet]=\"nodeTemplate\" [ngTemplateOutletContext]=\"{ $implicit: node }\"></ng-template>\n        </ng-container>\n      </cdk-virtual-scroll-viewport>\n\n      <div\n        *ngIf=\"!nzVirtualHeight\"\n        [class.ant-select-tree-list-holder-inner]=\"nzSelectMode\"\n        [class.ant-tree-list-holder-inner]=\"!nzSelectMode\"\n        [@.disabled]=\"beforeInit || !!noAnimation?.nzNoAnimation\"\n        [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n        [@treeCollapseMotion]=\"nzFlattenNodes.length\"\n      >\n        <ng-container *ngFor=\"let node of nzFlattenNodes; trackBy: trackByFlattenNode\">\n          <ng-template [ngTemplateOutlet]=\"nodeTemplate\" [ngTemplateOutletContext]=\"{ $implicit: node }\"></ng-template>\n        </ng-container>\n      </div>\n    </div>\n    <ng-template #nodeTemplate let-treeNode>\n      <nz-tree-node\n        builtin\n        [icon]=\"treeNode.icon\"\n        [title]=\"treeNode.title\"\n        [isLoading]=\"treeNode.isLoading\"\n        [isSelected]=\"treeNode.isSelected\"\n        [isDisabled]=\"treeNode.isDisabled\"\n        [isMatched]=\"treeNode.isMatched\"\n        [isExpanded]=\"treeNode.isExpanded\"\n        [isLeaf]=\"treeNode.isLeaf\"\n        [isStart]=\"treeNode.isStart\"\n        [isEnd]=\"treeNode.isEnd\"\n        [isChecked]=\"treeNode.isChecked\"\n        [isHalfChecked]=\"treeNode.isHalfChecked\"\n        [isDisableCheckbox]=\"treeNode.isDisableCheckbox\"\n        [isSelectable]=\"treeNode.isSelectable\"\n        [canHide]=\"treeNode.canHide\"\n        [nzTreeNode]=\"treeNode\"\n        [nzSelectMode]=\"nzSelectMode\"\n        [nzShowLine]=\"nzShowLine\"\n        [nzExpandedIcon]=\"nzExpandedIcon\"\n        [nzDraggable]=\"nzDraggable\"\n        [nzCheckable]=\"nzCheckable\"\n        [nzShowExpand]=\"nzShowExpand\"\n        [nzAsyncData]=\"nzAsyncData\"\n        [nzSearchValue]=\"nzSearchValue\"\n        [nzHideUnMatched]=\"nzHideUnMatched\"\n        [nzBeforeDrop]=\"nzBeforeDrop\"\n        [nzShowIcon]=\"nzShowIcon\"\n        [nzTreeTemplate]=\"nzTreeTemplate || nzTreeTemplateChild\"\n        (nzExpandChange)=\"eventTriggerChanged($event)\"\n        (nzClick)=\"eventTriggerChanged($event)\"\n        (nzDblClick)=\"eventTriggerChanged($event)\"\n        (nzContextMenu)=\"eventTriggerChanged($event)\"\n        (nzCheckBoxChange)=\"eventTriggerChanged($event)\"\n        (nzOnDragStart)=\"eventTriggerChanged($event)\"\n        (nzOnDragEnter)=\"eventTriggerChanged($event)\"\n        (nzOnDragOver)=\"eventTriggerChanged($event)\"\n        (nzOnDragLeave)=\"eventTriggerChanged($event)\"\n        (nzOnDragEnd)=\"eventTriggerChanged($event)\"\n        (nzOnDrop)=\"eventTriggerChanged($event)\"\n      ></nz-tree-node>\n    </ng-template>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [NzTreeService, {\n        provide: NzTreeBaseService,\n        useFactory: NzTreeServiceFactory\n      }, {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NzTreeComponent),\n        multi: true\n      }],\n      host: {\n        '[class.ant-select-tree]': `nzSelectMode`,\n        '[class.ant-select-tree-show-line]': `nzSelectMode && nzShowLine`,\n        '[class.ant-select-tree-icon-hide]': `nzSelectMode && !nzShowIcon`,\n        '[class.ant-select-tree-block-node]': `nzSelectMode && nzBlockNode`,\n        '[class.ant-tree]': `!nzSelectMode`,\n        '[class.ant-tree-rtl]': `dir === 'rtl'`,\n        '[class.ant-tree-show-line]': `!nzSelectMode && nzShowLine`,\n        '[class.ant-tree-icon-hide]': `!nzSelectMode && !nzShowIcon`,\n        '[class.ant-tree-block-node]': `!nzSelectMode && nzBlockNode`,\n        '[class.draggable-tree]': `nzDraggable`\n      },\n      imports: [NgStyle, CdkVirtualScrollViewport, CdkFixedSizeVirtualScroll, NgIf, CdkVirtualForOf, NgTemplateOutlet, NzNoAnimationDirective, NgForOf, NzTreeNodeBuiltinComponent],\n      standalone: true\n    }]\n  }], () => [{\n    type: i1$1.NzTreeBaseService\n  }, {\n    type: i2$3.NzConfigService\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i3.Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i2$2.NzNoAnimationDirective,\n    decorators: [{\n      type: Host\n    }, {\n      type: Optional\n    }]\n  }], {\n    nzShowIcon: [{\n      type: Input\n    }],\n    nzHideUnMatched: [{\n      type: Input\n    }],\n    nzBlockNode: [{\n      type: Input\n    }],\n    nzExpandAll: [{\n      type: Input\n    }],\n    nzSelectMode: [{\n      type: Input\n    }],\n    nzCheckStrictly: [{\n      type: Input\n    }],\n    nzShowExpand: [{\n      type: Input\n    }],\n    nzShowLine: [{\n      type: Input\n    }],\n    nzCheckable: [{\n      type: Input\n    }],\n    nzAsyncData: [{\n      type: Input\n    }],\n    nzDraggable: [{\n      type: Input\n    }],\n    nzMultiple: [{\n      type: Input\n    }],\n    nzExpandedIcon: [{\n      type: Input\n    }],\n    nzVirtualItemSize: [{\n      type: Input\n    }],\n    nzVirtualMaxBufferPx: [{\n      type: Input\n    }],\n    nzVirtualMinBufferPx: [{\n      type: Input\n    }],\n    nzVirtualHeight: [{\n      type: Input\n    }],\n    nzTreeTemplate: [{\n      type: Input\n    }],\n    nzBeforeDrop: [{\n      type: Input\n    }],\n    nzData: [{\n      type: Input\n    }],\n    nzExpandedKeys: [{\n      type: Input\n    }],\n    nzSelectedKeys: [{\n      type: Input\n    }],\n    nzCheckedKeys: [{\n      type: Input\n    }],\n    nzSearchValue: [{\n      type: Input\n    }],\n    nzSearchFunc: [{\n      type: Input\n    }],\n    nzTreeTemplateChild: [{\n      type: ContentChild,\n      args: ['nzTreeTemplate', {\n        static: true\n      }]\n    }],\n    cdkVirtualScrollViewport: [{\n      type: ViewChild,\n      args: [CdkVirtualScrollViewport, {\n        read: CdkVirtualScrollViewport\n      }]\n    }],\n    nzExpandedKeysChange: [{\n      type: Output\n    }],\n    nzSelectedKeysChange: [{\n      type: Output\n    }],\n    nzCheckedKeysChange: [{\n      type: Output\n    }],\n    nzSearchValueChange: [{\n      type: Output\n    }],\n    nzClick: [{\n      type: Output\n    }],\n    nzDblClick: [{\n      type: Output\n    }],\n    nzContextMenu: [{\n      type: Output\n    }],\n    nzCheckBoxChange: [{\n      type: Output\n    }],\n    nzExpandChange: [{\n      type: Output\n    }],\n    nzOnDragStart: [{\n      type: Output\n    }],\n    nzOnDragEnter: [{\n      type: Output\n    }],\n    nzOnDragOver: [{\n      type: Output\n    }],\n    nzOnDragLeave: [{\n      type: Output\n    }],\n    nzOnDrop: [{\n      type: Output\n    }],\n    nzOnDragEnd: [{\n      type: Output\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTreeModule {\n  static {\n    this.ɵfac = function NzTreeModule_Factory(t) {\n      return new (t || NzTreeModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NzTreeModule,\n      imports: [NzTreeComponent, NzTreeNodeBuiltinComponent, NzTreeIndentComponent, NzTreeNodeSwitcherComponent, NzTreeNodeBuiltinCheckboxComponent, NzTreeNodeTitleComponent, NzTreeDropIndicatorComponent],\n      exports: [NzTreeComponent, NzTreeNodeBuiltinComponent, NzTreeIndentComponent]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [NzTreeComponent, NzTreeNodeBuiltinComponent, NzTreeNodeSwitcherComponent, NzTreeNodeTitleComponent]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTreeModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NzTreeComponent, NzTreeNodeBuiltinComponent, NzTreeIndentComponent, NzTreeNodeSwitcherComponent, NzTreeNodeBuiltinCheckboxComponent, NzTreeNodeTitleComponent, NzTreeDropIndicatorComponent],\n      exports: [NzTreeComponent, NzTreeNodeBuiltinComponent, NzTreeIndentComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzTreeComponent, NzTreeIndentComponent, NzTreeModule, NzTreeNodeBuiltinCheckboxComponent, NzTreeNodeBuiltinComponent, NzTreeNodeSwitcherComponent, NzTreeNodeTitleComponent, NzTreeService, NzTreeServiceFactory };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,IAAM,aAAN,MAAM,YAAW;AAAA,EACf,IAAI,cAAc;AAChB,WAAO,KAAK,WAAW,KAAK,cAAc,KAAK,WAAW;AAAA,EAC5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,YAAY,QAAQ,SAAS,MAAM,UAAU,MAAM;AACjD,SAAK,SAAS;AACd,SAAK,QAAQ;AAEb,SAAK,aAAa;AAClB,SAAK,QAAQ;AACb,SAAK,YAAY,CAAC;AAClB,SAAK,UAAU;AACf,SAAK,aAAa;AAClB,SAAK,gBAAgB;AACrB,SAAK,cAAc;AACnB,SAAK,qBAAqB;AAC1B,SAAK,cAAc;AACnB,SAAK,iBAAiB;AACtB,SAAK,cAAc;AACnB,SAAK,aAAa;AAClB,SAAK,UAAU;AACf,SAAK,YAAY;AACjB,SAAK,UAAU;AACf,QAAI,kBAAkB,aAAY;AAChC,aAAO;AAAA,IACT;AACA,SAAK,UAAU,WAAW;AAC1B,SAAK,SAAS;AACd,SAAK,MAAM,OAAO;AAClB,SAAK,aAAa;AAClB,SAAK,SAAS,OAAO,SAAS;AAC9B,SAAK,QAAQ,OAAO,QAAQ;AAC5B,SAAK,UAAU,OAAO,UAAU;AAChC,SAAK,YAAY,CAAC;AAElB,SAAK,aAAa,OAAO,WAAW;AACpC,SAAK,gBAAgB,OAAO,YAAY,OAAO,eAAe;AAC9D,SAAK,cAAc,OAAO,YAAY;AACtC,SAAK,qBAAqB,OAAO,mBAAmB;AACpD,SAAK,cAAc,OAAO,SAAS,QAAQ,OAAO,YAAY;AAC9D,SAAK,iBAAiB;AACtB,SAAK,cAAc,CAAC,OAAO,YAAY,OAAO,YAAY;AAC1D,SAAK,aAAa;AAClB,SAAK,YAAY;AAIjB,QAAI,QAAQ;AACV,WAAK,QAAQ,OAAO,QAAQ;AAAA,IAC9B,OAAO;AACL,WAAK,QAAQ;AAAA,IACf;AACA,QAAI,OAAO,OAAO,aAAa,eAAe,OAAO,aAAa,MAAM;AACtE,aAAO,SAAS,QAAQ,iBAAe;AACrC,cAAM,IAAI,KAAK;AACf,YAAI,KAAK,CAAC,EAAE,mBAAmB,OAAO,WAAW,CAAC,OAAO,YAAY,CAAC,YAAY,YAAY,CAAC,YAAY,iBAAiB;AAC1H,sBAAY,UAAU,OAAO;AAAA,QAC/B;AACA,aAAK,UAAU,KAAK,IAAI,YAAW,aAAa,IAAI,CAAC;AAAA,MACvD,CAAC;AAAA,IACH;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI,QAAQ;AACV,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,MAAM,OAAO;AACf,SAAK,SAAS;AACd,SAAK,OAAO;AAAA,EACd;AAAA,EACA,IAAI,OAAO;AACT,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,KAAK,OAAO;AACd,SAAK,QAAQ;AACb,SAAK,OAAO;AAAA,EACd;AAAA,EACA,IAAI,WAAW;AACb,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,SAAS,OAAO;AAClB,SAAK,YAAY;AACjB,SAAK,OAAO;AAAA,EACd;AAAA,EACA,IAAI,SAAS;AACX,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,OAAO,OAAO;AAChB,SAAK,UAAU;AACf,SAAK,OAAO;AAAA,EACd;AAAA,EACA,IAAI,YAAY;AACd,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,UAAU,OAAO;AACnB,SAAK,aAAa;AAClB,SAAK,OAAO,UAAU;AACtB,SAAK,iBAAiB,WAAW;AAAA,EACnC;AAAA,EACA,IAAI,gBAAgB;AAClB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,cAAc,OAAO;AACvB,SAAK,iBAAiB;AACtB,SAAK,iBAAiB,eAAe;AAAA,EACvC;AAAA,EACA,IAAI,eAAe;AACjB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,aAAa,OAAO;AACtB,SAAK,gBAAgB;AACrB,SAAK,OAAO;AAAA,EACd;AAAA,EACA,IAAI,aAAa;AACf,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,WAAW,OAAO;AACpB,SAAK,cAAc;AACnB,SAAK,OAAO;AAAA,EACd;AAAA,EACA,IAAI,oBAAoB;AACtB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,kBAAkB,OAAO;AAC3B,SAAK,qBAAqB;AAC1B,SAAK,OAAO;AAAA,EACd;AAAA,EACA,IAAI,aAAa;AACf,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,WAAW,OAAO;AACpB,SAAK,cAAc;AACnB,SAAK,OAAO,WAAW;AACvB,SAAK,iBAAiB,YAAY;AAClC,SAAK,iBAAiB,UAAU;AAAA,EAClC;AAAA,EACA,IAAI,aAAa;AACf,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,WAAW,OAAO;AACpB,SAAK,cAAc;AACnB,SAAK,OAAO,WAAW;AACvB,SAAK,iBAAiB,YAAY;AAAA,EACpC;AAAA,EACA,IAAI,YAAY;AACd,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,UAAU,OAAO;AACnB,SAAK,aAAa;AAClB,SAAK,OAAO;AAAA,EACd;AAAA,EACA,eAAe,UAAU,OAAO,cAAc,OAAO;AACnD,SAAK,WAAW,SAAS,WAAW;AACpC,QAAI,KAAK,eAAe,CAAC,KAAK,YAAY,iBAAiB;AACzD,WAAK,YAAY,QAAQ,IAAI;AAAA,IAC/B;AAAA,EACF;AAAA,EACA,WAAW,UAAU,OAAO,cAAc,OAAO;AAC/C,SAAK,OAAO,UAAU;AACtB,SAAK,YAAY;AACjB,SAAK,gBAAgB;AAAA,EACvB;AAAA,EACA,YAAY,OAAO;AACjB,SAAK,cAAc;AACnB,SAAK,OAAO,WAAW;AACvB,SAAK,iBAAiB,YAAY;AAAA,EACpC;AAAA,EACA,gBAAgB;AACd,WAAO,KAAK;AAAA,EACd;AAAA,EACA,cAAc;AACZ,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAIA,YAAY,UAAU,WAAW,IAAI;AACnC,QAAI,CAAC,KAAK,QAAQ;AAChB,eAAS,QAAQ,UAAQ;AACvB,cAAM,eAAe,OAAK;AACxB,YAAE,YAAY,EAAE,QAAQ,OAAK;AAC3B,cAAE,QAAQ,EAAE,cAAc,EAAE,QAAQ;AAEpC,cAAE,OAAO,QAAQ,EAAE;AACnB,yBAAa,CAAC;AAAA,UAChB,CAAC;AAAA,QACH;AACA,YAAI,QAAQ;AACZ,YAAI,iBAAiB,aAAY;AAC/B,gBAAM,aAAa;AAAA,QACrB,OAAO;AACL,kBAAQ,IAAI,YAAW,MAAM,IAAI;AAAA,QACnC;AACA,cAAM,QAAQ,KAAK,QAAQ;AAC3B,cAAM,OAAO,QAAQ,MAAM;AAC3B,qBAAa,KAAK;AAClB,YAAI;AACF,uBAAa,KAAK,KAAK,SAAS,KAAK,KAAK,IAAI,KAAK,SAAS,OAAO,UAAU,GAAG,KAAK;AAAA,QAEvF,SAAS,GAAG;AAAA,QAAC;AAAA,MACf,CAAC;AACD,WAAK,OAAO,WAAW,KAAK,YAAY,EAAE,IAAI,OAAK,EAAE,MAAM;AAE3D,WAAK,YAAY;AAAA,IACnB;AACA,SAAK,iBAAiB,aAAa;AACnC,SAAK,iBAAiB,UAAU;AAAA,EAClC;AAAA,EACA,gBAAgB;AAEd,SAAK,iBAAiB,eAAe;AACrC,SAAK,WAAW,CAAC;AACjB,SAAK,OAAO,WAAW,CAAC;AACxB,SAAK,iBAAiB,UAAU;AAAA,EAClC;AAAA,EACA,SAAS;AACP,UAAM,aAAa,KAAK,cAAc;AACtC,QAAI,YAAY;AACd,iBAAW,WAAW,WAAW,YAAY,EAAE,OAAO,OAAK,EAAE,QAAQ,KAAK,GAAG;AAC7E,iBAAW,OAAO,WAAW,WAAW,OAAO,SAAS,OAAO,OAAK,EAAE,QAAQ,KAAK,GAAG;AACtF,WAAK,iBAAiB,QAAQ;AAC9B,WAAK,iBAAiB,UAAU;AAAA,IAClC;AAAA,EACF;AAAA,EACA,iBAAiB,KAAK;AACpB,QAAI,KAAK,aAAa;AACpB,cAAQ,KAAK;AAAA,QACX,KAAK;AACH,eAAK,YAAY,mBAAmB,IAAI;AACxC;AAAA,QACF,KAAK;AACH,eAAK,YAAY,uBAAuB,IAAI;AAC5C;AAAA,QACF,KAAK;AACH,eAAK,YAAY,oBAAoB,IAAI;AACzC;AAAA,QACF,KAAK;AACH,eAAK,YAAY,cAAc,IAAI;AACnC;AAAA,QACF,KAAK;AACH,eAAK,YAAY,YAAY,KAAK,YAAY,CAAC;AAC/C;AAAA,QACF,KAAK;AACH,eAAK,YAAY,YAAY,CAAC,IAAI,CAAC;AACnC;AAAA,QACF,KAAK;AACH,eAAK,YAAY,gBAAgB,KAAK,YAAY,WAAW,KAAK,YAAY,oBAAoB,EAAE,IAAI,OAAK,EAAE,GAAG,CAAC;AACnH;AAAA,MACJ;AAAA,IACF;AACA,SAAK,OAAO;AAAA,EACd;AAAA,EACA,SAAS;AACP,QAAI,KAAK,WAAW;AAClB,WAAK,UAAU,aAAa;AAAA,IAC9B;AAAA,EACF;AACF;AAWA,SAAS,gBAAgB,MAAM;AAC7B,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,EACF,IAAI;AACJ,SAAO,CAAC,EAAE,cAAc;AAC1B;AACA,SAAS,UAAU,QAAQ,UAAU;AACnC,SAAO,SAAS,SAAS,KAAK,SAAS,QAAQ,MAAM,IAAI;AAC3D;AACA,SAAS,YAAY,OAAO,OAAO;AACjC,SAAO,GAAG,KAAK,IAAI,KAAK;AAC1B;AACA,SAAS,OAAO,KAAK,KAAK;AACxB,MAAI,QAAQ,QAAQ,QAAQ,QAAW;AACrC,WAAO;AAAA,EACT;AACA,SAAO;AACT;AAQA,SAAS,gBAAgB,eAAe,CAAC,GAAG,eAAe,CAAC,GAAG;AAC7D,QAAM,iBAAiB,IAAI,IAAI,iBAAiB,OAAO,CAAC,IAAI,YAAY;AACxE,QAAM,cAAc,CAAC;AACrB,WAAS,IAAI,MAAM,SAAS,MAAM;AAChC,WAAO,KAAK,IAAI,CAAC,UAAU,UAAU;AACnC,YAAM,MAAM,YAAY,SAAS,OAAO,MAAM,KAAK,KAAK;AACxD,YAAM,YAAY,OAAO,SAAS,KAAK,GAAG;AAC1C,eAAS,UAAU,CAAC,GAAI,SAAS,OAAO,UAAU,CAAC,GAAI,UAAU,CAAC;AAClE,eAAS,QAAQ,CAAC,GAAI,SAAS,OAAO,QAAQ,CAAC,GAAI,UAAU,KAAK,SAAS,CAAC;AAG5E,YAAM,cAAc;AAAA,QAClB;AAAA,QACA;AAAA,QACA,UAAU,CAAC;AAAA,QACX,MAAM;AAAA,QACN,SAAS,CAAC,GAAI,SAAS,OAAO,UAAU,CAAC,GAAI,UAAU,CAAC;AAAA,QACxD,OAAO,CAAC,GAAI,SAAS,OAAO,QAAQ,CAAC,GAAI,UAAU,KAAK,SAAS,CAAC;AAAA,MACpE;AACA,kBAAY,KAAK,WAAW;AAE5B,UAAI,iBAAiB,QAAQ,eAAe,IAAI,SAAS,KAAK,SAAS,YAAY;AACjF,oBAAY,WAAW,IAAI,SAAS,YAAY,CAAC,GAAG,WAAW;AAAA,MACjE,OAAO;AACL,oBAAY,WAAW,CAAC;AAAA,MAC1B;AACA,aAAO;AAAA,IACT,CAAC;AAAA,EACH;AACA,MAAI,YAAY;AAChB,SAAO;AACT;AAMA,IAAM,qBAAN,MAAM,mBAAkB;AAAA,EACtB,cAAc;AACZ,SAAK,kBAAkB;AACvB,SAAK,eAAe;AACpB,SAAK,kBAAkB;AACvB,SAAK,aAAa;AAClB,SAAK,YAAY,CAAC;AAClB,SAAK,gBAAgB,IAAI,gBAAgB,CAAC,CAAC;AAC3C,SAAK,mBAAmB,CAAC;AACzB,SAAK,mBAAmB,CAAC;AACzB,SAAK,kBAAkB,CAAC;AACxB,SAAK,sBAAsB,CAAC;AAC5B,SAAK,kBAAkB,CAAC;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA,EAIA,SAAS,SAAS;AAChB,SAAK,YAAY;AACjB,SAAK,mBAAmB,CAAC;AACzB,SAAK,mBAAmB,CAAC;AACzB,SAAK,sBAAsB,CAAC;AAC5B,SAAK,kBAAkB,CAAC;AACxB,SAAK,kBAAkB,CAAC;AAAA,EAC1B;AAAA,EACA,gBAAgB,SAAS,eAAe,CAAC,GAAG;AAC1C,SAAK,cAAc,KAAK,gBAAgB,SAAS,YAAY,EAAE,IAAI,UAAQ,KAAK,IAAI,CAAC;AAAA,EACvF;AAAA,EACA,kBAAkB;AAChB,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAIA,sBAAsB;AACpB,WAAO,KAAK,iBAAiB,QAAQ;AAAA,EACvC;AAAA;AAAA;AAAA;AAAA,EAIA,qBAAqB;AACnB,UAAM,OAAO,CAAC;AACd,UAAM,eAAe,KAAK,mBAAmB;AAC7C,UAAM,OAAO,WAAS;AACpB,YAAM,QAAQ,UAAQ;AACpB,aAAK,KAAK,KAAK,GAAG;AAClB,YAAI,KAAK,SAAS,SAAS;AAAG;AAC9B,aAAK,KAAK,QAAQ;AAAA,MACpB,CAAC;AAAA,IACH;AACA,SAAK,YAAY;AACjB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAIA,qBAAqB;AACnB,WAAO,KAAK,iBAAiB,OAAO;AAAA,EACtC;AAAA,EACA,yBAAyB;AACvB,WAAO,KAAK,iBAAiB,WAAW;AAAA,EAC1C;AAAA;AAAA;AAAA;AAAA,EAIA,sBAAsB;AACpB,WAAO,KAAK,iBAAiB,QAAQ;AAAA,EACvC;AAAA;AAAA;AAAA;AAAA,EAIA,qBAAqB;AACnB,WAAO,KAAK,iBAAiB,OAAO;AAAA,EACtC;AAAA,EACA,oBAAoB,OAAO;AACzB,WAAO,MAAM,MAAM,UAAQ,gBAAgB,UAAU;AAAA,EACvD;AAAA;AAAA;AAAA;AAAA,EAIA,gBAAgB,MAAM;AACpB,SAAK,eAAe;AAAA,EACtB;AAAA;AAAA;AAAA;AAAA,EAIA,cAAc,MAAM;AAClB,QAAI,CAAC,KAAK,cAAc,KAAK,YAAY;AACvC,WAAK,iBAAiB,QAAQ,OAAK;AACjC,YAAI,KAAK,QAAQ,EAAE,KAAK;AAEtB,YAAE,aAAa;AAAA,QACjB;AAAA,MACF,CAAC;AAED,WAAK,mBAAmB,CAAC;AAAA,IAC3B;AACA,SAAK,oBAAoB,MAAM,KAAK,UAAU;AAAA,EAChD;AAAA;AAAA;AAAA;AAAA,EAIA,oBAAoB,MAAM,aAAa,OAAO;AAC5C,UAAM,QAAQ,KAAK,gBAAgB,KAAK,kBAAkB,KAAK,GAAG;AAClE,QAAI,YAAY;AACd,UAAI,KAAK,cAAc,UAAU,IAAI;AACnC,aAAK,iBAAiB,KAAK,IAAI;AAAA,MACjC;AAAA,IACF,OAAO;AACL,UAAI,KAAK,cAAc,UAAU,IAAI;AACnC,aAAK,mBAAmB,CAAC,IAAI;AAAA,MAC/B;AAAA,IACF;AACA,QAAI,CAAC,KAAK,YAAY;AACpB,WAAK,mBAAmB,KAAK,iBAAiB,OAAO,OAAK,EAAE,QAAQ,KAAK,GAAG;AAAA,IAC9E;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAIA,uBAAuB,MAAM;AAC3B,UAAM,QAAQ,KAAK,gBAAgB,KAAK,qBAAqB,KAAK,GAAG;AACrE,QAAI,KAAK,iBAAiB,UAAU,IAAI;AACtC,WAAK,oBAAoB,KAAK,IAAI;AAAA,IACpC,WAAW,CAAC,KAAK,iBAAiB,QAAQ,IAAI;AAC5C,WAAK,sBAAsB,KAAK,oBAAoB,OAAO,OAAK,KAAK,QAAQ,EAAE,GAAG;AAAA,IACpF;AAAA,EACF;AAAA,EACA,mBAAmB,MAAM;AACvB,UAAM,QAAQ,KAAK,gBAAgB,KAAK,iBAAiB,KAAK,GAAG;AACjE,QAAI,KAAK,aAAa,UAAU,IAAI;AAClC,WAAK,gBAAgB,KAAK,IAAI;AAAA,IAChC,WAAW,CAAC,KAAK,aAAa,QAAQ,IAAI;AACxC,WAAK,kBAAkB,KAAK,gBAAgB,OAAO,OAAK,KAAK,QAAQ,EAAE,GAAG;AAAA,IAC5E;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAIA,iBAAiB,OAAO,SAAS;AAC/B,QAAI,kBAAkB,CAAC;AACvB,YAAQ,MAAM;AAAA,MACZ,KAAK;AACH,0BAAkB,KAAK;AACvB;AAAA,MACF,KAAK;AACH,0BAAkB,KAAK;AACvB;AAAA,MACF,KAAK;AACH,0BAAkB,KAAK;AACvB;AAAA,MACF,KAAK;AACH,0BAAkB,KAAK;AACvB,cAAM,WAAW,UAAQ;AACvB,gBAAM,aAAa,KAAK,cAAc;AACtC,cAAI,YAAY;AACd,gBAAI,KAAK,gBAAgB,UAAU,OAAK,EAAE,QAAQ,WAAW,GAAG,IAAI,IAAI;AACtE,qBAAO;AAAA,YACT,OAAO;AACL,qBAAO,SAAS,UAAU;AAAA,YAC5B;AAAA,UACF;AACA,iBAAO;AAAA,QACT;AAEA,YAAI,CAAC,KAAK,iBAAiB;AACzB,4BAAkB,KAAK,gBAAgB,OAAO,OAAK,CAAC,SAAS,CAAC,CAAC;AAAA,QACjE;AACA;AAAA,MACF,KAAK;AACH,YAAI,CAAC,KAAK,iBAAiB;AACzB,4BAAkB,KAAK;AAAA,QACzB;AACA;AAAA,IACJ;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAIA,oBAAoB,MAAM;AACxB,QAAI,KAAK,QAAQ;AACf;AAAA,IACF;AACA,UAAM,QAAQ,KAAK,gBAAgB,KAAK,kBAAkB,KAAK,GAAG;AAClE,QAAI,KAAK,cAAc,UAAU,IAAI;AACnC,WAAK,iBAAiB,KAAK,IAAI;AAAA,IACjC,WAAW,CAAC,KAAK,cAAc,QAAQ,IAAI;AACzC,WAAK,iBAAiB,OAAO,OAAO,CAAC;AAAA,IACvC;AAAA,EACF;AAAA,EACA,mBAAmB,MAAM;AACvB,UAAM,QAAQ,KAAK,gBAAgB,KAAK,iBAAiB,KAAK,GAAG;AACjE,QAAI,KAAK,aAAa,UAAU,IAAI;AAClC,WAAK,gBAAgB,KAAK,IAAI;AAAA,IAChC,WAAW,CAAC,KAAK,aAAa,QAAQ,IAAI;AACxC,WAAK,gBAAgB,OAAO,OAAO,CAAC;AAAA,IACtC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,kBAAkB,kBAAkB,OAAO;AACzC,QAAI,iBAAiB;AACnB;AAAA,IACF;AACA,SAAK,gBAAgB,QAAQ,UAAQ;AACnC,WAAK,QAAQ,MAAM,eAAe;AAAA,IACpC,CAAC;AAAA,EACH;AAAA;AAAA,EAEA,QAAQ,MAAM,kBAAkB,OAAO;AACrC,UAAM,YAAY,KAAK;AACvB,QAAI,QAAQ,CAAC,iBAAiB;AAC5B,WAAK,UAAU,IAAI;AACnB,WAAK,YAAY,MAAM,SAAS;AAAA,IAClC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,UAAU,MAAM;AACd,UAAM,aAAa,KAAK,cAAc;AACtC,QAAI,YAAY;AACd,UAAI,CAAC,gBAAgB,UAAU,GAAG;AAChC,YAAI,WAAW,SAAS,MAAM,WAAS,gBAAgB,KAAK,KAAK,CAAC,MAAM,iBAAiB,MAAM,SAAS,GAAG;AACzG,qBAAW,YAAY;AACvB,qBAAW,gBAAgB;AAAA,QAC7B,WAAW,WAAW,SAAS,KAAK,WAAS,MAAM,iBAAiB,MAAM,SAAS,GAAG;AACpF,qBAAW,YAAY;AACvB,qBAAW,gBAAgB;AAAA,QAC7B,OAAO;AACL,qBAAW,YAAY;AACvB,qBAAW,gBAAgB;AAAA,QAC7B;AAAA,MACF;AACA,WAAK,mBAAmB,UAAU;AAClC,WAAK,uBAAuB,UAAU;AACtC,WAAK,UAAU,UAAU;AAAA,IAC3B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAIA,YAAY,MAAM,OAAO;AACvB,QAAI,CAAC,gBAAgB,IAAI,GAAG;AAC1B,WAAK,YAAY;AACjB,WAAK,gBAAgB;AACrB,WAAK,mBAAmB,IAAI;AAC5B,WAAK,uBAAuB,IAAI;AAChC,WAAK,SAAS,QAAQ,OAAK;AACzB,aAAK,YAAY,GAAG,KAAK;AAAA,MAC3B,CAAC;AAAA,IACH;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAIA,YAAY,OAAO;AAEjB,UAAM,WAAW,UAAQ;AAEvB,WAAK,mBAAmB,KAAK,iBAAiB,OAAO,OAAK,EAAE,QAAQ,KAAK,GAAG;AAE5E,WAAK,mBAAmB,KAAK,iBAAiB,OAAO,OAAK,EAAE,QAAQ,KAAK,GAAG;AAE5E,WAAK,kBAAkB,KAAK,gBAAgB,OAAO,OAAK,EAAE,QAAQ,KAAK,GAAG;AAC1E,UAAI,KAAK,UAAU;AACjB,aAAK,SAAS,QAAQ,WAAS;AAC7B,mBAAS,KAAK;AAAA,QAChB,CAAC;AAAA,MACH;AAAA,IACF;AACA,UAAM,QAAQ,OAAK;AACjB,eAAS,CAAC;AAAA,IACZ,CAAC;AACD,SAAK,kBAAkB,KAAK,eAAe;AAAA,EAC7C;AAAA;AAAA;AAAA;AAAA,EAIA,gBAAgB,MAAM;AACpB,QAAI,KAAK,SAAS,WAAW,GAAG;AAE9B,WAAK,UAAU,IAAI;AAAA,IACrB,OAAO;AACL,WAAK,SAAS,QAAQ,WAAS;AAC7B,aAAK,gBAAgB,KAAK;AAAA,MAC5B,CAAC;AAAA,IACH;AAAA,EACF;AAAA;AAAA,EAEA,eAAe,MAAM;AACnB,UAAM,aAAa,KAAK,cAAc;AACtC,QAAI,YAAY;AACd,WAAK,QAAQ,WAAW,QAAQ;AAAA,IAClC,OAAO;AACL,WAAK,QAAQ;AAAA,IACf;AACA,eAAW,SAAS,KAAK,UAAU;AACjC,WAAK,eAAe,KAAK;AAAA,IAC3B;AAAA,EACF;AAAA,EACA,iBAAiB,OAAO;AACtB,UAAM;AAAA,MACJ;AAAA,IACF,IAAI;AAEJ,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI,MAAM,OAAO,sBAAsB;AACvC,UAAM,MAAM,KAAK,IAAI,SAAS,KAAK,iBAAiB,KAAK,YAAY;AACrE,QAAI,WAAW,MAAM,KAAK;AACxB,aAAO;AAAA,IACT,WAAW,WAAW,SAAS,KAAK;AAClC,aAAO;AAAA,IACT;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,YAAY,UAAU,IAAI;AACrC,QAAI,CAAC,cAAc,UAAU,GAAG;AAC9B;AAAA,IACF;AACA,UAAM,cAAc,WAAW;AAC/B,UAAM,eAAe,WAAW,cAAc;AAC9C,UAAM,qBAAqB,KAAK,aAAa,cAAc;AAE3D,QAAI,oBAAoB;AACtB,yBAAmB,WAAW,mBAAmB,SAAS,OAAO,OAAK,EAAE,QAAQ,KAAK,aAAa,GAAG;AAAA,IACvG,OAAO;AACL,WAAK,YAAY,KAAK,UAAU,OAAO,OAAK,EAAE,QAAQ,KAAK,aAAa,GAAG;AAAA,IAC7E;AACA,YAAQ,SAAS;AAAA,MACf,KAAK;AACH,mBAAW,YAAY,CAAC,KAAK,YAAY,CAAC;AAC1C,aAAK,eAAe,UAAU;AAC9B;AAAA,MACF,KAAK;AAAA,MACL,KAAK;AACH,cAAM,SAAS,YAAY,IAAI,IAAI;AACnC,YAAI,cAAc;AAChB,uBAAa,YAAY,CAAC,KAAK,YAAY,GAAG,aAAa,SAAS,QAAQ,UAAU,IAAI,MAAM;AAChG,gBAAM,aAAa,KAAK,aAAa,cAAc;AACnD,cAAI,YAAY;AACd,iBAAK,eAAe,UAAU;AAAA,UAChC;AAAA,QACF,OAAO;AACL,gBAAM,cAAc,KAAK,UAAU,QAAQ,UAAU,IAAI;AAEzD,eAAK,UAAU,OAAO,aAAa,GAAG,KAAK,YAAY;AACvD,eAAK,UAAU,WAAW,EAAE,aAAa;AACzC,eAAK,eAAe,KAAK,UAAU,WAAW,CAAC;AAAA,QACjD;AACA;AAAA,IACJ;AAEA,SAAK,UAAU,QAAQ,WAAS;AAC9B,UAAI,CAAC,MAAM,aAAa;AACtB,cAAM,UAAU;AAAA,MAClB;AACA,WAAK,gBAAgB,KAAK;AAAA,IAC5B,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,YAAY,WAAW,MAAM,OAAO;AAClC,UAAM,gBAAgB;AAAA,MACpB;AAAA,MACA;AAAA,MACA;AAAA,IACF;AACA,YAAQ,WAAW;AAAA,MACjB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACH,eAAO,OAAO,eAAe;AAAA,UAC3B,UAAU,KAAK,gBAAgB;AAAA,QACjC,CAAC;AACD;AAAA,MACF,KAAK;AAAA,MACL,KAAK;AACH,eAAO,OAAO,eAAe;AAAA,UAC3B,cAAc,KAAK;AAAA,QACrB,CAAC;AACD,eAAO,OAAO,eAAe;AAAA,UAC3B,OAAO,KAAK;AAAA,QACd,CAAC;AACD,eAAO,OAAO,eAAe;AAAA,UAC3B,MAAM,KAAK,iBAAiB,IAAI,OAAK,EAAE,GAAG;AAAA,QAC5C,CAAC;AACD;AAAA,MACF,KAAK;AACH,cAAM,kBAAkB,KAAK,mBAAmB;AAChD,eAAO,OAAO,eAAe;AAAA,UAC3B,aAAa;AAAA,QACf,CAAC;AACD,eAAO,OAAO,eAAe;AAAA,UAC3B,OAAO;AAAA,QACT,CAAC;AACD,eAAO,OAAO,eAAe;AAAA,UAC3B,MAAM,gBAAgB,IAAI,OAAK,EAAE,GAAG;AAAA,QACtC,CAAC;AACD;AAAA,MACF,KAAK;AACH,eAAO,OAAO,eAAe;AAAA,UAC3B,aAAa,KAAK,mBAAmB;AAAA,QACvC,CAAC;AACD,eAAO,OAAO,eAAe;AAAA,UAC3B,OAAO,KAAK,mBAAmB;AAAA,QACjC,CAAC;AACD,eAAO,OAAO,eAAe;AAAA,UAC3B,MAAM,KAAK,mBAAmB,EAAE,IAAI,OAAK,EAAE,GAAG;AAAA,QAChD,CAAC;AACD;AAAA,MACF,KAAK;AACH,eAAO,OAAO,eAAe;AAAA,UAC3B,OAAO,KAAK;AAAA,QACd,CAAC;AACD,eAAO,OAAO,eAAe;AAAA,UAC3B,MAAM,KAAK,iBAAiB,IAAI,OAAK,EAAE,GAAG;AAAA,QAC5C,CAAC;AACD;AAAA,IACJ;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAIA,gBAAgB,MAAM,KAAK;AACzB,WAAO,KAAK,UAAU,OAAK,EAAE,QAAQ,GAAG;AAAA,EAC1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,aAAa,MAAM,eAAe;AAChC,SAAK,kBAAkB,CAAC;AACxB,SAAK,sBAAsB,CAAC;AAC5B,UAAM,OAAO,WAAS;AACpB,YAAM,QAAQ,UAAQ;AACpB,YAAI,SAAS,MAAM;AAEjB,eAAK,YAAY,CAAC,CAAC,KAAK,OAAO;AAAA,QACjC,OAAO;AACL,cAAI,UAAU,KAAK,KAAK,QAAQ,CAAC,CAAC,GAAG;AACnC,iBAAK,YAAY;AACjB,iBAAK,gBAAgB;AAAA,UACvB,OAAO;AACL,iBAAK,YAAY;AACjB,iBAAK,gBAAgB;AAAA,UACvB;AAAA,QACF;AACA,YAAI,KAAK,SAAS,SAAS,GAAG;AAC5B,eAAK,KAAK,QAAQ;AAAA,QACpB;AAAA,MACF,CAAC;AAAA,IACH;AACA,SAAK,KAAK,SAAS;AACnB,SAAK,kBAAkB,aAAa;AAAA,EACtC;AAAA,EACA,oBAAoB,OAAO,CAAC,GAAG;AAC7B,UAAM,iBAAiB,IAAI,IAAI,SAAS,OAAO,CAAC,IAAI,IAAI;AACxD,SAAK,mBAAmB,CAAC;AACzB,UAAM,OAAO,WAAS;AACpB,YAAM,QAAQ,UAAQ;AACpB,aAAK,YAAY,SAAS,QAAQ,eAAe,IAAI,KAAK,GAAG,KAAK,KAAK,eAAe,IAAI;AAC1F,YAAI,KAAK,YAAY;AACnB,eAAK,oBAAoB,IAAI;AAAA,QAC/B;AACA,YAAI,KAAK,SAAS,SAAS,GAAG;AAC5B,eAAK,KAAK,QAAQ;AAAA,QACpB;AAAA,MACF,CAAC;AAAA,IACH;AACA,SAAK,KAAK,SAAS;AAAA,EACrB;AAAA,EACA,oBAAoB,MAAM,SAAS;AACjC,SAAK,iBAAiB,QAAQ,UAAQ,KAAK,aAAa,KAAK;AAC7D,SAAK,mBAAmB,CAAC;AACzB,UAAM,OAAO,WAAS,MAAM,MAAM,UAAQ;AACxC,UAAI,UAAU,KAAK,KAAK,IAAI,GAAG;AAC7B,aAAK,aAAa;AAClB,aAAK,oBAAoB,IAAI;AAC7B,YAAI,CAAC,SAAS;AAEZ,iBAAO;AAAA,QACT;AAAA,MACF,OAAO;AACL,aAAK,aAAa;AAAA,MACpB;AACA,UAAI,KAAK,SAAS,SAAS,GAAG;AAE5B,eAAO,KAAK,KAAK,QAAQ;AAAA,MAC3B;AACA,aAAO;AAAA,IACT,CAAC;AACD,SAAK,KAAK,SAAS;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,4BAA4B,MAAM;AAChC,UAAM,OAAO,OAAK;AAChB,UAAI,GAAG;AACL,UAAE,UAAU;AACZ,UAAE,YAAY,IAAI;AAClB,aAAK,oBAAoB,CAAC;AAC1B,YAAI,EAAE,cAAc,GAAG;AACrB,iBAAO,KAAK,EAAE,cAAc,CAAC;AAAA,QAC/B;AAAA,MACF;AAAA,IACF;AACA,SAAK,KAAK,cAAc,CAAC;AAAA,EAC3B;AAYF;AAVI,mBAAK,OAAO,SAAS,0BAA0B,GAAG;AAChD,SAAO,KAAK,KAAK,oBAAmB;AACtC;AAGA,mBAAK,QAA0B,mBAAmB;AAAA,EAChD,OAAO;AAAA,EACP,SAAS,mBAAkB;AAC7B,CAAC;AAliBL,IAAM,oBAAN;AAAA,CAqiBC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,mBAAmB,CAAC;AAAA,IAC1F,MAAM;AAAA,EACR,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAMH,IAAM,gCAAgC,IAAI,eAAe,mBAAmB;AAM5E,IAAM,aAAN,MAAiB;AAAA,EACf,YAAY,eAAe;AACzB,SAAK,gBAAgB;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA,EAIA,gBAAgB,OAAO;AACrB,QAAI,QAAQ,CAAC;AACb,QAAI,CAAC,KAAK,cAAc,oBAAoB,KAAK,GAAG;AAElD,cAAQ,MAAM,IAAI,UAAQ,IAAI,WAAW,MAAM,MAAM,KAAK,aAAa,CAAC;AAAA,IAC1E,OAAO;AACL,cAAQ,MAAM,IAAI,UAAQ;AACxB,aAAK,UAAU,KAAK;AACpB,eAAO;AAAA,MACT,CAAC;AAAA,IACH;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAIA,eAAe;AACb,WAAO,KAAK,cAAc;AAAA,EAC5B;AAAA;AAAA;AAAA;AAAA,EAIA,iBAAiB,KAAK;AAEpB,UAAM,QAAQ,CAAC;AACf,UAAM,UAAU,UAAQ;AACtB,YAAM,KAAK,IAAI;AACf,WAAK,YAAY,EAAE,QAAQ,OAAK;AAC9B,gBAAQ,CAAC;AAAA,MACX,CAAC;AAAA,IACH;AACA,SAAK,aAAa,EAAE,QAAQ,OAAK;AAC/B,cAAQ,CAAC;AAAA,IACX,CAAC;AACD,WAAO,MAAM,KAAK,OAAK,EAAE,QAAQ,GAAG,KAAK;AAAA,EAC3C;AAAA;AAAA;AAAA;AAAA,EAIA,qBAAqB;AACnB,WAAO,KAAK,cAAc,mBAAmB;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA,EAIA,sBAAsB;AACpB,WAAO,KAAK,cAAc,oBAAoB;AAAA,EAChD;AAAA;AAAA;AAAA;AAAA,EAIA,yBAAyB;AACvB,WAAO,KAAK,cAAc,uBAAuB;AAAA,EACnD;AAAA;AAAA;AAAA;AAAA,EAIA,sBAAsB;AACpB,WAAO,KAAK,cAAc,oBAAoB;AAAA,EAChD;AAAA;AAAA;AAAA;AAAA,EAIA,qBAAqB;AACnB,WAAO,KAAK,cAAc,mBAAmB;AAAA,EAC/C;AACF;;;AC/7BA,SAAS,sCAAsC,IAAI,KAAK;AACtD,MAAI,KAAK,GAAG;AACV,IAAG,UAAU,GAAG,MAAM;AAAA,EACxB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,OAAO,IAAI;AACjB,UAAM,SAAY,cAAc;AAChC,IAAG,YAAY,wBAAwB,CAAC,OAAO,YAAY,EAAE,+BAA+B,OAAO,YAAY,EAAE,qCAAqC,OAAO,gBAAgB,OAAO,UAAU,IAAI,CAAC,EAAE,8BAA8B,CAAC,OAAO,gBAAgB,OAAO,UAAU,IAAI,CAAC,EAAE,mCAAmC,OAAO,gBAAgB,OAAO,QAAQ,IAAI,CAAC,EAAE,4BAA4B,CAAC,OAAO,gBAAgB,OAAO,QAAQ,IAAI,CAAC;AAAA,EAC7a;AACF;AACA,IAAM,MAAM,CAAC,WAAW,EAAE;AAC1B,SAAS,kFAAkF,IAAI,KAAK;AAClG,MAAI,KAAK,GAAG;AACV,IAAG,wBAAwB,CAAC;AAC5B,IAAG,UAAU,GAAG,QAAQ,CAAC;AACzB,IAAG,sBAAsB;AAAA,EAC3B;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,cAAc,CAAC;AACjC,IAAG,UAAU,CAAC;AACd,IAAG,YAAY,iCAAiC,OAAO,YAAY,EAAE,0BAA0B,CAAC,OAAO,YAAY;AAAA,EACrH;AACF;AACA,IAAM,MAAM,CAAC,IAAI,QAAQ;AAAA,EACvB,WAAW;AAAA,EACX,QAAQ;AACV;AACA,SAAS,mEAAmE,IAAI,KAAK;AACnF,MAAI,KAAK,GAAG;AACV,IAAG,wBAAwB,CAAC;AAC5B,IAAG,WAAW,GAAG,mFAAmF,GAAG,GAAG,gBAAgB,CAAC;AAC3H,IAAG,sBAAsB;AAAA,EAC3B;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,cAAc,CAAC;AACjC,IAAG,UAAU,CAAC;AACd,IAAG,WAAW,0BAA0B,OAAO,cAAc,EAAE,iCAAoC,gBAAgB,GAAG,KAAK,OAAO,SAAS,OAAO,QAAQ,MAAM,CAAC;AAAA,EACnK;AACF;AACA,SAAS,oDAAoD,IAAI,KAAK;AACpE,MAAI,KAAK,GAAG;AACV,IAAG,wBAAwB,CAAC;AAC5B,IAAG,WAAW,GAAG,oEAAoE,GAAG,GAAG,gBAAgB,CAAC;AAC5G,IAAG,sBAAsB;AAAA,EAC3B;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,cAAc;AAChC,UAAM,MAAS,YAAY,CAAC;AAC5B,IAAG,UAAU,CAAC;AACd,IAAG,WAAW,QAAQ,CAAC,OAAO,SAAS,EAAE,YAAY,GAAG;AAAA,EAC1D;AACF;AACA,SAAS,yFAAyF,IAAI,KAAK;AACzG,MAAI,KAAK,GAAG;AACV,IAAG,UAAU,GAAG,QAAQ,CAAC;AAAA,EAC3B;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,cAAc,CAAC;AACjC,IAAG,WAAW,UAAU,OAAO,iBAAiB,iBAAiB,aAAa;AAAA,EAChF;AACF;AACA,SAAS,yFAAyF,IAAI,KAAK;AACzG,MAAI,KAAK,GAAG;AACV,IAAG,UAAU,GAAG,QAAQ,CAAC;AAAA,EAC3B;AACF;AACA,SAAS,kFAAkF,IAAI,KAAK;AAClG,MAAI,KAAK,GAAG;AACV,IAAG,wBAAwB,CAAC;AAC5B,IAAG,WAAW,GAAG,0FAA0F,GAAG,GAAG,QAAQ,CAAC,EAAE,GAAG,0FAA0F,GAAG,GAAG,QAAQ,CAAC;AACxO,IAAG,sBAAsB;AAAA,EAC3B;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,cAAc,CAAC;AACjC,IAAG,UAAU,CAAC;AACd,IAAG,WAAW,QAAQ,OAAO,cAAc;AAC3C,IAAG,UAAU,CAAC;AACd,IAAG,WAAW,QAAQ,CAAC,OAAO,cAAc;AAAA,EAC9C;AACF;AACA,SAAS,mEAAmE,IAAI,KAAK;AACnF,MAAI,KAAK,GAAG;AACV,IAAG,wBAAwB,CAAC;AAC5B,IAAG,WAAW,GAAG,mFAAmF,GAAG,GAAG,gBAAgB,CAAC;AAC3H,IAAG,sBAAsB;AAAA,EAC3B;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,cAAc,CAAC;AACjC,IAAG,UAAU,CAAC;AACd,IAAG,WAAW,0BAA0B,OAAO,cAAc,EAAE,iCAAoC,gBAAgB,GAAG,KAAK,OAAO,SAAS,OAAO,QAAQ,MAAM,CAAC;AAAA,EACnK;AACF;AACA,SAAS,oDAAoD,IAAI,KAAK;AACpE,MAAI,KAAK,GAAG;AACV,IAAG,wBAAwB,CAAC;AAC5B,IAAG,WAAW,GAAG,oEAAoE,GAAG,GAAG,gBAAgB,CAAC;AAC5G,IAAG,sBAAsB;AAAA,EAC3B;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,cAAc;AAChC,UAAM,MAAS,YAAY,CAAC;AAC5B,IAAG,UAAU,CAAC;AACd,IAAG,WAAW,QAAQ,CAAC,OAAO,SAAS,EAAE,YAAY,GAAG;AAAA,EAC1D;AACF;AACA,SAAS,mDAAmD,IAAI,KAAK;AACnE,MAAI,KAAK,GAAG;AACV,IAAG,UAAU,GAAG,QAAQ,CAAC;AAAA,EAC3B;AACA,MAAI,KAAK,GAAG;AACV,IAAG,WAAW,UAAU,IAAI;AAAA,EAC9B;AACF;AACA,SAAS,gDAAgD,IAAI,KAAK;AAAC;AACnE,SAAS,+DAA+D,IAAI,KAAK;AAC/E,MAAI,KAAK,GAAG;AACV,IAAG,UAAU,GAAG,QAAQ,CAAC;AAAA,EAC3B;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,cAAc,CAAC;AACjC,IAAG,WAAW,UAAU,OAAO,IAAI;AAAA,EACrC;AACF;AACA,SAAS,wDAAwD,IAAI,KAAK;AACxE,MAAI,KAAK,GAAG;AACV,IAAG,eAAe,GAAG,MAAM,EAAE,GAAG,MAAM;AACtC,IAAG,WAAW,GAAG,gEAAgE,GAAG,GAAG,QAAQ,CAAC;AAChG,IAAG,aAAa,EAAE;AAAA,EACpB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,cAAc,CAAC;AACjC,IAAG,YAAY,uBAAuB,OAAO,cAAc,EAAE,wBAAwB,OAAO,eAAe,EAAE,yBAAyB,OAAO,SAAS,EAAE,2BAA2B,OAAO,UAAU,EAAE,oBAAoB,CAAC,OAAO,UAAU;AAC5O,IAAG,UAAU,CAAC;AACd,IAAG,YAAY,2BAA2B,OAAO,UAAU,EAAE,mCAAmC,OAAO,UAAU,EAAE,oBAAoB,CAAC,OAAO,UAAU,EAAE,4BAA4B,CAAC,OAAO,UAAU;AACzM,IAAG,UAAU,CAAC;AACd,IAAG,WAAW,QAAQ,OAAO,IAAI;AAAA,EACnC;AACF;AACA,SAAS,iDAAiD,IAAI,KAAK;AACjE,MAAI,KAAK,GAAG;AACV,IAAG,wBAAwB,CAAC;AAC5B,IAAG,WAAW,GAAG,yDAAyD,GAAG,IAAI,QAAQ,CAAC;AAC1F,IAAG,UAAU,GAAG,QAAQ,CAAC;AACzB,IAAG,OAAO,GAAG,aAAa;AAC1B,IAAG,sBAAsB;AAAA,EAC3B;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,cAAc;AAChC,IAAG,UAAU,CAAC;AACd,IAAG,WAAW,QAAQ,OAAO,QAAQ,OAAO,QAAQ;AACpD,IAAG,UAAU,CAAC;AACd,IAAG,WAAW,aAAgB,YAAY,GAAG,GAAG,OAAO,OAAO,OAAO,cAAc,KAAK,gBAAgB,GAAM,cAAc;AAAA,EAC9H;AACF;AACA,SAAS,2DAA2D,IAAI,KAAK;AAC3E,MAAI,KAAK,GAAG;AACV,IAAG,UAAU,GAAG,0BAA0B,CAAC;AAAA,EAC7C;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,cAAc;AAChC,IAAG,WAAW,gBAAgB,OAAO,YAAY,EAAE,SAAS,OAAO,QAAQ,KAAK;AAAA,EAClF;AACF;AACA,SAAS,4DAA4D,IAAI,KAAK;AAC5E,MAAI,KAAK,GAAG;AACV,UAAM,MAAS,iBAAiB;AAChC,IAAG,eAAe,GAAG,yBAAyB,CAAC;AAC/C,IAAG,WAAW,SAAS,SAAS,mGAAmG,QAAQ;AACzI,MAAG,cAAc,GAAG;AACpB,YAAM,SAAY,cAAc;AAChC,aAAU,YAAY,OAAO,YAAY,MAAM,CAAC;AAAA,IAClD,CAAC;AACD,IAAG,aAAa;AAAA,EAClB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,cAAc;AAChC,IAAG,WAAW,gBAAgB,OAAO,YAAY,EAAE,cAAc,OAAO,UAAU,EAAE,kBAAkB,OAAO,cAAc,EAAE,gBAAgB,OAAO,YAAY,EAAE,WAAW,OAAO,UAAU,EAAE,UAAU,OAAO,MAAM,EAAE,cAAc,OAAO,UAAU,EAAE,aAAa,OAAO,SAAS;AAAA,EACzR;AACF;AACA,SAAS,4DAA4D,IAAI,KAAK;AAC5E,MAAI,KAAK,GAAG;AACV,UAAM,MAAS,iBAAiB;AAChC,IAAG,eAAe,GAAG,yBAAyB,CAAC;AAC/C,IAAG,WAAW,SAAS,SAAS,mGAAmG,QAAQ;AACzI,MAAG,cAAc,GAAG;AACpB,YAAM,SAAY,cAAc;AAChC,aAAU,YAAY,OAAO,cAAc,MAAM,CAAC;AAAA,IACpD,CAAC;AACD,IAAG,aAAa;AAAA,EAClB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,cAAc;AAChC,IAAG,WAAW,gBAAgB,OAAO,YAAY,EAAE,aAAa,OAAO,SAAS,EAAE,iBAAiB,OAAO,aAAa,EAAE,cAAc,OAAO,UAAU,EAAE,qBAAqB,OAAO,iBAAiB;AAAA,EACzM;AACF;AACA,IAAM,MAAM,CAAC,gBAAgB;AAC7B,SAAS,oFAAoF,IAAI,KAAK;AAAC;AACvG,IAAM,MAAM,SAAO;AAAA,EACjB,WAAW;AACb;AACA,SAAS,sEAAsE,IAAI,KAAK;AACtF,MAAI,KAAK,GAAG;AACV,IAAG,wBAAwB,CAAC;AAC5B,IAAG,WAAW,GAAG,qFAAqF,GAAG,GAAG,eAAe,EAAE;AAC7H,IAAG,sBAAsB;AAAA,EAC3B;AACA,MAAI,KAAK,GAAG;AACV,UAAM,UAAU,IAAI;AACpB,IAAG,cAAc,CAAC;AAClB,UAAM,MAAS,YAAY,CAAC;AAC5B,IAAG,UAAU,CAAC;AACd,IAAG,WAAW,oBAAoB,GAAG,EAAE,2BAA8B,gBAAgB,GAAG,KAAK,OAAO,CAAC;AAAA,EACvG;AACF;AACA,SAAS,uDAAuD,IAAI,KAAK;AACvE,MAAI,KAAK,GAAG;AACV,IAAG,eAAe,GAAG,+BAA+B,CAAC;AACrD,IAAG,WAAW,GAAG,uEAAuE,GAAG,GAAG,gBAAgB,CAAC;AAC/G,IAAG,aAAa;AAAA,EAClB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,cAAc;AAChC,IAAG,YAAY,UAAU,OAAO,eAAe;AAC/C,IAAG,YAAY,qCAAqC,OAAO,YAAY,EAAE,8BAA8B,CAAC,OAAO,YAAY;AAC3H,IAAG,WAAW,YAAY,OAAO,iBAAiB,EAAE,eAAe,OAAO,oBAAoB,EAAE,eAAe,OAAO,oBAAoB;AAC1I,IAAG,UAAU,CAAC;AACd,IAAG,WAAW,mBAAmB,OAAO,cAAc,EAAE,wBAAwB,OAAO,kBAAkB;AAAA,EAC3G;AACF;AACA,SAAS,4DAA4D,IAAI,KAAK;AAAC;AAC/E,SAAS,8CAA8C,IAAI,KAAK;AAC9D,MAAI,KAAK,GAAG;AACV,IAAG,wBAAwB,CAAC;AAC5B,IAAG,WAAW,GAAG,6DAA6D,GAAG,GAAG,eAAe,EAAE;AACrG,IAAG,sBAAsB;AAAA,EAC3B;AACA,MAAI,KAAK,GAAG;AACV,UAAM,UAAU,IAAI;AACpB,IAAG,cAAc,CAAC;AAClB,UAAM,MAAS,YAAY,CAAC;AAC5B,IAAG,UAAU,CAAC;AACd,IAAG,WAAW,oBAAoB,GAAG,EAAE,2BAA8B,gBAAgB,GAAG,KAAK,OAAO,CAAC;AAAA,EACvG;AACF;AACA,SAAS,+BAA+B,IAAI,KAAK;AAC/C,MAAI,KAAK,GAAG;AACV,IAAG,eAAe,GAAG,OAAO,EAAE;AAC9B,IAAG,WAAW,GAAG,+CAA+C,GAAG,GAAG,gBAAgB,EAAE;AACxF,IAAG,aAAa;AAAA,EAClB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,cAAc;AAChC,IAAG,YAAY,qCAAqC,OAAO,YAAY,EAAE,8BAA8B,CAAC,OAAO,YAAY;AAC3H,IAAG,WAAW,cAAc,OAAO,cAAc,CAAC,EAAE,OAAO,eAAe,OAAO,OAAO,OAAO,YAAY,cAAc,EAAE,iBAAiB,OAAO,eAAe,OAAO,OAAO,OAAO,YAAY,aAAa,EAAE,uBAAuB,OAAO,eAAe,MAAM;AACrQ,IAAG,UAAU,CAAC;AACd,IAAG,WAAW,WAAW,OAAO,cAAc,EAAE,gBAAgB,OAAO,kBAAkB;AAAA,EAC3F;AACF;AACA,SAAS,uCAAuC,IAAI,KAAK;AACvD,MAAI,KAAK,GAAG;AACV,UAAM,OAAU,iBAAiB;AACjC,IAAG,eAAe,GAAG,gBAAgB,EAAE;AACvC,IAAG,WAAW,kBAAkB,SAAS,8EAA8E,QAAQ;AAC7H,MAAG,cAAc,IAAI;AACrB,YAAM,UAAa,cAAc;AACjC,aAAU,YAAY,QAAQ,oBAAoB,MAAM,CAAC;AAAA,IAC3D,CAAC,EAAE,WAAW,SAAS,uEAAuE,QAAQ;AACpG,MAAG,cAAc,IAAI;AACrB,YAAM,UAAa,cAAc;AACjC,aAAU,YAAY,QAAQ,oBAAoB,MAAM,CAAC;AAAA,IAC3D,CAAC,EAAE,cAAc,SAAS,0EAA0E,QAAQ;AAC1G,MAAG,cAAc,IAAI;AACrB,YAAM,UAAa,cAAc;AACjC,aAAU,YAAY,QAAQ,oBAAoB,MAAM,CAAC;AAAA,IAC3D,CAAC,EAAE,iBAAiB,SAAS,6EAA6E,QAAQ;AAChH,MAAG,cAAc,IAAI;AACrB,YAAM,UAAa,cAAc;AACjC,aAAU,YAAY,QAAQ,oBAAoB,MAAM,CAAC;AAAA,IAC3D,CAAC,EAAE,oBAAoB,SAAS,gFAAgF,QAAQ;AACtH,MAAG,cAAc,IAAI;AACrB,YAAM,UAAa,cAAc;AACjC,aAAU,YAAY,QAAQ,oBAAoB,MAAM,CAAC;AAAA,IAC3D,CAAC,EAAE,iBAAiB,SAAS,6EAA6E,QAAQ;AAChH,MAAG,cAAc,IAAI;AACrB,YAAM,UAAa,cAAc;AACjC,aAAU,YAAY,QAAQ,oBAAoB,MAAM,CAAC;AAAA,IAC3D,CAAC,EAAE,iBAAiB,SAAS,6EAA6E,QAAQ;AAChH,MAAG,cAAc,IAAI;AACrB,YAAM,UAAa,cAAc;AACjC,aAAU,YAAY,QAAQ,oBAAoB,MAAM,CAAC;AAAA,IAC3D,CAAC,EAAE,gBAAgB,SAAS,4EAA4E,QAAQ;AAC9G,MAAG,cAAc,IAAI;AACrB,YAAM,UAAa,cAAc;AACjC,aAAU,YAAY,QAAQ,oBAAoB,MAAM,CAAC;AAAA,IAC3D,CAAC,EAAE,iBAAiB,SAAS,6EAA6E,QAAQ;AAChH,MAAG,cAAc,IAAI;AACrB,YAAM,UAAa,cAAc;AACjC,aAAU,YAAY,QAAQ,oBAAoB,MAAM,CAAC;AAAA,IAC3D,CAAC,EAAE,eAAe,SAAS,2EAA2E,QAAQ;AAC5G,MAAG,cAAc,IAAI;AACrB,YAAM,UAAa,cAAc;AACjC,aAAU,YAAY,QAAQ,oBAAoB,MAAM,CAAC;AAAA,IAC3D,CAAC,EAAE,YAAY,SAAS,wEAAwE,QAAQ;AACtG,MAAG,cAAc,IAAI;AACrB,YAAM,UAAa,cAAc;AACjC,aAAU,YAAY,QAAQ,oBAAoB,MAAM,CAAC;AAAA,IAC3D,CAAC;AACD,IAAG,aAAa;AAAA,EAClB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,eAAe,IAAI;AACzB,UAAM,SAAY,cAAc;AAChC,IAAG,WAAW,QAAQ,aAAa,IAAI,EAAE,SAAS,aAAa,KAAK,EAAE,aAAa,aAAa,SAAS,EAAE,cAAc,aAAa,UAAU,EAAE,cAAc,aAAa,UAAU,EAAE,aAAa,aAAa,SAAS,EAAE,cAAc,aAAa,UAAU,EAAE,UAAU,aAAa,MAAM,EAAE,WAAW,aAAa,OAAO,EAAE,SAAS,aAAa,KAAK,EAAE,aAAa,aAAa,SAAS,EAAE,iBAAiB,aAAa,aAAa,EAAE,qBAAqB,aAAa,iBAAiB,EAAE,gBAAgB,aAAa,YAAY,EAAE,WAAW,aAAa,OAAO,EAAE,cAAc,YAAY,EAAE,gBAAgB,OAAO,YAAY,EAAE,cAAc,OAAO,UAAU,EAAE,kBAAkB,OAAO,cAAc,EAAE,eAAe,OAAO,WAAW,EAAE,eAAe,OAAO,WAAW,EAAE,gBAAgB,OAAO,YAAY,EAAE,eAAe,OAAO,WAAW,EAAE,iBAAiB,OAAO,aAAa,EAAE,mBAAmB,OAAO,eAAe,EAAE,gBAAgB,OAAO,YAAY,EAAE,cAAc,OAAO,UAAU,EAAE,kBAAkB,OAAO,kBAAkB,OAAO,mBAAmB;AAAA,EAC7iC;AACF;AACA,IAAM,gCAAN,MAAM,8BAA6B;AAAA,EACjC,YAAY,KAAK;AACf,SAAK,MAAM;AACX,SAAK,QAAQ;AACb,SAAK,YAAY;AACjB,SAAK,QAAQ,CAAC;AAAA,EAChB;AAAA,EACA,YAAY,UAAU;AACpB,SAAK,gBAAgB,KAAK,cAAc,KAAK,SAAS;AAAA,EACxD;AAAA,EACA,gBAAgB,cAAc,YAAY,OAAO;AAC/C,UAAM,SAAS;AACf,UAAM,gBAAgB,cAAc,QAAQ,SAAS;AACrD,UAAM,cAAc,cAAc,QAAQ,UAAU;AACpD,UAAM,QAAQ;AAAA,MACZ,CAAC,aAAa,GAAG,GAAG,MAAM;AAAA,MAC1B,CAAC,WAAW,GAAG;AAAA,IACjB;AACA,YAAQ,cAAc;AAAA,MACpB,KAAK;AACH,cAAM,MAAM,GAAG,EAAE;AACjB;AAAA,MACF,KAAK;AACH,cAAM,SAAS,GAAG,EAAE;AACpB;AAAA,MACF,KAAK;AAEH,cAAM,SAAS,GAAG,EAAE;AACpB,cAAM,aAAa,IAAI,GAAG,SAAS,EAAE;AACrC;AAAA,MACF;AACE,cAAM,UAAU;AAChB;AAAA,IACJ;AACA,SAAK,QAAQ;AACb,SAAK,IAAI,aAAa;AAAA,EACxB;AAgCF;AA9BI,8BAAK,OAAO,SAAS,qCAAqC,GAAG;AAC3D,SAAO,KAAK,KAAK,+BAAiC,kBAAqB,iBAAiB,CAAC;AAC3F;AAGA,8BAAK,OAAyB,kBAAkB;AAAA,EAC9C,MAAM;AAAA,EACN,WAAW,CAAC,CAAC,wBAAwB,CAAC;AAAA,EACtC,UAAU;AAAA,EACV,cAAc,SAAS,0CAA0C,IAAI,KAAK;AACxE,QAAI,KAAK,GAAG;AACV,MAAG,WAAW,IAAI,KAAK;AACvB,MAAG,YAAY,2BAA2B,IAAI;AAAA,IAChD;AAAA,EACF;AAAA,EACA,QAAQ;AAAA,IACN,cAAc;AAAA,IACd,OAAO;AAAA,IACP,WAAW;AAAA,EACb;AAAA,EACA,UAAU,CAAC,qBAAqB;AAAA,EAChC,YAAY;AAAA,EACZ,UAAU,CAAI,sBAAyB,mBAAmB;AAAA,EAC1D,OAAO;AAAA,EACP,MAAM;AAAA,EACN,UAAU,SAAS,sCAAsC,IAAI,KAAK;AAAA,EAAC;AAAA,EACnE,eAAe;AAAA,EACf,iBAAiB;AACnB,CAAC;AAlEL,IAAM,+BAAN;AAAA,CAqEC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,8BAA8B,CAAC;AAAA,IACrG,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,iBAAiB,wBAAwB;AAAA,MACzC,qBAAqB;AAAA,MACrB,MAAM;AAAA,QACJ,mCAAmC;AAAA,QACnC,WAAW;AAAA,MACb;AAAA,MACA,YAAY;AAAA,IACd,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAS;AAAA,EACX,CAAC,GAAG;AAAA,IACF,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,IACR,CAAC;AAAA,IACD,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,IACR,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AAMH,IAAM,yBAAN,MAAM,uBAAsB;AAAA,EAC1B,cAAc;AACZ,SAAK,cAAc;AACnB,SAAK,YAAY,CAAC;AAClB,SAAK,UAAU,CAAC;AAChB,SAAK,eAAe;AACpB,SAAK,aAAa,CAAC;AAAA,EACrB;AAAA,EACA,YAAY,SAAS;AACnB,UAAM;AAAA,MACJ;AAAA,IACF,IAAI;AACJ,QAAI,aAAa;AACf,WAAK,aAAa,CAAC,GAAG,IAAI,MAAM,YAAY,gBAAgB,CAAC,CAAC;AAAA,IAChE;AAAA,EACF;AA0CF;AAxCI,uBAAK,OAAO,SAAS,8BAA8B,GAAG;AACpD,SAAO,KAAK,KAAK,wBAAuB;AAC1C;AAGA,uBAAK,OAAyB,kBAAkB;AAAA,EAC9C,MAAM;AAAA,EACN,WAAW,CAAC,CAAC,gBAAgB,CAAC;AAAA,EAC9B,UAAU;AAAA,EACV,cAAc,SAAS,mCAAmC,IAAI,KAAK;AACjE,QAAI,KAAK,GAAG;AACV,MAAG,YAAY,eAAe,IAAI;AAClC,MAAG,YAAY,mBAAmB,CAAC,IAAI,YAAY,EAAE,0BAA0B,IAAI,YAAY;AAAA,IACjG;AAAA,EACF;AAAA,EACA,QAAQ;AAAA,IACN,aAAa;AAAA,IACb,WAAW;AAAA,IACX,SAAS;AAAA,IACT,cAAc;AAAA,EAChB;AAAA,EACA,UAAU,CAAC,cAAc;AAAA,EACzB,YAAY;AAAA,EACZ,UAAU,CAAI,sBAAyB,mBAAmB;AAAA,EAC1D,OAAO;AAAA,EACP,MAAM;AAAA,EACN,QAAQ,CAAC,CAAC,GAAG,wBAAwB,+BAA+B,qCAAqC,8BAA8B,mCAAmC,4BAA4B,GAAG,SAAS,SAAS,CAAC;AAAA,EAC5N,UAAU,SAAS,+BAA+B,IAAI,KAAK;AACzD,QAAI,KAAK,GAAG;AACV,MAAG,WAAW,GAAG,uCAAuC,GAAG,IAAI,QAAQ,CAAC;AAAA,IAC1E;AACA,QAAI,KAAK,GAAG;AACV,MAAG,WAAW,WAAW,IAAI,UAAU;AAAA,IACzC;AAAA,EACF;AAAA,EACA,cAAc,CAAC,OAAO;AAAA,EACtB,eAAe;AAAA,EACf,iBAAiB;AACnB,CAAC;AAvDL,IAAM,wBAAN;AAAA,CA0DC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,uBAAuB,CAAC;AAAA,IAC9F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAWV,iBAAiB,wBAAwB;AAAA,MACzC,qBAAqB;AAAA,MACrB,MAAM;AAAA,QACJ,sBAAsB;AAAA,QACtB,2BAA2B;AAAA,QAC3B,kCAAkC;AAAA,MACpC;AAAA,MACA,SAAS,CAAC,OAAO;AAAA,MACjB,YAAY;AAAA,IACd,CAAC;AAAA,EACH,CAAC,GAAG,MAAM;AAAA,IACR,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,IACR,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,IACR,CAAC;AAAA,IACD,SAAS,CAAC;AAAA,MACR,MAAM;AAAA,IACR,CAAC;AAAA,IACD,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AAMH,IAAM,sCAAN,MAAM,oCAAmC;AAAA,EACvC,cAAc;AACZ,SAAK,eAAe;AAAA,EACtB;AAwCF;AAtCI,oCAAK,OAAO,SAAS,2CAA2C,GAAG;AACjE,SAAO,KAAK,KAAK,qCAAoC;AACvD;AAGA,oCAAK,OAAyB,kBAAkB;AAAA,EAC9C,MAAM;AAAA,EACN,WAAW,CAAC,CAAC,yBAAyB,WAAW,EAAE,CAAC;AAAA,EACpD,UAAU;AAAA,EACV,cAAc,SAAS,gDAAgD,IAAI,KAAK;AAC9E,QAAI,KAAK,GAAG;AACV,MAAG,YAAY,4BAA4B,IAAI,YAAY,EAAE,oCAAoC,IAAI,gBAAgB,IAAI,SAAS,EAAE,0CAA0C,IAAI,gBAAgB,IAAI,aAAa,EAAE,qCAAqC,IAAI,iBAAiB,IAAI,cAAc,IAAI,kBAAkB,EAAE,qBAAqB,CAAC,IAAI,YAAY,EAAE,6BAA6B,CAAC,IAAI,gBAAgB,IAAI,SAAS,EAAE,mCAAmC,CAAC,IAAI,gBAAgB,IAAI,aAAa,EAAE,8BAA8B,CAAC,IAAI,iBAAiB,IAAI,cAAc,IAAI,kBAAkB;AAAA,IAC3kB;AAAA,EACF;AAAA,EACA,QAAQ;AAAA,IACN,cAAc;AAAA,IACd,WAAW;AAAA,IACX,eAAe;AAAA,IACf,YAAY;AAAA,IACZ,mBAAmB;AAAA,EACrB;AAAA,EACA,YAAY;AAAA,EACZ,UAAU,CAAI,mBAAmB;AAAA,EACjC,OAAO;AAAA,EACP,OAAO;AAAA,EACP,MAAM;AAAA,EACN,UAAU,SAAS,4CAA4C,IAAI,KAAK;AACtE,QAAI,KAAK,GAAG;AACV,MAAG,UAAU,GAAG,MAAM;AAAA,IACxB;AACA,QAAI,KAAK,GAAG;AACV,MAAG,YAAY,2BAA2B,CAAC,IAAI,YAAY,EAAE,kCAAkC,IAAI,YAAY;AAAA,IACjH;AAAA,EACF;AAAA,EACA,eAAe;AAAA,EACf,iBAAiB;AACnB,CAAC;AAzCL,IAAM,qCAAN;AAAA,CA4CC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,oCAAoC,CAAC;AAAA,IAC3G,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,UAAU;AAAA;AAAA;AAAA,MAGV,iBAAiB,wBAAwB;AAAA,MACzC,qBAAqB;AAAA,MACrB,MAAM;AAAA,QACJ,oCAAoC;AAAA,QACpC,4CAA4C;AAAA,QAC5C,kDAAkD;AAAA,QAClD,6CAA6C;AAAA,QAC7C,6BAA6B;AAAA,QAC7B,qCAAqC;AAAA,QACrC,2CAA2C;AAAA,QAC3C,sCAAsC;AAAA,MACxC;AAAA,MACA,YAAY;AAAA,IACd,CAAC;AAAA,EACH,CAAC,GAAG,MAAM;AAAA,IACR,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,IACR,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,IACR,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,IACR,CAAC;AAAA,IACD,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,IACD,mBAAmB,CAAC;AAAA,MAClB,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AAMH,IAAM,+BAAN,MAAM,6BAA4B;AAAA,EAChC,cAAc;AACZ,SAAK,eAAe;AAAA,EACtB;AAAA,EACA,IAAI,iBAAiB;AACnB,WAAO,CAAC,KAAK,UAAU,CAAC,CAAC,KAAK;AAAA,EAChC;AAAA,EACA,IAAI,mBAAmB;AACrB,WAAO,CAAC,KAAK,UAAU,CAAC,KAAK;AAAA,EAC/B;AAAA,EACA,IAAI,iBAAiB;AACnB,WAAO,CAAC,CAAC,KAAK,cAAc,CAAC,KAAK;AAAA,EACpC;AAAA,EACA,IAAI,kBAAkB;AACpB,WAAO,CAAC,KAAK,cAAc,CAAC,KAAK;AAAA,EACnC;AA8CF;AA5CI,6BAAK,OAAO,SAAS,oCAAoC,GAAG;AAC1D,SAAO,KAAK,KAAK,8BAA6B;AAChD;AAGA,6BAAK,OAAyB,kBAAkB;AAAA,EAC9C,MAAM;AAAA,EACN,WAAW,CAAC,CAAC,uBAAuB,CAAC;AAAA,EACrC,UAAU;AAAA,EACV,cAAc,SAAS,yCAAyC,IAAI,KAAK;AACvE,QAAI,KAAK,GAAG;AACV,MAAG,YAAY,4BAA4B,IAAI,YAAY,EAAE,iCAAiC,IAAI,gBAAgB,IAAI,MAAM,EAAE,iCAAiC,IAAI,gBAAgB,IAAI,cAAc,EAAE,kCAAkC,IAAI,gBAAgB,IAAI,eAAe,EAAE,qBAAqB,CAAC,IAAI,YAAY,EAAE,0BAA0B,CAAC,IAAI,gBAAgB,IAAI,MAAM,EAAE,0BAA0B,CAAC,IAAI,gBAAgB,IAAI,cAAc,EAAE,2BAA2B,CAAC,IAAI,gBAAgB,IAAI,eAAe;AAAA,IAC7f;AAAA,EACF;AAAA,EACA,QAAQ;AAAA,IACN,cAAc;AAAA,IACd,YAAY;AAAA,IACZ,gBAAgB;AAAA,IAChB,cAAc;AAAA,IACd,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,YAAY;AAAA,EACd;AAAA,EACA,YAAY;AAAA,EACZ,UAAU,CAAI,mBAAmB;AAAA,EACjC,OAAO;AAAA,EACP,MAAM;AAAA,EACN,QAAQ,CAAC,CAAC,GAAG,MAAM,GAAG,CAAC,mBAAmB,EAAE,GAAG,CAAC,GAAG,QAAQ,UAAU,GAAG,CAAC,GAAG,0BAA0B,+BAA+B,GAAG,CAAC,WAAW,IAAI,UAAU,YAAY,GAAG,CAAC,WAAW,IAAI,SAAS,+BAA+B,GAAG,UAAU,GAAG,MAAM,GAAG,CAAC,WAAW,IAAI,UAAU,QAAQ,SAAS,+BAA+B,GAAG,MAAM,GAAG,CAAC,WAAW,IAAI,GAAG,+BAA+B,GAAG,QAAQ,GAAG,CAAC,WAAW,IAAI,UAAU,QAAQ,GAAG,6BAA6B,GAAG,CAAC,WAAW,IAAI,UAAU,WAAW,GAAG,kCAAkC,GAAG,QAAQ,CAAC;AAAA,EACnjB,UAAU,SAAS,qCAAqC,IAAI,KAAK;AAC/D,QAAI,KAAK,GAAG;AACV,MAAG,WAAW,GAAG,qDAAqD,GAAG,GAAG,gBAAgB,CAAC,EAAE,GAAG,qDAAqD,GAAG,GAAG,gBAAgB,CAAC,EAAE,GAAG,oDAAoD,GAAG,GAAG,eAAe,MAAM,GAAM,sBAAsB;AAAA,IAChS;AACA,QAAI,KAAK,GAAG;AACV,MAAG,WAAW,QAAQ,IAAI,gBAAgB;AAC1C,MAAG,UAAU,CAAC;AACd,MAAG,WAAW,QAAQ,IAAI,UAAU;AAAA,IACtC;AAAA,EACF;AAAA,EACA,cAAc,CAAC,cAAiB,iBAAiB,MAAM,gBAAmB,+BAA+B;AAAA,EACzG,eAAe;AAAA,EACf,iBAAiB;AACnB,CAAC;AA3DL,IAAM,8BAAN;AAAA,CA8DC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,6BAA6B,CAAC;AAAA,IACpG,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA8BV,iBAAiB,wBAAwB;AAAA,MACzC,qBAAqB;AAAA,MACrB,MAAM;AAAA,QACJ,oCAAoC;AAAA,QACpC,yCAAyC;AAAA,QACzC,yCAAyC;AAAA,QACzC,0CAA0C;AAAA,QAC1C,6BAA6B;AAAA,QAC7B,kCAAkC;AAAA,QAClC,kCAAkC;AAAA,QAClC,mCAAmC;AAAA,MACrC;AAAA,MACA,SAAS,CAAC,cAAc,MAAM,cAAc;AAAA,MAC5C,YAAY;AAAA,IACd,CAAC;AAAA,EACH,CAAC,GAAG,MAAM;AAAA,IACR,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,IACR,CAAC;AAAA,IACD,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,IACD,gBAAgB,CAAC;AAAA,MACf,MAAM;AAAA,IACR,CAAC;AAAA,IACD,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,IACR,CAAC;AAAA,IACD,SAAS,CAAC;AAAA,MACR,MAAM;AAAA,IACR,CAAC;AAAA,IACD,QAAQ,CAAC;AAAA,MACP,MAAM;AAAA,IACR,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,IACR,CAAC;AAAA,IACD,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AAMH,IAAM,4BAAN,MAAM,0BAAyB;AAAA,EAC7B,IAAI,eAAe;AACjB,WAAO,KAAK,aAAa,CAAC,KAAK,aAAa,OAAO;AAAA,EACrD;AAAA,EACA,IAAI,eAAe;AACjB,WAAO,KAAK,YAAY,KAAK,cAAc;AAAA,EAC7C;AAAA,EACA,IAAI,iBAAiB;AACnB,WAAO,KAAK,cAAc,CAAC,KAAK;AAAA,EAClC;AAAA,EACA,IAAI,kBAAkB;AACpB,WAAO,CAAC,KAAK,cAAc,CAAC,KAAK;AAAA,EACnC;AAAA,EACA,YAAY,KAAK;AACf,SAAK,MAAM;AACX,SAAK,eAAe;AACpB,SAAK,aAAa;AAElB,SAAK,gBAAgB;AAAA,EACvB;AAAA,EACA,YAAY,SAAS;AACnB,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACF,IAAI;AACJ,QAAI,iBAAiB,cAAc;AACjC,WAAK,IAAI,aAAa;AAAA,IACxB;AAAA,EACF;AAyDF;AAvDI,0BAAK,OAAO,SAAS,iCAAiC,GAAG;AACvD,SAAO,KAAK,KAAK,2BAA6B,kBAAqB,iBAAiB,CAAC;AACvF;AAGA,0BAAK,OAAyB,kBAAkB;AAAA,EAC9C,MAAM;AAAA,EACN,WAAW,CAAC,CAAC,oBAAoB,CAAC;AAAA,EAClC,UAAU;AAAA,EACV,cAAc,SAAS,sCAAsC,IAAI,KAAK;AACpE,QAAI,KAAK,GAAG;AACV,MAAG,YAAY,SAAS,IAAI,KAAK,EAAE,aAAa,IAAI,YAAY,EAAE,gBAAgB,IAAI,YAAY;AAClG,MAAG,YAAY,aAAa,IAAI,YAAY,EAAE,wCAAwC,IAAI,UAAU,EAAE,6CAA6C,IAAI,cAAc,IAAI,cAAc,EAAE,8CAA8C,IAAI,cAAc,IAAI,eAAe,EAAE,iCAAiC,IAAI,cAAc,IAAI,UAAU,EAAE,iCAAiC,CAAC,IAAI,UAAU,EAAE,sCAAsC,CAAC,IAAI,cAAc,IAAI,cAAc,EAAE,uCAAuC,CAAC,IAAI,cAAc,IAAI,eAAe,EAAE,0BAA0B,CAAC,IAAI,cAAc,IAAI,UAAU;AAAA,IAC5lB;AAAA,EACF;AAAA,EACA,QAAQ;AAAA,IACN,aAAa;AAAA,IACb,cAAc;AAAA,IACd,WAAW;AAAA,IACX,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,MAAM;AAAA,IACN,OAAO;AAAA,IACP,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,eAAe;AAAA,IACf,cAAc;AAAA,EAChB;AAAA,EACA,YAAY;AAAA,EACZ,UAAU,CAAI,sBAAyB,mBAAmB;AAAA,EAC1D,OAAO;AAAA,EACP,MAAM;AAAA,EACN,QAAQ,CAAC,CAAC,GAAG,oBAAoB,yBAAyB,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,GAAG,gBAAgB,SAAS,GAAG,MAAM,GAAG,CAAC,GAAG,uBAAuB,wBAAwB,yBAAyB,2BAA2B,oBAAoB,GAAG,MAAM,GAAG,CAAC,GAAG,kBAAkB,GAAG,WAAW,GAAG,CAAC,WAAW,IAAI,GAAG,UAAU,GAAG,MAAM,GAAG,CAAC,WAAW,IAAI,GAAG,QAAQ,GAAG,CAAC,GAAG,gBAAgB,OAAO,CAAC;AAAA,EACpY,UAAU,SAAS,kCAAkC,IAAI,KAAK;AAC5D,QAAI,KAAK,GAAG;AACV,MAAG,WAAW,GAAG,iDAAiD,GAAG,GAAG,eAAe,CAAC,EAAE,GAAG,kDAAkD,GAAG,GAAG,gBAAgB,CAAC,EAAE,GAAG,4DAA4D,GAAG,GAAG,0BAA0B,CAAC;AAAA,IAC1Q;AACA,QAAI,KAAK,GAAG;AACV,MAAG,WAAW,oBAAoB,IAAI,YAAY,EAAE,2BAA8B,gBAAgB,GAAG,KAAK,IAAI,SAAS,IAAI,QAAQ,MAAM,CAAC;AAC1I,MAAG,UAAU,CAAC;AACd,MAAG,WAAW,QAAQ,CAAC,IAAI,YAAY;AACvC,MAAG,UAAU,CAAC;AACd,MAAG,WAAW,QAAQ,IAAI,aAAa;AAAA,IACzC;AAAA,EACF;AAAA,EACA,cAAc,CAAC,kBAAkB,MAAM,cAAiB,iBAAiB,mBAAwB,iBAAiB,4BAA4B;AAAA,EAC9I,eAAe;AAAA,EACf,iBAAiB;AACnB,CAAC;AAnFL,IAAM,2BAAN;AAAA,CAsFC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,0BAA0B,CAAC;AAAA,IACjG,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA+BV,iBAAiB,wBAAwB;AAAA,MACzC,qBAAqB;AAAA,MACrB,MAAM;AAAA,QACJ,gBAAgB;AAAA,QAChB,oBAAoB;AAAA,QACpB,uBAAuB;AAAA,QACvB,qBAAqB;AAAA,QACrB,gDAAgD;AAAA,QAChD,qDAAqD;AAAA,QACrD,sDAAsD;AAAA,QACtD,yCAAyC;AAAA,QACzC,yCAAyC;AAAA,QACzC,8CAA8C;AAAA,QAC9C,+CAA+C;AAAA,QAC/C,kCAAkC;AAAA,MACpC;AAAA,MACA,SAAS,CAAC,kBAAkB,MAAM,cAAc,mBAAmB,4BAA4B;AAAA,MAC/F,YAAY;AAAA,IACd,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAS;AAAA,EACX,CAAC,GAAG;AAAA,IACF,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,IACR,CAAC;AAAA,IACD,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,IACR,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,IACR,CAAC;AAAA,IACD,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,IACR,CAAC;AAAA,IACD,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,IACD,SAAS,CAAC;AAAA,MACR,MAAM;AAAA,IACR,CAAC;AAAA,IACD,MAAM,CAAC;AAAA,MACL,MAAM;AAAA,IACR,CAAC;AAAA,IACD,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,IACR,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,IACR,CAAC;AAAA,IACD,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,IACD,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,IACR,CAAC;AAAA,IACD,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,IACD,QAAQ,CAAC;AAAA,MACP,MAAM;AAAA,IACR,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,IACR,CAAC;AAAA,IACD,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AACH,IAAM,8BAAN,MAAM,4BAA2B;AAAA;AAAA;AAAA;AAAA,EAI/B,IAAI,eAAe;AAEjB,WAAO,KAAK,iBAAiB,KAAK,mBAAmB,CAAC,KAAK,aAAa,CAAC,KAAK,cAAc,KAAK,UAAU,SAAS;AAAA,EACtH;AAAA,EACA,IAAI,iBAAiB;AACnB,WAAO,KAAK,cAAc,CAAC,KAAK;AAAA,EAClC;AAAA,EACA,IAAI,kBAAkB;AACpB,WAAO,CAAC,KAAK,cAAc,CAAC,KAAK;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,YAAY,OAAO;AACjB,UAAM,eAAe;AACrB,QAAI,CAAC,KAAK,aAAa,CAAC,KAAK,QAAQ;AAEnC,UAAI,KAAK,eAAe,KAAK,WAAW,SAAS,WAAW,KAAK,CAAC,KAAK,YAAY;AACjF,aAAK,WAAW,YAAY;AAAA,MAC9B;AACA,WAAK,WAAW,YAAY,CAAC,KAAK,UAAU;AAAA,IAC9C;AACA,SAAK,cAAc,oBAAoB,KAAK,UAAU;AACtD,UAAM,YAAY,KAAK,cAAc,YAAY,UAAU,KAAK,YAAY,KAAK;AACjF,SAAK,eAAe,KAAK,SAAS;AAAA,EACpC;AAAA,EACA,YAAY,OAAO;AACjB,UAAM,eAAe;AACrB,QAAI,KAAK,gBAAgB,CAAC,KAAK,YAAY;AACzC,WAAK,WAAW,aAAa,CAAC,KAAK,WAAW;AAAA,IAChD;AACA,SAAK,cAAc,oBAAoB,KAAK,UAAU;AACtD,UAAM,YAAY,KAAK,cAAc,YAAY,SAAS,KAAK,YAAY,KAAK;AAChF,SAAK,QAAQ,KAAK,SAAS;AAAA,EAC7B;AAAA,EACA,SAAS,OAAO;AACd,UAAM,eAAe;AACrB,UAAM,YAAY,KAAK,cAAc,YAAY,YAAY,KAAK,YAAY,KAAK;AACnF,SAAK,WAAW,KAAK,SAAS;AAAA,EAChC;AAAA,EACA,YAAY,OAAO;AACjB,UAAM,eAAe;AACrB,UAAM,YAAY,KAAK,cAAc,YAAY,eAAe,KAAK,YAAY,KAAK;AACtF,SAAK,cAAc,KAAK,SAAS;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,cAAc,OAAO;AACnB,UAAM,eAAe;AAErB,QAAI,KAAK,cAAc,KAAK,mBAAmB;AAC7C;AAAA,IACF;AACA,SAAK,WAAW,YAAY,CAAC,KAAK,WAAW;AAC7C,SAAK,WAAW,gBAAgB;AAChC,SAAK,cAAc,mBAAmB,KAAK,UAAU;AACrD,UAAM,YAAY,KAAK,cAAc,YAAY,SAAS,KAAK,YAAY,KAAK;AAChF,SAAK,iBAAiB,KAAK,SAAS;AAAA,EACtC;AAAA,EACA,iBAAiB;AACf,UAAM,YAAY,CAAC,qBAAqB,wBAAwB,aAAa,aAAa;AAC1F,cAAU,QAAQ,OAAK;AACrB,WAAK,SAAS,YAAY,KAAK,WAAW,eAAe,CAAC;AAAA,IAC5D,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,gBAAgB,GAAG;AACjB,QAAI;AAGF,QAAE,aAAa,QAAQ,cAAc,KAAK,WAAW,GAAG;AAAA,IAC1D,SAAS,OAAO;AAAA,IAEhB;AACA,SAAK,cAAc,gBAAgB,KAAK,UAAU;AAClD,SAAK,cAAc,KAAK,WAAW;AACnC,UAAM,YAAY,KAAK,cAAc,YAAY,aAAa,KAAK,YAAY,CAAC;AAChF,SAAK,cAAc,KAAK,SAAS;AAAA,EACnC;AAAA,EACA,gBAAgB,GAAG;AACjB,MAAE,eAAe;AAEjB,SAAK,gBAAgB,KAAK,WAAW,QAAQ,KAAK,cAAc,gBAAgB,GAAG;AACnF,SAAK,gBAAgB,CAAC;AACtB,SAAK,OAAO,IAAI,MAAM;AACpB,YAAM,YAAY,KAAK,cAAc,YAAY,aAAa,KAAK,YAAY,CAAC;AAChF,WAAK,cAAc,KAAK,SAAS;AAAA,IACnC,CAAC;AAAA,EACH;AAAA,EACA,eAAe,GAAG;AAChB,MAAE,eAAe;AACjB,UAAM,eAAe,KAAK,cAAc,iBAAiB,CAAC;AAC1D,QAAI,KAAK,YAAY,cAAc;AACjC,WAAK,eAAe;AACpB,WAAK,gBAAgB,YAAY;AAEjC,UAAI,EAAE,KAAK,YAAY,KAAK,KAAK,SAAS;AACxC,aAAK,SAAS,SAAS,KAAK,WAAW,eAAe,KAAK,aAAa,KAAK,OAAO,CAAC;AACrF,aAAK,SAAS,SAAS,KAAK,WAAW,eAAe,aAAa;AAAA,MACrE;AAAA,IACF;AACA,UAAM,YAAY,KAAK,cAAc,YAAY,YAAY,KAAK,YAAY,CAAC;AAC/E,SAAK,aAAa,KAAK,SAAS;AAAA,EAClC;AAAA,EACA,gBAAgB,GAAG;AACjB,MAAE,eAAe;AACjB,SAAK,gBAAgB,CAAC;AACtB,SAAK,eAAe;AACpB,UAAM,YAAY,KAAK,cAAc,YAAY,aAAa,KAAK,YAAY,CAAC;AAChF,SAAK,cAAc,KAAK,SAAS;AAAA,EACnC;AAAA,EACA,eAAe,GAAG;AAChB,MAAE,eAAe;AACjB,MAAE,gBAAgB;AAClB,SAAK,OAAO,IAAI,MAAM;AACpB,WAAK,gBAAgB;AACrB,WAAK,eAAe;AACpB,YAAM,OAAO,KAAK,cAAc,gBAAgB;AAChD,UAAI,CAAC,QAAQ,QAAQ,KAAK,QAAQ,KAAK,WAAW,OAAO,KAAK,YAAY,KAAK,KAAK,QAAQ;AAC1F;AAAA,MACF;AAEA,YAAM,YAAY,KAAK,cAAc,YAAY,QAAQ,KAAK,YAAY,CAAC;AAC3E,YAAM,eAAe,KAAK,cAAc,YAAY,WAAW,KAAK,YAAY,CAAC;AACjF,UAAI,KAAK,cAAc;AACrB,aAAK,aAAa;AAAA,UAChB,UAAU,KAAK,cAAc,gBAAgB;AAAA,UAC7C,MAAM,KAAK;AAAA,UACX,KAAK,KAAK;AAAA,QACZ,CAAC,EAAE,UAAU,aAAW;AACtB,cAAI,SAAS;AACX,iBAAK,cAAc,aAAa,KAAK,YAAY,KAAK,OAAO;AAAA,UAC/D;AACA,eAAK,SAAS,KAAK,SAAS;AAC5B,eAAK,YAAY,KAAK,YAAY;AAAA,QACpC,CAAC;AAAA,MACH,WAAW,KAAK,YAAY;AAC1B,aAAK,cAAc,aAAa,KAAK,YAAY,KAAK,OAAO;AAC7D,aAAK,SAAS,KAAK,SAAS;AAAA,MAC9B;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,cAAc,GAAG;AACf,MAAE,eAAe;AACjB,SAAK,OAAO,IAAI,MAAM;AAEpB,UAAI,CAAC,KAAK,cAAc;AAEtB,aAAK,cAAc;AACnB,cAAM,YAAY,KAAK,cAAc,YAAY,WAAW,KAAK,YAAY,CAAC;AAC9E,aAAK,YAAY,KAAK,SAAS;AAAA,MACjC,OAAO;AAEL,aAAK,cAAc;AACnB,aAAK,aAAa;AAAA,MACpB;AAAA,IACF,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA,EAIA,gBAAgB;AACd,SAAK,OAAO,kBAAkB,MAAM;AAClC,UAAI,KAAK,aAAa;AACpB,cAAM,gBAAgB,KAAK,WAAW;AACtC,aAAK,WAAW,IAAI,QAAQ;AAC5B,kBAAU,eAAe,WAAW,EAAE,KAAK,UAAU,KAAK,QAAQ,CAAC,EAAE,UAAU,OAAK,KAAK,gBAAgB,CAAC,CAAC;AAC3G,kBAAU,eAAe,WAAW,EAAE,KAAK,UAAU,KAAK,QAAQ,CAAC,EAAE,UAAU,OAAK,KAAK,gBAAgB,CAAC,CAAC;AAC3G,kBAAU,eAAe,UAAU,EAAE,KAAK,UAAU,KAAK,QAAQ,CAAC,EAAE,UAAU,OAAK,KAAK,eAAe,CAAC,CAAC;AACzG,kBAAU,eAAe,WAAW,EAAE,KAAK,UAAU,KAAK,QAAQ,CAAC,EAAE,UAAU,OAAK,KAAK,gBAAgB,CAAC,CAAC;AAC3G,kBAAU,eAAe,MAAM,EAAE,KAAK,UAAU,KAAK,QAAQ,CAAC,EAAE,UAAU,OAAK,KAAK,eAAe,CAAC,CAAC;AACrG,kBAAU,eAAe,SAAS,EAAE,KAAK,UAAU,KAAK,QAAQ,CAAC,EAAE,UAAU,OAAK,KAAK,cAAc,CAAC,CAAC;AAAA,MACzG,OAAO;AACL,aAAK,SAAS,KAAK,IAAI;AACvB,aAAK,SAAS,SAAS;AAAA,MACzB;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,eAAe;AACb,SAAK,IAAI,aAAa;AAAA,EACxB;AAAA,EACA,YAAY,eAAe,QAAQ,UAAU,YAAY,KAAK,aAAa;AACzE,SAAK,gBAAgB;AACrB,SAAK,SAAS;AACd,SAAK,WAAW;AAChB,SAAK,aAAa;AAClB,SAAK,MAAM;AACX,SAAK,cAAc;AAInB,SAAK,OAAO;AACZ,SAAK,QAAQ;AACb,SAAK,YAAY;AACjB,SAAK,aAAa;AAClB,SAAK,aAAa;AAClB,SAAK,YAAY;AACjB,SAAK,UAAU,CAAC;AAChB,SAAK,QAAQ,CAAC;AACd,SAAK,kBAAkB;AACvB,SAAK,gBAAgB;AACrB,SAAK,eAAe;AACpB,SAAK,aAAa;AAClB,SAAK,iBAAiB;AACtB,SAAK,gBAAgB;AACrB,SAAK,cAAc;AACnB,SAAK,UAAU,IAAI,aAAa;AAChC,SAAK,aAAa,IAAI,aAAa;AACnC,SAAK,gBAAgB,IAAI,aAAa;AACtC,SAAK,mBAAmB,IAAI,aAAa;AACzC,SAAK,iBAAiB,IAAI,aAAa;AACvC,SAAK,gBAAgB,IAAI,aAAa;AACtC,SAAK,gBAAgB,IAAI,aAAa;AACtC,SAAK,eAAe,IAAI,aAAa;AACrC,SAAK,gBAAgB,IAAI,aAAa;AACtC,SAAK,WAAW,IAAI,aAAa;AACjC,SAAK,cAAc,IAAI,aAAa;AAIpC,SAAK,WAAW,IAAI,QAAQ;AAC5B,SAAK,UAAU;AACf,SAAK,eAAe;AAAA,MAClB,GAAG;AAAA,MACH,GAAG;AAAA,MACH,MAAM;AAAA,IACR;AACA,SAAK,cAAc;AACnB,SAAK,gBAAgB;AAAA,EACvB;AAAA,EACA,WAAW;AACT,SAAK,WAAW,YAAY;AAC5B,SAAK,OAAO,kBAAkB,MAAM;AAClC,gBAAU,KAAK,WAAW,eAAe,WAAW,EAAE,KAAK,UAAU,KAAK,QAAQ,CAAC,EAAE,UAAU,WAAS;AACtG,YAAI,KAAK,cAAc;AACrB,gBAAM,eAAe;AAAA,QACvB;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAAA,EACA,YAAY,SAAS;AACnB,UAAM;AAAA,MACJ;AAAA,IACF,IAAI;AACJ,QAAI,aAAa;AACf,WAAK,cAAc;AAAA,IACrB;AAAA,EACF;AAAA,EACA,cAAc;AACZ,SAAK,SAAS,KAAK,IAAI;AACvB,SAAK,SAAS,SAAS;AAAA,EACzB;AAAA,EACA,gBAAgB,cAAc;AAC5B,SAAK,OAAO,IAAI,MAAM;AACpB,WAAK,gBAAgB,iBAAiB;AACtC,UAAI,KAAK,WAAW,QAAQ,KAAK,cAAc,gBAAgB,GAAG,OAAO,iBAAiB,KAAK,KAAK,QAAQ;AAC1G;AAAA,MACF;AACA,WAAK,UAAU;AACf,WAAK,IAAI,aAAa;AAAA,IACxB,CAAC;AAAA,EACH;AAiGF;AA/FI,4BAAK,OAAO,SAAS,mCAAmC,GAAG;AACzD,SAAO,KAAK,KAAK,6BAA+B,kBAAuB,iBAAiB,GAAM,kBAAqB,MAAM,GAAM,kBAAqB,SAAS,GAAM,kBAAqB,UAAU,GAAM,kBAAqB,iBAAiB,GAAM,kBAAuB,wBAAwB,CAAC,CAAC;AACvS;AAGA,4BAAK,OAAyB,kBAAkB;AAAA,EAC9C,MAAM;AAAA,EACN,WAAW,CAAC,CAAC,gBAAgB,WAAW,EAAE,CAAC;AAAA,EAC3C,UAAU;AAAA,EACV,cAAc,SAAS,wCAAwC,IAAI,KAAK;AACtE,QAAI,KAAK,GAAG;AACV,MAAG,YAAY,WAAW,IAAI,YAAY;AAC1C,MAAG,YAAY,4BAA4B,IAAI,YAAY,EAAE,qCAAqC,IAAI,gBAAgB,IAAI,UAAU,EAAE,0CAA0C,IAAI,gBAAgB,IAAI,cAAc,EAAE,2CAA2C,IAAI,gBAAgB,IAAI,eAAe,EAAE,6CAA6C,IAAI,gBAAgB,IAAI,SAAS,EAAE,mDAAmD,IAAI,gBAAgB,IAAI,aAAa,EAAE,qCAAqC,IAAI,gBAAgB,IAAI,UAAU,EAAE,oCAAoC,IAAI,gBAAgB,IAAI,SAAS,EAAE,qBAAqB,CAAC,IAAI,YAAY,EAAE,8BAA8B,CAAC,IAAI,gBAAgB,IAAI,UAAU,EAAE,mCAAmC,CAAC,IAAI,gBAAgB,IAAI,cAAc,EAAE,oCAAoC,CAAC,IAAI,gBAAgB,IAAI,eAAe,EAAE,sCAAsC,CAAC,IAAI,gBAAgB,IAAI,SAAS,EAAE,4CAA4C,CAAC,IAAI,gBAAgB,IAAI,aAAa,EAAE,8BAA8B,CAAC,IAAI,gBAAgB,IAAI,UAAU,EAAE,6BAA6B,CAAC,IAAI,gBAAgB,IAAI,SAAS,EAAE,YAAY,IAAI,gBAAgB,IAAI,WAAW,GAAG;AAAA,IACjsC;AAAA,EACF;AAAA,EACA,QAAQ;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,eAAe;AAAA,IACf,mBAAmB;AAAA,IACnB,cAAc;AAAA,IACd,SAAS;AAAA,IACT,SAAS;AAAA,IACT,OAAO;AAAA,IACP,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,aAAa;AAAA,IACb,aAAa;AAAA,IACb,iBAAiB;AAAA,IACjB,eAAe;AAAA,IACf,cAAc;AAAA,IACd,YAAY;AAAA,IACZ,gBAAgB;AAAA,IAChB,gBAAgB;AAAA,IAChB,cAAc;AAAA,IACd,eAAe;AAAA,IACf,aAAa;AAAA,EACf;AAAA,EACA,SAAS;AAAA,IACP,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,eAAe;AAAA,IACf,kBAAkB;AAAA,IAClB,gBAAgB;AAAA,IAChB,eAAe;AAAA,IACf,eAAe;AAAA,IACf,cAAc;AAAA,IACd,eAAe;AAAA,IACf,UAAU;AAAA,IACV,aAAa;AAAA,EACf;AAAA,EACA,UAAU,CAAC,mBAAmB;AAAA,EAC9B,YAAY;AAAA,EACZ,UAAU,CAAI,sBAAyB,mBAAmB;AAAA,EAC1D,OAAO;AAAA,EACP,OAAO;AAAA,EACP,MAAM;AAAA,EACN,QAAQ,CAAC,CAAC,GAAG,eAAe,gBAAgB,aAAa,SAAS,GAAG,CAAC,GAAG,gBAAgB,cAAc,kBAAkB,gBAAgB,WAAW,UAAU,cAAc,aAAa,SAAS,GAAG,MAAM,GAAG,CAAC,WAAW,IAAI,GAAG,gBAAgB,aAAa,iBAAiB,cAAc,qBAAqB,SAAS,GAAG,MAAM,GAAG,CAAC,GAAG,QAAQ,SAAS,aAAa,cAAc,cAAc,aAAa,cAAc,UAAU,eAAe,gBAAgB,aAAa,YAAY,cAAc,WAAW,iBAAiB,gBAAgB,YAAY,SAAS,aAAa,GAAG,CAAC,GAAG,gBAAgB,cAAc,kBAAkB,gBAAgB,WAAW,UAAU,cAAc,aAAa,OAAO,GAAG,CAAC,WAAW,IAAI,GAAG,gBAAgB,aAAa,iBAAiB,cAAc,qBAAqB,OAAO,CAAC;AAAA,EAC3yB,UAAU,SAAS,oCAAoC,IAAI,KAAK;AAC9D,QAAI,KAAK,GAAG;AACV,MAAG,UAAU,GAAG,kBAAkB,CAAC;AACnC,MAAG,WAAW,GAAG,6DAA6D,GAAG,GAAG,yBAAyB,CAAC,EAAE,GAAG,6DAA6D,GAAG,GAAG,yBAAyB,CAAC;AAChN,MAAG,eAAe,GAAG,sBAAsB,CAAC;AAC5C,MAAG,WAAW,YAAY,SAAS,2EAA2E,QAAQ;AACpH,eAAO,IAAI,SAAS,MAAM;AAAA,MAC5B,CAAC,EAAE,SAAS,SAAS,wEAAwE,QAAQ;AACnG,eAAO,IAAI,YAAY,MAAM;AAAA,MAC/B,CAAC,EAAE,eAAe,SAAS,8EAA8E,QAAQ;AAC/G,eAAO,IAAI,YAAY,MAAM;AAAA,MAC/B,CAAC;AACD,MAAG,aAAa;AAAA,IAClB;AACA,QAAI,KAAK,GAAG;AACV,MAAG,WAAW,eAAe,IAAI,WAAW,KAAK,EAAE,gBAAgB,IAAI,YAAY,EAAE,aAAa,IAAI,OAAO,EAAE,WAAW,IAAI,KAAK;AACnI,MAAG,UAAU,CAAC;AACd,MAAG,WAAW,QAAQ,IAAI,YAAY;AACtC,MAAG,UAAU,CAAC;AACd,MAAG,WAAW,QAAQ,IAAI,WAAW;AACrC,MAAG,UAAU,CAAC;AACd,MAAG,WAAW,QAAQ,IAAI,IAAI,EAAE,SAAS,IAAI,KAAK,EAAE,aAAa,IAAI,SAAS,EAAE,cAAc,IAAI,UAAU,EAAE,cAAc,IAAI,UAAU,EAAE,aAAa,IAAI,SAAS,EAAE,cAAc,IAAI,UAAU,EAAE,UAAU,IAAI,MAAM,EAAE,eAAe,IAAI,aAAa,EAAE,gBAAgB,IAAI,cAAc,EAAE,aAAa,IAAI,WAAW,EAAE,YAAY,IAAI,UAAU,EAAE,cAAc,IAAI,YAAY,EAAE,WAAW,IAAI,UAAU,EAAE,iBAAiB,IAAI,aAAa,EAAE,gBAAgB,IAAI,OAAO;AAAA,IACxd;AAAA,EACF;AAAA,EACA,cAAc,CAAC,uBAAuB,6BAA6B,MAAM,oCAAoC,wBAAwB;AAAA,EACrI,eAAe;AAAA,EACf,iBAAiB;AACnB,CAAC;AAjXL,IAAM,6BAAN;AAoXA,WAAW,CAAC,aAAa,CAAC,GAAG,2BAA2B,WAAW,cAAc,MAAM;AACvF,WAAW,CAAC,aAAa,CAAC,GAAG,2BAA2B,WAAW,gBAAgB,MAAM;AACzF,WAAW,CAAC,aAAa,CAAC,GAAG,2BAA2B,WAAW,eAAe,MAAM;AACxF,WAAW,CAAC,aAAa,CAAC,GAAG,2BAA2B,WAAW,eAAe,MAAM;AACxF,WAAW,CAAC,aAAa,CAAC,GAAG,2BAA2B,WAAW,mBAAmB,MAAM;AAC5F,WAAW,CAAC,aAAa,CAAC,GAAG,2BAA2B,WAAW,iBAAiB,MAAM;AAC1F,WAAW,CAAC,aAAa,CAAC,GAAG,2BAA2B,WAAW,gBAAgB,MAAM;AACzF,WAAW,CAAC,aAAa,CAAC,GAAG,2BAA2B,WAAW,cAAc,MAAM;AAAA,CACtF,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,4BAA4B,CAAC;AAAA,IACnG,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAmDV,iBAAiB,wBAAwB;AAAA,MACzC,qBAAqB;AAAA,MACrB,MAAM;AAAA,QACJ,oCAAoC;AAAA,QACpC,6CAA6C;AAAA,QAC7C,kDAAkD;AAAA,QAClD,mDAAmD;AAAA,QACnD,qDAAqD;AAAA,QACrD,2DAA2D;AAAA,QAC3D,6CAA6C;AAAA,QAC7C,4CAA4C;AAAA,QAC5C,6BAA6B;AAAA,QAC7B,sCAAsC;AAAA,QACtC,2CAA2C;AAAA,QAC3C,4CAA4C;AAAA,QAC5C,8CAA8C;AAAA,QAC9C,oDAAoD;AAAA,QACpD,sCAAsC;AAAA,QACtC,qCAAqC;AAAA,QACrC,oBAAoB;AAAA,QACpB,mBAAmB;AAAA,MACrB;AAAA,MACA,SAAS,CAAC,uBAAuB,6BAA6B,MAAM,oCAAoC,wBAAwB;AAAA,MAChI,YAAY;AAAA,IACd,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAW;AAAA,EACb,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAW;AAAA,IACX,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC,GAAG;AAAA,IACF,MAAM,CAAC;AAAA,MACL,MAAM;AAAA,IACR,CAAC;AAAA,IACD,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,IACR,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,IACR,CAAC;AAAA,IACD,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,IACD,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,IACR,CAAC;AAAA,IACD,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,IACD,QAAQ,CAAC;AAAA,MACP,MAAM;AAAA,IACR,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,IACR,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,IACR,CAAC;AAAA,IACD,mBAAmB,CAAC;AAAA,MAClB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,IACR,CAAC;AAAA,IACD,SAAS,CAAC;AAAA,MACR,MAAM;AAAA,IACR,CAAC;AAAA,IACD,SAAS,CAAC;AAAA,MACR,MAAM;AAAA,IACR,CAAC;AAAA,IACD,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,IACR,CAAC;AAAA,IACD,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,IACD,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,IACD,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,IACR,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,IACR,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,IACR,CAAC;AAAA,IACD,iBAAiB,CAAC;AAAA,MAChB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,IACR,CAAC;AAAA,IACD,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,IACR,CAAC;AAAA,IACD,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,IACD,gBAAgB,CAAC;AAAA,MACf,MAAM;AAAA,IACR,CAAC;AAAA,IACD,gBAAgB,CAAC;AAAA,MACf,MAAM;AAAA,IACR,CAAC;AAAA,IACD,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,IACR,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,IACR,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,IACR,CAAC;AAAA,IACD,SAAS,CAAC;AAAA,MACR,MAAM;AAAA,IACR,CAAC;AAAA,IACD,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,IACR,CAAC;AAAA,IACD,kBAAkB,CAAC;AAAA,MACjB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,gBAAgB,CAAC;AAAA,MACf,MAAM;AAAA,IACR,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,IACR,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,IACR,CAAC;AAAA,IACD,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,IACR,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,IACR,CAAC;AAAA,IACD,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,IACR,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AAMH,IAAM,iBAAN,MAAM,uBAAsB,kBAAkB;AAAA,EAC5C,cAAc;AACZ,UAAM;AAAA,EACR;AAYF;AAVI,eAAK,OAAO,SAAS,sBAAsB,GAAG;AAC5C,SAAO,KAAK,KAAK,gBAAe;AAClC;AAGA,eAAK,QAA0B,mBAAmB;AAAA,EAChD,OAAO;AAAA,EACP,SAAS,eAAc;AACzB,CAAC;AAbL,IAAM,gBAAN;AAAA,CAgBC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,eAAe,CAAC;AAAA,IACtF,MAAM;AAAA,EACR,CAAC,GAAG,MAAM,CAAC,GAAG,IAAI;AACpB,GAAG;AACH,SAAS,uBAAuB;AAC9B,QAAM,qBAAqB,OAAO,+BAA+B;AAAA,IAC/D,UAAU;AAAA,IACV,UAAU;AAAA,EACZ,CAAC;AACD,QAAM,cAAc,OAAO,aAAa;AACxC,SAAO,sBAAsB;AAC/B;AACA,IAAM,wBAAwB;AAC9B,IAAM,mBAAN,MAAM,yBAAwB,WAAW;AAAA,EACvC,WAAW,OAAO;AAChB,SAAK,aAAa,KAAK;AAAA,EACzB;AAAA,EACA,iBAAiB,IAAI;AACnB,SAAK,WAAW;AAAA,EAClB;AAAA,EACA,kBAAkB,IAAI;AACpB,SAAK,YAAY;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,qBAAqB,SAAS;AAC5B,QAAI,yBAAyB;AAC7B,QAAI,YAAY;AAChB,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AACJ,QAAI,aAAa;AACf,+BAAyB;AACzB,kBAAY,KAAK;AAAA,IACnB;AACA,QAAI,YAAY;AACd,WAAK,cAAc,aAAa,KAAK;AAAA,IACvC;AACA,QAAI,iBAAiB;AACnB,WAAK,cAAc,kBAAkB,KAAK;AAAA,IAC5C;AACA,QAAI,QAAQ;AACV,WAAK,aAAa,KAAK,MAAM;AAAA,IAC/B;AACA,QAAI,eAAe;AACjB,WAAK,kBAAkB,KAAK,aAAa;AAAA,IAC3C;AACA,QAAI,iBAAiB;AACnB,WAAK,kBAAkB,IAAI;AAAA,IAC7B;AACA,QAAI,kBAAkB,aAAa;AACjC,+BAAyB;AACzB,WAAK,mBAAmB,aAAa,KAAK,cAAc;AAAA,IAC1D;AACA,QAAI,gBAAgB;AAClB,WAAK,mBAAmB,KAAK,gBAAgB,KAAK,UAAU;AAAA,IAC9D;AACA,QAAI,eAAe;AACjB,UAAI,EAAE,cAAc,eAAe,CAAC,KAAK,gBAAgB;AACvD,iCAAyB;AACzB,aAAK,kBAAkB,cAAc,cAAc,KAAK,YAAY;AACpE,aAAK,oBAAoB,KAAK,KAAK,cAAc,YAAY,UAAU,MAAM,IAAI,CAAC;AAAA,MACpF;AAAA,IACF;AAEA,UAAM,sBAAsB,KAAK,oBAAoB,EAAE,IAAI,OAAK,EAAE,GAAG;AACrE,UAAM,kBAAkB,yBAAyB,aAAa,KAAK,iBAAiB;AACpF,SAAK,mBAAmB,KAAK,cAAc,WAAW,eAAe;AAAA,EACvE;AAAA,EACA,mBAAmB,GAAG,MAAM;AAC1B,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,aAAa,OAAO;AAClB,QAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,YAAM,OAAO,KAAK,gBAAgB,KAAK;AACvC,WAAK,cAAc,SAAS,IAAI;AAAA,IAClC;AAAA,EACF;AAAA,EACA,mBAAmB,MAAM,aAAa,CAAC,GAAG;AACxC,SAAK,cAAc,gBAAgB,MAAM,UAAU;AAAA,EACrD;AAAA,EACA,kBAAkB,MAAM;AACtB,SAAK,cAAc,aAAa,MAAM,KAAK,eAAe;AAAA,EAC5D;AAAA,EACA,mBAAmB,OAAO,CAAC,GAAG;AAC5B,SAAK,cAAc,oBAAoB,IAAI;AAAA,EAC7C;AAAA,EACA,mBAAmB,MAAM,SAAS;AAChC,SAAK,cAAc,oBAAoB,MAAM,OAAO;AAAA,EACtD;AAAA,EACA,kBAAkB,OAAO,YAAY;AACnC,UAAM,WAAW,gBAAgB,KAAK,cAAc,WAAW,IAAI,EAAE,IAAI,OAAK,EAAE,IAAI;AACpF,UAAM,iBAAiB,UAAQ;AAC7B,UAAI,YAAY;AACd,eAAO,WAAW,KAAK,MAAM;AAAA,MAC/B;AACA,aAAO,CAAC,SAAS,CAAC,KAAK,MAAM,YAAY,EAAE,SAAS,MAAM,YAAY,CAAC,IAAI,QAAQ;AAAA,IACrF;AACA,aAAS,QAAQ,OAAK;AACpB,QAAE,YAAY,eAAe,CAAC;AAC9B,QAAE,UAAU,CAAC,EAAE;AACf,UAAI,CAAC,EAAE,WAAW;AAChB,UAAE,YAAY,KAAK;AACnB,aAAK,cAAc,oBAAoB,CAAC;AAAA,MAC1C,OAAO;AAEL,aAAK,cAAc,4BAA4B,CAAC;AAAA,MAClD;AACA,WAAK,cAAc,mBAAmB,CAAC;AAAA,IACzC,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,oBAAoB,OAAO;AACzB,UAAM,OAAO,MAAM;AACnB,YAAQ,MAAM,WAAW;AAAA,MACvB,KAAK;AACH,aAAK,WAAW;AAChB,aAAK,eAAe,KAAK,KAAK;AAC9B;AAAA,MACF,KAAK;AACH,aAAK,QAAQ,KAAK,KAAK;AACvB;AAAA,MACF,KAAK;AACH,aAAK,WAAW,KAAK,KAAK;AAC1B;AAAA,MACF,KAAK;AACH,aAAK,cAAc,KAAK,KAAK;AAC7B;AAAA,MACF,KAAK;AAEH,aAAK,cAAc,mBAAmB,IAAI;AAC1C,YAAI,CAAC,KAAK,iBAAiB;AACzB,eAAK,cAAc,QAAQ,IAAI;AAAA,QACjC;AAEA,cAAM,YAAY,KAAK,cAAc,YAAY,SAAS,MAAM,MAAM,KAAK;AAC3E,aAAK,iBAAiB,KAAK,SAAS;AACpC,cAAM,cAAc,KAAK,cAAc,mBAAmB;AAC1D,aAAK,oBAAoB,KAAK,WAAW;AACzC;AAAA,MACF,KAAK;AAEH,YAAI,KAAK,YAAY;AACnB,eAAK,YAAY,CAAC,KAAK,UAAU;AACjC,eAAK,WAAW;AAAA,QAClB;AACA,aAAK,cAAc,KAAK,KAAK;AAC7B;AAAA,MACF,KAAK;AACH,cAAM,eAAe,KAAK,cAAc,gBAAgB;AACxD,YAAI,gBAAgB,aAAa,QAAQ,KAAK,OAAO,CAAC,KAAK,cAAc,CAAC,KAAK,QAAQ;AACrF,eAAK,YAAY,IAAI;AACrB,eAAK,WAAW;AAAA,QAClB;AACA,aAAK,cAAc,KAAK,KAAK;AAC7B;AAAA,MACF,KAAK;AACH,aAAK,aAAa,KAAK,KAAK;AAC5B;AAAA,MACF,KAAK;AACH,aAAK,cAAc,KAAK,KAAK;AAC7B;AAAA,MACF,KAAK;AACH,aAAK,YAAY,KAAK,KAAK;AAC3B;AAAA,MACF,KAAK;AACH,aAAK,WAAW;AAChB,aAAK,SAAS,KAAK,KAAK;AACxB;AAAA,IACJ;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAIA,aAAa;AACX,SAAK,mBAAmB,KAAK,cAAc,WAAW,KAAK,oBAAoB,EAAE,IAAI,OAAK,EAAE,GAAG,CAAC;AAChG,SAAK,IAAI,aAAa;AAAA,EACxB;AAAA;AAAA,EAEA,YAAY,eAAe,iBAAiB,KAAK,gBAAgB,aAAa;AAC5E,UAAM,aAAa;AACnB,SAAK,kBAAkB;AACvB,SAAK,MAAM;AACX,SAAK,iBAAiB;AACtB,SAAK,cAAc;AACnB,SAAK,gBAAgB;AACrB,SAAK,aAAa;AAClB,SAAK,kBAAkB;AACvB,SAAK,cAAc;AACnB,SAAK,cAAc;AACnB,SAAK,eAAe;AACpB,SAAK,kBAAkB;AACvB,SAAK,eAAe;AACpB,SAAK,aAAa;AAClB,SAAK,cAAc;AACnB,SAAK,cAAc;AACnB,SAAK,cAAc;AACnB,SAAK,aAAa;AAClB,SAAK,oBAAoB;AACzB,SAAK,uBAAuB;AAC5B,SAAK,uBAAuB;AAC5B,SAAK,kBAAkB;AACvB,SAAK,SAAS,CAAC;AACf,SAAK,iBAAiB,CAAC;AACvB,SAAK,iBAAiB,CAAC;AACvB,SAAK,gBAAgB,CAAC;AACtB,SAAK,gBAAgB;AACrB,SAAK,iBAAiB,CAAC;AACvB,SAAK,aAAa;AAClB,SAAK,MAAM;AACX,SAAK,uBAAuB,IAAI,aAAa;AAC7C,SAAK,uBAAuB,IAAI,aAAa;AAC7C,SAAK,sBAAsB,IAAI,aAAa;AAC5C,SAAK,sBAAsB,IAAI,aAAa;AAC5C,SAAK,UAAU,IAAI,aAAa;AAChC,SAAK,aAAa,IAAI,aAAa;AACnC,SAAK,gBAAgB,IAAI,aAAa;AACtC,SAAK,mBAAmB,IAAI,aAAa;AACzC,SAAK,iBAAiB,IAAI,aAAa;AACvC,SAAK,gBAAgB,IAAI,aAAa;AACtC,SAAK,gBAAgB,IAAI,aAAa;AACtC,SAAK,eAAe,IAAI,aAAa;AACrC,SAAK,gBAAgB,IAAI,aAAa;AACtC,SAAK,WAAW,IAAI,aAAa;AACjC,SAAK,cAAc,IAAI,aAAa;AACpC,SAAK,eAAe;AAAA,MAClB,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,UAAU;AAAA,MACV,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,QAAQ;AAAA,IACV;AACA,SAAK,oBAAoB;AAAA,MACvB,UAAU;AAAA,MACV,eAAe;AAAA,MACf,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,UAAU;AAAA,IACZ;AACA,SAAK,WAAW,IAAI,QAAQ;AAC5B,SAAK,WAAW,MAAM;AACtB,SAAK,YAAY,MAAM;AAAA,EACzB;AAAA,EACA,WAAW;AACT,SAAK,cAAc,cAAc,KAAK,UAAU,KAAK,QAAQ,CAAC,EAAE,UAAU,UAAQ;AAChF,WAAK,iBAAiB,CAAC,CAAC,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,eAAe,SAAS,IAAI,KAAK,OAAO,OAAK,CAAC,EAAE,OAAO,IAAI;AACxI,WAAK,IAAI,aAAa;AAAA,IACxB,CAAC;AACD,SAAK,MAAM,KAAK,eAAe;AAC/B,SAAK,eAAe,QAAQ,KAAK,UAAU,KAAK,QAAQ,CAAC,EAAE,UAAU,eAAa;AAChF,WAAK,MAAM;AACX,WAAK,IAAI,cAAc;AAAA,IACzB,CAAC;AAAA,EACH;AAAA,EACA,YAAY,SAAS;AACnB,SAAK,qBAAqB,OAAO;AAAA,EACnC;AAAA,EACA,kBAAkB;AAChB,SAAK,aAAa;AAAA,EACpB;AAAA,EACA,cAAc;AACZ,SAAK,SAAS,KAAK,IAAI;AACvB,SAAK,SAAS,SAAS;AAAA,EACzB;AA6HF;AA3HI,iBAAK,OAAO,SAAS,wBAAwB,GAAG;AAC9C,SAAO,KAAK,KAAK,kBAAoB,kBAAuB,iBAAiB,GAAM,kBAAuB,eAAe,GAAM,kBAAqB,iBAAiB,GAAM,kBAAqB,gBAAgB,CAAC,GAAM,kBAAuB,wBAAwB,CAAC,CAAC;AAC1Q;AAGA,iBAAK,OAAyB,kBAAkB;AAAA,EAC9C,MAAM;AAAA,EACN,WAAW,CAAC,CAAC,SAAS,CAAC;AAAA,EACvB,gBAAgB,SAAS,+BAA+B,IAAI,KAAK,UAAU;AACzE,QAAI,KAAK,GAAG;AACV,MAAG,eAAe,UAAU,KAAK,CAAC;AAAA,IACpC;AACA,QAAI,KAAK,GAAG;AACV,UAAI;AACJ,MAAG,eAAe,KAAQ,YAAY,CAAC,MAAM,IAAI,sBAAsB,GAAG;AAAA,IAC5E;AAAA,EACF;AAAA,EACA,WAAW,SAAS,sBAAsB,IAAI,KAAK;AACjD,QAAI,KAAK,GAAG;AACV,MAAG,YAAY,0BAA0B,GAAG,wBAAwB;AAAA,IACtE;AACA,QAAI,KAAK,GAAG;AACV,UAAI;AACJ,MAAG,eAAe,KAAQ,YAAY,CAAC,MAAM,IAAI,2BAA2B,GAAG;AAAA,IACjF;AAAA,EACF;AAAA,EACA,UAAU;AAAA,EACV,cAAc,SAAS,6BAA6B,IAAI,KAAK;AAC3D,QAAI,KAAK,GAAG;AACV,MAAG,YAAY,mBAAmB,IAAI,YAAY,EAAE,6BAA6B,IAAI,gBAAgB,IAAI,UAAU,EAAE,6BAA6B,IAAI,gBAAgB,CAAC,IAAI,UAAU,EAAE,8BAA8B,IAAI,gBAAgB,IAAI,WAAW,EAAE,YAAY,CAAC,IAAI,YAAY,EAAE,gBAAgB,IAAI,QAAQ,KAAK,EAAE,sBAAsB,CAAC,IAAI,gBAAgB,IAAI,UAAU,EAAE,sBAAsB,CAAC,IAAI,gBAAgB,CAAC,IAAI,UAAU,EAAE,uBAAuB,CAAC,IAAI,gBAAgB,IAAI,WAAW,EAAE,kBAAkB,IAAI,WAAW;AAAA,IACnhB;AAAA,EACF;AAAA,EACA,QAAQ;AAAA,IACN,YAAY;AAAA,IACZ,iBAAiB;AAAA,IACjB,aAAa;AAAA,IACb,aAAa;AAAA,IACb,cAAc;AAAA,IACd,iBAAiB;AAAA,IACjB,cAAc;AAAA,IACd,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,aAAa;AAAA,IACb,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,gBAAgB;AAAA,IAChB,mBAAmB;AAAA,IACnB,sBAAsB;AAAA,IACtB,sBAAsB;AAAA,IACtB,iBAAiB;AAAA,IACjB,gBAAgB;AAAA,IAChB,cAAc;AAAA,IACd,QAAQ;AAAA,IACR,gBAAgB;AAAA,IAChB,gBAAgB;AAAA,IAChB,eAAe;AAAA,IACf,eAAe;AAAA,IACf,cAAc;AAAA,EAChB;AAAA,EACA,SAAS;AAAA,IACP,sBAAsB;AAAA,IACtB,sBAAsB;AAAA,IACtB,qBAAqB;AAAA,IACrB,qBAAqB;AAAA,IACrB,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,eAAe;AAAA,IACf,kBAAkB;AAAA,IAClB,gBAAgB;AAAA,IAChB,eAAe;AAAA,IACf,eAAe;AAAA,IACf,cAAc;AAAA,IACd,eAAe;AAAA,IACf,UAAU;AAAA,IACV,aAAa;AAAA,EACf;AAAA,EACA,UAAU,CAAC,QAAQ;AAAA,EACnB,YAAY;AAAA,EACZ,UAAU,CAAI,mBAAmB,CAAC,eAAe;AAAA,IAC/C,SAAS;AAAA,IACT,YAAY;AAAA,EACd,GAAG;AAAA,IACD,SAAS;AAAA,IACT,aAAa,WAAW,MAAM,gBAAe;AAAA,IAC7C,OAAO;AAAA,EACT,CAAC,CAAC,GAAM,4BAA+B,sBAAyB,mBAAmB;AAAA,EACnF,OAAO;AAAA,EACP,MAAM;AAAA,EACN,QAAQ,CAAC,CAAC,GAAG,SAAS,GAAG,CAAC,GAAG,qBAAqB,GAAG,SAAS,GAAG,CAAC,GAAG,iBAAiB,GAAG,CAAC,GAAG,sBAAsB,GAAG,CAAC,GAAG,iBAAiB,GAAG,YAAY,UAAU,GAAG,CAAC,GAAG,qCAAqC,8BAA8B,YAAY,eAAe,eAAe,UAAU,GAAG,MAAM,GAAG,CAAC,GAAG,qCAAqC,8BAA8B,iBAAiB,GAAG,MAAM,GAAG,CAAC,gBAAgB,EAAE,GAAG,CAAC,GAAG,YAAY,eAAe,aAAa,GAAG,CAAC,GAAG,iBAAiB,mBAAmB,sBAAsB,GAAG,CAAC,GAAG,oBAAoB,yBAAyB,GAAG,CAAC,GAAG,eAAe,GAAG,CAAC,GAAG,SAAS,WAAW,cAAc,GAAG,CAAC,WAAW,IAAI,GAAG,QAAQ,SAAS,aAAa,cAAc,cAAc,aAAa,cAAc,UAAU,WAAW,SAAS,aAAa,iBAAiB,qBAAqB,gBAAgB,WAAW,cAAc,gBAAgB,cAAc,kBAAkB,eAAe,eAAe,gBAAgB,eAAe,iBAAiB,mBAAmB,gBAAgB,cAAc,kBAAkB,kBAAkB,WAAW,cAAc,iBAAiB,oBAAoB,iBAAiB,iBAAiB,gBAAgB,iBAAiB,eAAe,UAAU,CAAC;AAAA,EAC3tC,UAAU,SAAS,yBAAyB,IAAI,KAAK;AACnD,QAAI,KAAK,GAAG;AACV,MAAG,eAAe,GAAG,KAAK;AAC1B,MAAG,UAAU,GAAG,SAAS,CAAC;AAC1B,MAAG,aAAa;AAChB,MAAG,eAAe,GAAG,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC;AAC1C,MAAG,UAAU,GAAG,OAAO,CAAC;AACxB,MAAG,aAAa,EAAE;AAClB,MAAG,eAAe,GAAG,OAAO,CAAC;AAC7B,MAAG,WAAW,GAAG,wDAAwD,GAAG,IAAI,+BAA+B,CAAC,EAAE,GAAG,gCAAgC,GAAG,GAAG,OAAO,CAAC;AACnK,MAAG,aAAa;AAChB,MAAG,WAAW,GAAG,wCAAwC,GAAG,IAAI,eAAe,MAAM,GAAM,sBAAsB;AAAA,IACnH;AACA,QAAI,KAAK,GAAG;AACV,MAAG,UAAU,CAAC;AACd,MAAG,WAAW,WAAW,IAAI,YAAY;AACzC,MAAG,UAAU,CAAC;AACd,MAAG,WAAW,WAAW,IAAI,iBAAiB;AAC9C,MAAG,UAAU,CAAC;AACd,MAAG,YAAY,wBAAwB,IAAI,YAAY;AACvD,MAAG,UAAU,CAAC;AACd,MAAG,WAAW,QAAQ,IAAI,eAAe;AACzC,MAAG,UAAU,CAAC;AACd,MAAG,WAAW,QAAQ,CAAC,IAAI,eAAe;AAAA,IAC5C;AAAA,EACF;AAAA,EACA,cAAc,CAAC,SAAS,0BAA0B,2BAA2B,MAAM,iBAAiB,kBAAkB,wBAAwB,SAAS,0BAA0B;AAAA,EACjL,eAAe;AAAA,EACf,MAAM;AAAA,IACJ,WAAW,CAAC,kBAAkB;AAAA,EAChC;AAAA,EACA,iBAAiB;AACnB,CAAC;AA7YL,IAAM,kBAAN;AAgZA,WAAW,CAAC,aAAa,GAAG,WAAW,CAAC,GAAG,gBAAgB,WAAW,cAAc,MAAM;AAC1F,WAAW,CAAC,aAAa,GAAG,WAAW,CAAC,GAAG,gBAAgB,WAAW,mBAAmB,MAAM;AAC/F,WAAW,CAAC,aAAa,GAAG,WAAW,CAAC,GAAG,gBAAgB,WAAW,eAAe,MAAM;AAC3F,WAAW,CAAC,aAAa,CAAC,GAAG,gBAAgB,WAAW,eAAe,MAAM;AAC7E,WAAW,CAAC,aAAa,CAAC,GAAG,gBAAgB,WAAW,gBAAgB,MAAM;AAC9E,WAAW,CAAC,aAAa,CAAC,GAAG,gBAAgB,WAAW,mBAAmB,MAAM;AACjF,WAAW,CAAC,aAAa,CAAC,GAAG,gBAAgB,WAAW,gBAAgB,MAAM;AAC9E,WAAW,CAAC,aAAa,CAAC,GAAG,gBAAgB,WAAW,cAAc,MAAM;AAC5E,WAAW,CAAC,aAAa,CAAC,GAAG,gBAAgB,WAAW,eAAe,MAAM;AAC7E,WAAW,CAAC,aAAa,CAAC,GAAG,gBAAgB,WAAW,eAAe,MAAM;AAC7E,WAAW,CAAC,aAAa,CAAC,GAAG,gBAAgB,WAAW,eAAe,MAAM;AAC7E,WAAW,CAAC,aAAa,CAAC,GAAG,gBAAgB,WAAW,cAAc,MAAM;AAAA,CAC3E,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,iBAAiB,CAAC;AAAA,IACxF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,UAAU;AAAA,MACV,YAAY,CAAC,kBAAkB;AAAA,MAC/B,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAkFV,iBAAiB,wBAAwB;AAAA,MACzC,WAAW,CAAC,eAAe;AAAA,QACzB,SAAS;AAAA,QACT,YAAY;AAAA,MACd,GAAG;AAAA,QACD,SAAS;AAAA,QACT,aAAa,WAAW,MAAM,eAAe;AAAA,QAC7C,OAAO;AAAA,MACT,CAAC;AAAA,MACD,MAAM;AAAA,QACJ,2BAA2B;AAAA,QAC3B,qCAAqC;AAAA,QACrC,qCAAqC;AAAA,QACrC,sCAAsC;AAAA,QACtC,oBAAoB;AAAA,QACpB,wBAAwB;AAAA,QACxB,8BAA8B;AAAA,QAC9B,8BAA8B;AAAA,QAC9B,+BAA+B;AAAA,QAC/B,0BAA0B;AAAA,MAC5B;AAAA,MACA,SAAS,CAAC,SAAS,0BAA0B,2BAA2B,MAAM,iBAAiB,kBAAkB,wBAAwB,SAAS,0BAA0B;AAAA,MAC5K,YAAY;AAAA,IACd,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAW;AAAA,EACb,GAAG;AAAA,IACD,MAAW;AAAA,EACb,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,IACT,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAW;AAAA,IACX,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC,GAAG;AAAA,IACF,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,IACD,iBAAiB,CAAC;AAAA,MAChB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,IACR,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,IACR,CAAC;AAAA,IACD,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,IACR,CAAC;AAAA,IACD,iBAAiB,CAAC;AAAA,MAChB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,IACR,CAAC;AAAA,IACD,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,IACR,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,IACR,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,IACR,CAAC;AAAA,IACD,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,IACD,gBAAgB,CAAC;AAAA,MACf,MAAM;AAAA,IACR,CAAC;AAAA,IACD,mBAAmB,CAAC;AAAA,MAClB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,sBAAsB,CAAC;AAAA,MACrB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,sBAAsB,CAAC;AAAA,MACrB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,iBAAiB,CAAC;AAAA,MAChB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,gBAAgB,CAAC;AAAA,MACf,MAAM;AAAA,IACR,CAAC;AAAA,IACD,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,IACR,CAAC;AAAA,IACD,QAAQ,CAAC;AAAA,MACP,MAAM;AAAA,IACR,CAAC;AAAA,IACD,gBAAgB,CAAC;AAAA,MACf,MAAM;AAAA,IACR,CAAC;AAAA,IACD,gBAAgB,CAAC;AAAA,MACf,MAAM;AAAA,IACR,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,IACR,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,IACR,CAAC;AAAA,IACD,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,IACR,CAAC;AAAA,IACD,qBAAqB,CAAC;AAAA,MACpB,MAAM;AAAA,MACN,MAAM,CAAC,kBAAkB;AAAA,QACvB,QAAQ;AAAA,MACV,CAAC;AAAA,IACH,CAAC;AAAA,IACD,0BAA0B,CAAC;AAAA,MACzB,MAAM;AAAA,MACN,MAAM,CAAC,0BAA0B;AAAA,QAC/B,MAAM;AAAA,MACR,CAAC;AAAA,IACH,CAAC;AAAA,IACD,sBAAsB,CAAC;AAAA,MACrB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,sBAAsB,CAAC;AAAA,MACrB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,qBAAqB,CAAC;AAAA,MACpB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,qBAAqB,CAAC;AAAA,MACpB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,SAAS,CAAC;AAAA,MACR,MAAM;AAAA,IACR,CAAC;AAAA,IACD,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,IACR,CAAC;AAAA,IACD,kBAAkB,CAAC;AAAA,MACjB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,gBAAgB,CAAC;AAAA,MACf,MAAM;AAAA,IACR,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,IACR,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,IACR,CAAC;AAAA,IACD,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,IACR,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,IACR,CAAC;AAAA,IACD,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,IACR,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AAMH,IAAM,gBAAN,MAAM,cAAa;AAkBnB;AAhBI,cAAK,OAAO,SAAS,qBAAqB,GAAG;AAC3C,SAAO,KAAK,KAAK,eAAc;AACjC;AAGA,cAAK,OAAyB,iBAAiB;AAAA,EAC7C,MAAM;AAAA,EACN,SAAS,CAAC,iBAAiB,4BAA4B,uBAAuB,6BAA6B,oCAAoC,0BAA0B,4BAA4B;AAAA,EACrM,SAAS,CAAC,iBAAiB,4BAA4B,qBAAqB;AAC9E,CAAC;AAGD,cAAK,OAAyB,iBAAiB;AAAA,EAC7C,SAAS,CAAC,iBAAiB,4BAA4B,6BAA6B,wBAAwB;AAC9G,CAAC;AAhBL,IAAM,eAAN;AAAA,CAmBC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,cAAc,CAAC;AAAA,IACrF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,SAAS,CAAC,iBAAiB,4BAA4B,uBAAuB,6BAA6B,oCAAoC,0BAA0B,4BAA4B;AAAA,MACrM,SAAS,CAAC,iBAAiB,4BAA4B,qBAAqB;AAAA,IAC9E,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;",
  "names": []
}
