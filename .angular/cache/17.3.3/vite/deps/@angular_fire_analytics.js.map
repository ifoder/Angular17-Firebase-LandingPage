{
  "version": 3,
  "sources": ["../../../../../node_modules/@angular/fire/fesm2022/angular-fire-analytics.mjs"],
  "sourcesContent": ["import { ɵgetAllInstancesOf, ɵisSupportedError, ɵzoneWrap, VERSION, ɵgetDefaultInstanceOf, ɵAngularFireSchedulers } from '@angular/fire';\nimport { from, timer, of } from 'rxjs';\nimport { concatMap, distinct, filter, switchMap, map, groupBy, distinctUntilChanged, startWith, pairwise, mergeMap } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { Injectable, Optional, InjectionToken, APP_INITIALIZER, NgModule, NgZone, Injector } from '@angular/core';\nimport { FirebaseApp, FirebaseApps } from '@angular/fire/app';\nimport { registerVersion } from 'firebase/app';\nimport { isSupported as isSupported$1, getAnalytics as getAnalytics$1, getGoogleAnalyticsClientId as getGoogleAnalyticsClientId$1, initializeAnalytics as initializeAnalytics$1, logEvent as logEvent$1, setAnalyticsCollectionEnabled as setAnalyticsCollectionEnabled$1, setConsent as setConsent$1, setCurrentScreen as setCurrentScreen$1, setDefaultEventParameters as setDefaultEventParameters$1, settings as settings$1, setUserId as setUserId$1, setUserProperties as setUserProperties$1 } from 'firebase/analytics';\nexport * from 'firebase/analytics';\nimport * as i2 from '@angular/platform-browser';\nimport * as i1$1 from '@angular/router';\nimport { ActivationEnd, ɵEmptyOutletComponent } from '@angular/router';\nimport * as i1 from '@angular/fire/auth';\nimport { authState } from '@angular/fire/auth';\nclass Analytics {\n  constructor(analytics) {\n    return analytics;\n  }\n}\nconst ANALYTICS_PROVIDER_NAME = 'analytics';\nclass AnalyticsInstances {\n  constructor() {\n    return ɵgetAllInstancesOf(ANALYTICS_PROVIDER_NAME);\n  }\n}\nconst analyticInstance$ = timer(0, 300).pipe(concatMap(() => from(ɵgetAllInstancesOf(ANALYTICS_PROVIDER_NAME))), distinct());\nconst isAnalyticsSupportedValueSymbol = '__angularfire_symbol__analyticsIsSupportedValue';\nconst isAnalyticsSupportedPromiseSymbol = '__angularfire_symbol__analyticsIsSupported';\nglobalThis[isAnalyticsSupportedPromiseSymbol] ||= isSupported$1().then(it => globalThis[isAnalyticsSupportedValueSymbol] = it).catch(() => globalThis[isAnalyticsSupportedValueSymbol] = false);\nconst isAnalyticsSupportedFactory = {\n  async: () => globalThis[isAnalyticsSupportedPromiseSymbol],\n  sync: () => {\n    const ret = globalThis[isAnalyticsSupportedValueSymbol];\n    if (ret === undefined) {\n      throw new Error(ɵisSupportedError('Analytics'));\n    }\n    return ret;\n  }\n};\nconst isSupported = isAnalyticsSupportedFactory.async;\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst getAnalytics = ɵzoneWrap(getAnalytics$1, true);\nconst getGoogleAnalyticsClientId = ɵzoneWrap(getGoogleAnalyticsClientId$1, true);\nconst initializeAnalytics = ɵzoneWrap(initializeAnalytics$1, true);\nconst logEvent = ɵzoneWrap(logEvent$1, true);\nconst setAnalyticsCollectionEnabled = ɵzoneWrap(setAnalyticsCollectionEnabled$1, true);\nconst setConsent = ɵzoneWrap(setConsent$1, true);\nconst setCurrentScreen = ɵzoneWrap(setCurrentScreen$1, true);\nconst setDefaultEventParameters = ɵzoneWrap(setDefaultEventParameters$1, true);\nconst settings = ɵzoneWrap(settings$1, true);\nconst setUserId = ɵzoneWrap(setUserId$1, true);\nconst setUserProperties = ɵzoneWrap(setUserProperties$1, true);\nclass UserTrackingService {\n  initialized;\n  disposables = [];\n  constructor(auth, zone, injector) {\n    registerVersion('angularfire', VERSION.full, 'user-tracking');\n    let resolveInitialized;\n    this.initialized = zone.runOutsideAngular(() => new Promise(resolve => {\n      resolveInitialized = resolve;\n    }));\n    // The APP_INITIALIZER that is making isSupported() sync for the sake of convenient DI\n    // may not be done when services are initialized. Guard the functionality by first ensuring\n    // that the (global) promise has resolved, then get Analytics from the injector.\n    isSupported().then(() => {\n      const analytics = injector.get(Analytics);\n      if (analytics) {\n        this.disposables = [\n        // TODO add credential tracking back in\n        authState(auth).subscribe(user => {\n          setUserId(analytics, user?.uid);\n          resolveInitialized();\n        })];\n      } else {\n        resolveInitialized();\n      }\n    });\n  }\n  ngOnDestroy() {\n    this.disposables.forEach(it => it.unsubscribe());\n  }\n  static ɵfac = function UserTrackingService_Factory(t) {\n    return new (t || UserTrackingService)(i0.ɵɵinject(i1.Auth), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i0.Injector));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: UserTrackingService,\n    factory: UserTrackingService.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UserTrackingService, [{\n    type: Injectable\n  }], () => [{\n    type: i1.Auth\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i0.Injector\n  }], null);\n})();\nconst FIREBASE_EVENT_ORIGIN_KEY = 'firebase_event_origin';\nconst FIREBASE_PREVIOUS_SCREEN_CLASS_KEY = 'firebase_previous_class';\nconst FIREBASE_PREVIOUS_SCREEN_INSTANCE_ID_KEY = 'firebase_previous_id';\nconst FIREBASE_PREVIOUS_SCREEN_NAME_KEY = 'firebase_previous_screen';\nconst FIREBASE_SCREEN_CLASS_KEY = 'firebase_screen_class';\nconst FIREBASE_SCREEN_INSTANCE_ID_KEY = 'firebase_screen_id';\nconst FIREBASE_SCREEN_NAME_KEY = 'firebase_screen';\nconst OUTLET_KEY = 'outlet';\nconst PAGE_PATH_KEY = 'page_path';\nconst PAGE_TITLE_KEY = 'page_title';\nconst SCREEN_CLASS_KEY = 'screen_class';\nconst SCREEN_NAME_KEY = 'screen_name';\nconst SCREEN_VIEW_EVENT = 'screen_view';\nconst EVENT_ORIGIN_AUTO = 'auto';\nconst SCREEN_INSTANCE_DELIMITER = '#';\n// this is an INT64 in iOS/Android but use INT32 cause javascript\nlet nextScreenInstanceID = Math.floor(Math.random() * (2 ** 32 - 1)) - 2 ** 31;\nconst knownScreenInstanceIDs = {};\nconst getScreenInstanceID = params => {\n  // unique the screen class against the outlet name\n  const screenInstanceKey = [params[SCREEN_CLASS_KEY], params[OUTLET_KEY]].join(SCREEN_INSTANCE_DELIMITER);\n  // eslint-disable-next-line no-prototype-builtins\n  if (knownScreenInstanceIDs.hasOwnProperty(screenInstanceKey)) {\n    return knownScreenInstanceIDs[screenInstanceKey];\n  } else {\n    const ret = nextScreenInstanceID++;\n    knownScreenInstanceIDs[screenInstanceKey] = ret;\n    return ret;\n  }\n};\nconst ɵscreenViewEvent = (router, title, componentFactoryResolver) => {\n  const activationEndEvents = router.events.pipe(filter(e => e instanceof ActivationEnd));\n  return activationEndEvents.pipe(switchMap(activationEnd => {\n    // router parseUrl is having trouble with outlets when they're empty\n    // e.g, /asdf/1(bob://sally:asdf), so put another slash in when empty\n    const urlTree = router.parseUrl(router.url.replace(/(?:\\().+(?:\\))/g, a => a.replace('://', ':///')));\n    const pagePath = urlTree.root.children[activationEnd.snapshot.outlet]?.toString() || '';\n    const actualSnapshot = router.routerState.root.children.map(it => it).find(it => it.outlet === activationEnd.snapshot.outlet);\n    if (!actualSnapshot) {\n      return of(null);\n    }\n    let actualDeep = actualSnapshot;\n    while (actualDeep.firstChild) {\n      actualDeep = actualDeep.firstChild;\n    }\n    const screenName = actualDeep.pathFromRoot.map(s => s.routeConfig?.path).filter(it => it).join('/') || '/';\n    const params = {\n      [SCREEN_NAME_KEY]: screenName,\n      [PAGE_PATH_KEY]: `/${pagePath}`,\n      [FIREBASE_EVENT_ORIGIN_KEY]: EVENT_ORIGIN_AUTO,\n      [FIREBASE_SCREEN_NAME_KEY]: screenName,\n      [OUTLET_KEY]: activationEnd.snapshot.outlet\n    };\n    if (title) {\n      params[PAGE_TITLE_KEY] = title.getTitle();\n    }\n    let component = actualSnapshot.component;\n    if (component) {\n      if (component === ɵEmptyOutletComponent) {\n        let deepSnapshot = activationEnd.snapshot;\n        // TODO when might there be mutple children, different outlets? explore\n        while (deepSnapshot.firstChild) {\n          deepSnapshot = deepSnapshot.firstChild;\n        }\n        component = deepSnapshot.component;\n      }\n    } else {\n      component = activationEnd.snapshot.component;\n    }\n    if (typeof component === 'string') {\n      return of({\n        ...params,\n        [SCREEN_CLASS_KEY]: component\n      });\n    } else if (component) {\n      const componentFactory = componentFactoryResolver.resolveComponentFactory(component);\n      return of({\n        ...params,\n        [SCREEN_CLASS_KEY]: componentFactory.selector\n      });\n    }\n    // lazy loads cause extra activations, ignore\n    return of(null);\n  }), filter(it => !!it), map(params => ({\n    [FIREBASE_SCREEN_CLASS_KEY]: params[SCREEN_CLASS_KEY],\n    [FIREBASE_SCREEN_INSTANCE_ID_KEY]: getScreenInstanceID(params),\n    ...params\n  })), groupBy(it => it[OUTLET_KEY]), mergeMap(it => it.pipe(distinctUntilChanged((a, b) => JSON.stringify(a) === JSON.stringify(b)), startWith(undefined), pairwise(), map(([prior, current]) => prior ? {\n    [FIREBASE_PREVIOUS_SCREEN_CLASS_KEY]: prior[SCREEN_CLASS_KEY],\n    [FIREBASE_PREVIOUS_SCREEN_NAME_KEY]: prior[SCREEN_NAME_KEY],\n    [FIREBASE_PREVIOUS_SCREEN_INSTANCE_ID_KEY]: prior[FIREBASE_SCREEN_INSTANCE_ID_KEY],\n    ...current\n  } : current))));\n};\nclass ScreenTrackingService {\n  disposable;\n  constructor(router, title, componentFactoryResolver, zone, userTrackingService, injector) {\n    registerVersion('angularfire', VERSION.full, 'screen-tracking');\n    // The APP_INITIALIZER that is making isSupported() sync for the sake of convenient DI\n    // may not be done when services are initialized. Guard the functionality by first ensuring\n    // that the (global) promise has resolved, then get Analytics from the injector.\n    isSupported().then(() => {\n      const analytics = injector.get(Analytics);\n      if (!router || !analytics) {\n        return;\n      }\n      zone.runOutsideAngular(() => {\n        this.disposable = ɵscreenViewEvent(router, title, componentFactoryResolver).pipe(switchMap(async params => {\n          if (userTrackingService) {\n            await userTrackingService.initialized;\n          }\n          return logEvent(analytics, SCREEN_VIEW_EVENT, params);\n        })).subscribe();\n      });\n    });\n  }\n  ngOnDestroy() {\n    if (this.disposable) {\n      this.disposable.unsubscribe();\n    }\n  }\n  static ɵfac = function ScreenTrackingService_Factory(t) {\n    return new (t || ScreenTrackingService)(i0.ɵɵinject(i1$1.Router, 8), i0.ɵɵinject(i2.Title, 8), i0.ɵɵinject(i0.ComponentFactoryResolver), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(UserTrackingService, 8), i0.ɵɵinject(i0.Injector));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ScreenTrackingService,\n    factory: ScreenTrackingService.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScreenTrackingService, [{\n    type: Injectable\n  }], () => [{\n    type: i1$1.Router,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i2.Title,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i0.ComponentFactoryResolver\n  }, {\n    type: i0.NgZone\n  }, {\n    type: UserTrackingService,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i0.Injector\n  }], null);\n})();\nconst PROVIDED_ANALYTICS_INSTANCES = new InjectionToken('angularfire2.analytics-instances');\nfunction defaultAnalyticsInstanceFactory(provided, defaultApp) {\n  if (!isAnalyticsSupportedFactory.sync()) {\n    return null;\n  }\n  const defaultAnalytics = ɵgetDefaultInstanceOf(ANALYTICS_PROVIDER_NAME, provided, defaultApp);\n  return defaultAnalytics && new Analytics(defaultAnalytics);\n}\nfunction analyticsInstanceFactory(fn) {\n  return (zone, injector) => {\n    if (!isAnalyticsSupportedFactory.sync()) {\n      return null;\n    }\n    const analytics = zone.runOutsideAngular(() => fn(injector));\n    return new Analytics(analytics);\n  };\n}\nconst ANALYTICS_INSTANCES_PROVIDER = {\n  provide: AnalyticsInstances,\n  deps: [[new Optional(), PROVIDED_ANALYTICS_INSTANCES]]\n};\nconst DEFAULT_ANALYTICS_INSTANCE_PROVIDER = {\n  provide: Analytics,\n  useFactory: defaultAnalyticsInstanceFactory,\n  deps: [[new Optional(), PROVIDED_ANALYTICS_INSTANCES], FirebaseApp]\n};\nclass AnalyticsModule {\n  constructor(_screenTrackingService, _userTrackingService) {\n    registerVersion('angularfire', VERSION.full, 'analytics');\n  }\n  static ɵfac = function AnalyticsModule_Factory(t) {\n    return new (t || AnalyticsModule)(i0.ɵɵinject(ScreenTrackingService, 8), i0.ɵɵinject(UserTrackingService, 8));\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: AnalyticsModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [DEFAULT_ANALYTICS_INSTANCE_PROVIDER, ANALYTICS_INSTANCES_PROVIDER, {\n      provide: APP_INITIALIZER,\n      useValue: isAnalyticsSupportedFactory.async,\n      multi: true\n    }]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AnalyticsModule, [{\n    type: NgModule,\n    args: [{\n      providers: [DEFAULT_ANALYTICS_INSTANCE_PROVIDER, ANALYTICS_INSTANCES_PROVIDER, {\n        provide: APP_INITIALIZER,\n        useValue: isAnalyticsSupportedFactory.async,\n        multi: true\n      }]\n    }]\n  }], () => [{\n    type: ScreenTrackingService,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: UserTrackingService,\n    decorators: [{\n      type: Optional\n    }]\n  }], null);\n})();\nfunction provideAnalytics(fn, ...deps) {\n  return {\n    ngModule: AnalyticsModule,\n    providers: [{\n      provide: PROVIDED_ANALYTICS_INSTANCES,\n      useFactory: analyticsInstanceFactory(fn),\n      multi: true,\n      deps: [NgZone, Injector, ɵAngularFireSchedulers, FirebaseApps, ...deps]\n    }]\n  };\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Analytics, AnalyticsInstances, AnalyticsModule, ScreenTrackingService, UserTrackingService, analyticInstance$, getAnalytics, getGoogleAnalyticsClientId, initializeAnalytics, isSupported, logEvent, provideAnalytics, setAnalyticsCollectionEnabled, setConsent, setCurrentScreen, setDefaultEventParameters, setUserId, setUserProperties, settings, ɵscreenViewEvent };\n"],
  "mappings": "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",
  "names": ["isSupported", "getAnalytics", "getGoogleAnalyticsClientId", "initializeAnalytics", "logEvent", "setAnalyticsCollectionEnabled", "setConsent", "setCurrentScreen", "setDefaultEventParameters", "settings", "setUserId", "setUserProperties"]
}
